!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABBREV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/punkt.py	/^    ABBREV = 0.3$/;"	v	class:PunktTrainer
ABBREV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/punkt.py	/^    ABBREV = 0.3$/;"	v	class:PunktTrainer
ABBREV_BACKOFF	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/punkt.py	/^    ABBREV_BACKOFF = 5$/;"	v	class:PunktTrainer
ABBREV_BACKOFF	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/punkt.py	/^    ABBREV_BACKOFF = 5$/;"	v	class:PunktTrainer
ACCEPT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/request.py	/^ACCEPT_ENCODING = "gzip,deflate"$/;"	v
ACCEPT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/request.py	/^ACCEPT_ENCODING = "gzip,deflate"$/;"	v
ACCEPT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/request.py	/^ACCEPT_ENCODING = "gzip,deflate"$/;"	v
ACCEPT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/request.py	/^ACCEPT_ENCODING = "gzip,deflate"$/;"	v
ACCEPT_ENCODING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/request.py	/^ACCEPT_ENCODING = "gzip,deflate"$/;"	v
ACCEPT_ENCODING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/request.py	/^ACCEPT_ENCODING = "gzip,deflate"$/;"	v
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ACCESS_KEY = 'AWSAccessKeyId'$/;"	v	class:OriginalEC2Provider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ACCESS_KEY = 'AWS_ACCESS_KEY_ID'$/;"	v	class:EnvProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:BotoProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:ConfigProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:SharedCredentialProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ACCESS_KEY = 'AWSAccessKeyId'$/;"	v	class:OriginalEC2Provider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ACCESS_KEY = 'AWS_ACCESS_KEY_ID'$/;"	v	class:EnvProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:BotoProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:ConfigProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:SharedCredentialProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ACCESS_KEY = 'AWSAccessKeyId'$/;"	v	class:OriginalEC2Provider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ACCESS_KEY = 'AWS_ACCESS_KEY_ID'$/;"	v	class:EnvProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:BotoProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:ConfigProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:SharedCredentialProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ACCESS_KEY = 'AWSAccessKeyId'$/;"	v	class:OriginalEC2Provider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ACCESS_KEY = 'AWS_ACCESS_KEY_ID'$/;"	v	class:EnvProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:BotoProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:ConfigProvider
ACCESS_KEY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:SharedCredentialProvider
ACCESS_KEY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'AWSAccessKeyId'$/;"	v	class:OriginalEC2Provider
ACCESS_KEY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'AWS_ACCESS_KEY_ID'$/;"	v	class:EnvProvider
ACCESS_KEY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:BotoProvider
ACCESS_KEY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:ConfigProvider
ACCESS_KEY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:SharedCredentialProvider
ACCESS_KEY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'AWSAccessKeyId'$/;"	v	class:OriginalEC2Provider
ACCESS_KEY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'AWS_ACCESS_KEY_ID'$/;"	v	class:EnvProvider
ACCESS_KEY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:BotoProvider
ACCESS_KEY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:ConfigProvider
ACCESS_KEY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ACCESS_KEY = 'aws_access_key_id'$/;"	v	class:SharedCredentialProvider
ACO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^ACO = 5  # accent capital other$/;"	v
ACO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^ACO = 5  # accent capital other$/;"	v
ACTIVE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/propbank.py	/^    ACTIVE = "a"$/;"	v	class:PropbankInflection
ACTIVE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/propbank.py	/^    ACTIVE = "a"$/;"	v	class:PropbankInflection
ACV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^ACV = 4  # accent capital vowel$/;"	v
ACV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^ACV = 4  # accent capital vowel$/;"	v
ADDITIONAL_CORPORA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/download_corpora.py	/^ADDITIONAL_CORPORA = [$/;"	v
ADDITIONAL_CORPORA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/download_corpora.py	/^ADDITIONAL_CORPORA = [$/;"	v
AFTER_BAR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_termui_impl.py	/^    AFTER_BAR = "\\033[?25h\\n"$/;"	v
AFTER_BAR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_termui_impl.py	/^    AFTER_BAR = "\\n"$/;"	v
AFTER_BAR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_termui_impl.py	/^    AFTER_BAR = "\\033[?25h\\n"$/;"	v
AFTER_BAR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_termui_impl.py	/^    AFTER_BAR = "\\n"$/;"	v
AIOHttpConnection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^class AIOHttpConnection(AsyncConnection):$/;"	c
AIOHttpConnection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^class AIOHttpConnection(AsyncConnection):$/;"	c
ALGORITHMS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/maxent.py	/^    ALGORITHMS = ["GIS", "IIS", "MEGAM", "TADM"]$/;"	v	class:MaxentClassifier
ALGORITHMS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/maxent.py	/^    ALGORITHMS = ["GIS", "IIS", "MEGAM", "TADM"]$/;"	v	class:MaxentClassifier
ALIAS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/s3/transfer.py	/^    ALIAS = {$/;"	v	class:TransferConfig
ALIAS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/s3/transfer.py	/^    ALIAS = {$/;"	v	class:TransferConfig
ALIAS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/s3/transfer.py	/^    ALIAS = {$/;"	v	class:TransferConfig
ALIAS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/s3/transfer.py	/^    ALIAS = {$/;"	v	class:TransferConfig
ALIAS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/s3/transfer.py	/^    ALIAS = {$/;"	v	class:TransferConfig
ALIAS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/s3/transfer.py	/^    ALIAS = {$/;"	v	class:TransferConfig
ALL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    ALL = 0x1F$/;"	v	class:LanguageFilter
ALL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    ALL = 20$/;"	v	class:Categories
ALL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/hole.py	/^    ALL = "ALL"$/;"	v	class:Constants
ALL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    ALL = "all"$/;"	v	class:Tokens
ALL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/twitter/twitter_demo.py	/^ALL = [$/;"	v
ALL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    ALL = 0x1F$/;"	v	class:LanguageFilter
ALL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    ALL = 20$/;"	v	class:Categories
ALL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/hole.py	/^    ALL = "ALL"$/;"	v	class:Constants
ALL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    ALL = "all"$/;"	v	class:Tokens
ALL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/twitter/twitter_demo.py	/^ALL = [$/;"	v
ALLOWED_COPY_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/manager.py	/^    ALLOWED_COPY_ARGS = ALLOWED_UPLOAD_ARGS + [$/;"	v	class:TransferManager
ALLOWED_COPY_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/manager.py	/^    ALLOWED_COPY_ARGS = ALLOWED_UPLOAD_ARGS + [$/;"	v	class:TransferManager
ALLOWED_COPY_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/manager.py	/^    ALLOWED_COPY_ARGS = ALLOWED_UPLOAD_ARGS + [$/;"	v	class:TransferManager
ALLOWED_COPY_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/manager.py	/^    ALLOWED_COPY_ARGS = ALLOWED_UPLOAD_ARGS + [$/;"	v	class:TransferManager
ALLOWED_COPY_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_COPY_ARGS = ALLOWED_UPLOAD_ARGS + [$/;"	v	class:TransferManager
ALLOWED_COPY_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_COPY_ARGS = ALLOWED_UPLOAD_ARGS + [$/;"	v	class:TransferManager
ALLOWED_DELETE_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/manager.py	/^    ALLOWED_DELETE_ARGS = [$/;"	v	class:TransferManager
ALLOWED_DELETE_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/manager.py	/^    ALLOWED_DELETE_ARGS = [$/;"	v	class:TransferManager
ALLOWED_DELETE_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/manager.py	/^    ALLOWED_DELETE_ARGS = [$/;"	v	class:TransferManager
ALLOWED_DELETE_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/manager.py	/^    ALLOWED_DELETE_ARGS = [$/;"	v	class:TransferManager
ALLOWED_DELETE_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_DELETE_ARGS = [$/;"	v	class:TransferManager
ALLOWED_DELETE_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_DELETE_ARGS = [$/;"	v	class:TransferManager
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/s3/transfer.py	/^    ALLOWED_DOWNLOAD_ARGS = TransferManager.ALLOWED_DOWNLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/__init__.py	/^    ALLOWED_DOWNLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/constants.py	/^ALLOWED_DOWNLOAD_ARGS = [$/;"	v
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/manager.py	/^    ALLOWED_DOWNLOAD_ARGS = ALLOWED_DOWNLOAD_ARGS$/;"	v	class:TransferManager
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/s3/transfer.py	/^    ALLOWED_DOWNLOAD_ARGS = TransferManager.ALLOWED_DOWNLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/__init__.py	/^    ALLOWED_DOWNLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/constants.py	/^ALLOWED_DOWNLOAD_ARGS = [$/;"	v
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/manager.py	/^    ALLOWED_DOWNLOAD_ARGS = ALLOWED_DOWNLOAD_ARGS$/;"	v	class:TransferManager
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/s3/transfer.py	/^    ALLOWED_DOWNLOAD_ARGS = TransferManager.ALLOWED_DOWNLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/__init__.py	/^    ALLOWED_DOWNLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/constants.py	/^ALLOWED_DOWNLOAD_ARGS = [$/;"	v
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/manager.py	/^    ALLOWED_DOWNLOAD_ARGS = ALLOWED_DOWNLOAD_ARGS$/;"	v	class:TransferManager
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/s3/transfer.py	/^    ALLOWED_DOWNLOAD_ARGS = TransferManager.ALLOWED_DOWNLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/__init__.py	/^    ALLOWED_DOWNLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/constants.py	/^ALLOWED_DOWNLOAD_ARGS = [$/;"	v
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/manager.py	/^    ALLOWED_DOWNLOAD_ARGS = ALLOWED_DOWNLOAD_ARGS$/;"	v	class:TransferManager
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/s3/transfer.py	/^    ALLOWED_DOWNLOAD_ARGS = TransferManager.ALLOWED_DOWNLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/__init__.py	/^    ALLOWED_DOWNLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/constants.py	/^ALLOWED_DOWNLOAD_ARGS = [$/;"	v
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_DOWNLOAD_ARGS = ALLOWED_DOWNLOAD_ARGS$/;"	v	class:TransferManager
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/s3/transfer.py	/^    ALLOWED_DOWNLOAD_ARGS = TransferManager.ALLOWED_DOWNLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/__init__.py	/^    ALLOWED_DOWNLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/constants.py	/^ALLOWED_DOWNLOAD_ARGS = [$/;"	v
ALLOWED_DOWNLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_DOWNLOAD_ARGS = ALLOWED_DOWNLOAD_ARGS$/;"	v	class:TransferManager
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/s3/transfer.py	/^    ALLOWED_UPLOAD_ARGS = TransferManager.ALLOWED_UPLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/__init__.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/manager.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:TransferManager
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/s3/transfer.py	/^    ALLOWED_UPLOAD_ARGS = TransferManager.ALLOWED_UPLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/__init__.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/manager.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:TransferManager
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/s3/transfer.py	/^    ALLOWED_UPLOAD_ARGS = TransferManager.ALLOWED_UPLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/__init__.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/manager.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:TransferManager
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/s3/transfer.py	/^    ALLOWED_UPLOAD_ARGS = TransferManager.ALLOWED_UPLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/__init__.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/manager.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:TransferManager
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/s3/transfer.py	/^    ALLOWED_UPLOAD_ARGS = TransferManager.ALLOWED_UPLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/__init__.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:TransferManager
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/s3/transfer.py	/^    ALLOWED_UPLOAD_ARGS = TransferManager.ALLOWED_UPLOAD_ARGS$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/__init__.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:S3Transfer
ALLOWED_UPLOAD_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/manager.py	/^    ALLOWED_UPLOAD_ARGS = [$/;"	v	class:TransferManager
ALLTEMPLATES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tbl/template.py	/^    ALLTEMPLATES = []$/;"	v	class:Template
ALLTEMPLATES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tbl/template.py	/^    ALLTEMPLATES = []$/;"	v	class:Template
ALL_ASPECTS	TwitterStreamWithAWS/global_params.py	/^ALL_ASPECTS = [$/;"	v
ALL_COMPLETED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    ALL_COMPLETED = 'ALL_COMPLETED'$/;"	v
ALL_COMPLETED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    ALL_COMPLETED = 'ALL_COMPLETED'$/;"	v
ALL_CORPORA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/download_corpora.py	/^ALL_CORPORA = MIN_CORPORA + ADDITIONAL_CORPORA$/;"	v
ALL_CORPORA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/download_corpora.py	/^ALL_CORPORA = MIN_CORPORA + ADDITIONAL_CORPORA$/;"	v
ALL_LIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    ALL_LIST = ["all", "forall"]$/;"	v	class:Tokens
ALL_LIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    ALL_LIST = ["all", "forall"]$/;"	v	class:Tokens
ALL_SUBREDDIT_REPRESETED_COUNTRY_SUBREDDIT	TwitterStreamWithAWS/global_params.py	/^ALL_SUBREDDIT_REPRESETED_COUNTRY_SUBREDDIT = ["CoronavirusUS", "coronavirusUK"]$/;"	v
ALL_SUBREDDIT_REPRESETED_GENERAL_COVID_SUBREDDIT	TwitterStreamWithAWS/global_params.py	/^ALL_SUBREDDIT_REPRESETED_GENERAL_COVID_SUBREDDIT = [$/;"	v
ALL_SUBREDDIT_REPRESETED_REGION_COVID_SUBREDDIT	TwitterStreamWithAWS/global_params.py	/^ALL_SUBREDDIT_REPRESETED_REGION_COVID_SUBREDDIT = [$/;"	v
ALL_SUBREDDIT_REPRESETED_STATES_COVID_SUBREDDIT	TwitterStreamWithAWS/global_params.py	/^ALL_SUBREDDIT_REPRESETED_STATES_COVID_SUBREDDIT = [$/;"	v
ALL_VALID_BACKENDS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_parallel.py	/^ALL_VALID_BACKENDS = [None] + sorted(BACKENDS.keys())$/;"	v
ALL_VALID_BACKENDS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_parallel.py	/^ALL_VALID_BACKENDS = [None] + sorted(BACKENDS.keys())$/;"	v
ALNUM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^ALNUM = ALPHA | DIGITS$/;"	v
ALNUM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^ALNUM = ALPHA | DIGITS$/;"	v
ALPHA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^ALPHA = frozenset(string.ascii_letters)$/;"	v
ALPHA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^    ALPHA = "abcdefghijklmnopqrstuvwxyz"$/;"	v	class:Spelling
ALPHA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^ALPHA = frozenset(string.ascii_letters)$/;"	v
ALPHA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^    ALPHA = "abcdefghijklmnopqrstuvwxyz"$/;"	v	class:Spelling
ALPN_PROTOCOLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/ssl_.py	/^ALPN_PROTOCOLS = ["http\/1.1"]$/;"	v
ALPN_PROTOCOLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/ssl_.py	/^ALPN_PROTOCOLS = ["http\/1.1"]$/;"	v
ALPN_PROTOCOLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/ssl_.py	/^ALPN_PROTOCOLS = ["http\/1.1"]$/;"	v
ALPN_PROTOCOLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/ssl_.py	/^ALPN_PROTOCOLS = ["http\/1.1"]$/;"	v
ALPN_PROTOCOLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/ssl_.py	/^ALPN_PROTOCOLS = ["http\/1.1"]$/;"	v
ALPN_PROTOCOLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/ssl_.py	/^ALPN_PROTOCOLS = ["http\/1.1"]$/;"	v
ALSO_SEE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ALSO_SEE = 15$/;"	v
ALSO_SEE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ALSO_SEE = 15$/;"	v
AMPERCENT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    AMPERCENT = re.compile("& "), "&amp; "$/;"	v	class:ToktokTokenizer
AMPERCENT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    AMPERCENT = re.compile("& "), "&amp; "$/;"	v	class:ToktokTokenizer
AMPM	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/parser/_parser.py	/^    AMPM = [("am", "a"),$/;"	v	class:parserinfo
AMPM	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/parser/_parser.py	/^    AMPM = [("am", "a"),$/;"	v	class:parserinfo
AMPM	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/parser/_parser.py	/^    AMPM = [("am", "a"),$/;"	v	class:parserinfo
AMPM	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/parser/_parser.py	/^    AMPM = [("am", "a"),$/;"	v	class:parserinfo
AMPM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/parser/_parser.py	/^    AMPM = [("am", "a"),$/;"	v	class:parserinfo
AMPM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/parser/_parser.py	/^    AMPM = [("am", "a"),$/;"	v	class:parserinfo
ANA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/pl196x.py	/^ANA = re.compile(r'ana="(.*?)"')$/;"	v
ANA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/pl196x.py	/^ANA = re.compile(r'ana="(.*?)"')$/;"	v
AND	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    AND = 10$/;"	v	class:Categories
AND	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/hole.py	/^    AND = "AND"$/;"	v	class:Constants
AND	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    AND = "&"$/;"	v	class:Tokens
AND	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    AND = 10$/;"	v	class:Categories
AND	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/hole.py	/^    AND = "AND"$/;"	v	class:Constants
AND	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    AND = "&"$/;"	v	class:Tokens
AND_LIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    AND_LIST = ["and", "&", "^"]$/;"	v	class:Tokens
AND_LIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    AND_LIST = ["and", "&", "^"]$/;"	v	class:Tokens
ANSICOLOR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/treeprettyprinter.py	/^ANSICOLOR = {$/;"	v
ANSICOLOR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/treeprettyprinter.py	/^ANSICOLOR = {$/;"	v
ANSWER_KEY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/resolution.py	/^    ANSWER_KEY = "ANSWER"$/;"	v	class:ResolutionProver
ANSWER_KEY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/resolution.py	/^    ANSWER_KEY = "ANSWER"$/;"	v	class:ResolutionProver
ANTONYM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ANTONYM = 18$/;"	v
ANTONYM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ANTONYM = 18$/;"	v
ANY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/stub.py	/^ANY = _ANY()$/;"	v
ANY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/stub.py	/^ANY = _ANY()$/;"	v
ANY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/stub.py	/^ANY = _ANY()$/;"	v
ANY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/stub.py	/^ANY = _ANY()$/;"	v
ANY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/stub.py	/^ANY = _ANY()$/;"	v
ANY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/stub.py	/^ANY = _ANY()$/;"	v
ANY_TYPE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^ANY_TYPE = AnyType()$/;"	v
ANY_TYPE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^ANY_TYPE = AnyType()$/;"	v
API	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/contrib/telegram.py	/^    API = 'https:\/\/api.telegram.org\/bot'$/;"	v	class:TelegramIO
API	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/contrib/telegram.py	/^    API = 'https:\/\/api.telegram.org\/bot'$/;"	v	class:TelegramIO
APICallAttemptEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/monitoring.py	/^class APICallAttemptEvent(BaseMonitorEvent):$/;"	c
APICallAttemptEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/monitoring.py	/^class APICallAttemptEvent(BaseMonitorEvent):$/;"	c
APICallAttemptEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/monitoring.py	/^class APICallAttemptEvent(BaseMonitorEvent):$/;"	c
APICallAttemptEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/monitoring.py	/^class APICallAttemptEvent(BaseMonitorEvent):$/;"	c
APICallAttemptEvent	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/monitoring.py	/^class APICallAttemptEvent(BaseMonitorEvent):$/;"	c
APICallAttemptEvent	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/monitoring.py	/^class APICallAttemptEvent(BaseMonitorEvent):$/;"	c
APICallEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/monitoring.py	/^class APICallEvent(BaseMonitorEvent):$/;"	c
APICallEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/monitoring.py	/^class APICallEvent(BaseMonitorEvent):$/;"	c
APICallEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/monitoring.py	/^class APICallEvent(BaseMonitorEvent):$/;"	c
APICallEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/monitoring.py	/^class APICallEvent(BaseMonitorEvent):$/;"	c
APICallEvent	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/monitoring.py	/^class APICallEvent(BaseMonitorEvent):$/;"	c
APICallEvent	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/monitoring.py	/^class APICallEvent(BaseMonitorEvent):$/;"	c
API_BASE_URL	TwitterStreamWithAWS/global_params.py	/^API_BASE_URL = "https:\/\/77ue66yk77.execute-api.us-east-2.amazonaws.com\/dev\/"$/;"	v
API_DYNAMODB	TwitterStreamWithAWS/global_params.py	/^API_DYNAMODB = API_BASE_URL + "dynamodb\/"$/;"	v
API_STREAM	TwitterStreamWithAWS/global_params.py	/^API_STREAM = API_BASE_URL + "streams\/"$/;"	v
APP	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    APP = 4$/;"	v	class:Categories
APP	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^APP = "APP"$/;"	v
APP	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    APP = 4$/;"	v	class:Categories
APP	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^APP = "APP"$/;"	v
APPENDIX	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/sinica_treebank.py	/^APPENDIX = re.compile(r"(?<=\\))#.*$")$/;"	v
APPENDIX	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/sinica_treebank.py	/^APPENDIX = re.compile(r"(?<=\\))#.*$")$/;"	v
APP_ENGINE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_compat.py	/^APP_ENGINE = "APPENGINE_RUNTIME" in os.environ and "Development\/" in os.environ.get($/;"	v
APP_ENGINE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_compat.py	/^APP_ENGINE = "APPENGINE_RUNTIME" in os.environ and "Development\/" in os.environ.get($/;"	v
ARC_EAGER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/transitionparser.py	/^    ARC_EAGER = "arc-eager"$/;"	v	class:TransitionParser
ARC_EAGER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/transitionparser.py	/^    ARC_EAGER = "arc-eager"$/;"	v	class:TransitionParser
ARC_STANDARD	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/transitionparser.py	/^    ARC_STANDARD = "arc-standard"$/;"	v	class:TransitionParser
ARC_STANDARD	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/transitionparser.py	/^    ARC_STANDARD = "arc-standard"$/;"	v	class:TransitionParser
ARFF_Formatter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/weka.py	/^class ARFF_Formatter:$/;"	c
ARFF_Formatter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/weka.py	/^class ARFF_Formatter:$/;"	c
ARLSTem	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/stem/arlstem.py	/^class ARLSTem(StemmerI):$/;"	c
ARLSTem	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/stem/arlstem.py	/^class ARLSTem(StemmerI):$/;"	c
ARROW	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^    ARROW = SymbolWidget.SYMBOLS["rightarrow"]$/;"	v	class:EdgeList
ARROW	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/cfg.py	/^    ARROW = SymbolWidget.SYMBOLS["rightarrow"]$/;"	v	class:CFGEditor
ARROW	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/cfg.py	/^    ARROW = SymbolWidget.SYMBOLS["rightarrow"]$/;"	v	class:ProductionList
ARROW	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^    ARROW = SymbolWidget.SYMBOLS["rightarrow"]$/;"	v	class:EdgeList
ARROW	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/cfg.py	/^    ARROW = SymbolWidget.SYMBOLS["rightarrow"]$/;"	v	class:CFGEditor
ARROW	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/cfg.py	/^    ARROW = SymbolWidget.SYMBOLS["rightarrow"]$/;"	v	class:ProductionList
ASC	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^ASC = 2  # ascii capital letter$/;"	v
ASC	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^ASC = 2  # ascii capital letter$/;"	v
ASCII	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/std.py	/^    ASCII = " 123456789#"$/;"	v	class:Bar
ASCII	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/std.py	/^    ASCII = " 123456789#"$/;"	v	class:Bar
ASO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^ASO = 7  # accent small other$/;"	v
ASO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^ASO = 7  # accent small other$/;"	v
ASS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^ASS = 3  # ascii small letter$/;"	v
ASS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^ASS = 3  # ascii small letter$/;"	v
ASV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^ASV = 6  # accent small vowel$/;"	v
ASV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^ASV = 6  # accent small vowel$/;"	v
ATOM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    ATOM = 0$/;"	v	class:Categories
ATOM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    ATOM = 0$/;"	v	class:Categories
ATTRIBUTE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ATTRIBUTE = 5$/;"	v
ATTRIBUTE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ATTRIBUTE = 5$/;"	v
ATTR_NAME_REGEX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^ATTR_NAME_REGEX = re.compile(r'[^.\\[\\]]+(?![^\\[]*\\])')$/;"	v
ATTR_NAME_REGEX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^ATTR_NAME_REGEX = re.compile(r'[^.\\[\\]]+(?![^\\[]*\\])')$/;"	v
ATTR_NAME_REGEX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^ATTR_NAME_REGEX = re.compile(r'[^.\\[\\]]+(?![^\\[]*\\])')$/;"	v
ATTR_NAME_REGEX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^ATTR_NAME_REGEX = re.compile(r'[^.\\[\\]]+(?![^\\[]*\\])')$/;"	v
ATTR_NAME_REGEX	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^ATTR_NAME_REGEX = re.compile(r'[^.\\[\\]]+(?![^\\[]*\\])')$/;"	v
ATTR_NAME_REGEX	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^ATTR_NAME_REGEX = re.compile(r'[^.\\[\\]]+(?![^\\[]*\\])')$/;"	v
AUTH_TYPE_MAPS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/auth.py	/^AUTH_TYPE_MAPS = {$/;"	v
AUTH_TYPE_MAPS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/auth.py	/^AUTH_TYPE_MAPS = {$/;"	v
AUTH_TYPE_MAPS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/auth.py	/^AUTH_TYPE_MAPS = {$/;"	v
AUTH_TYPE_MAPS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/auth.py	/^AUTH_TYPE_MAPS = {$/;"	v
AUTH_TYPE_MAPS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/auth.py	/^AUTH_TYPE_MAPS = {$/;"	v
AUTH_TYPE_MAPS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/auth.py	/^AUTH_TYPE_MAPS = {$/;"	v
AUTO_FORMATS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/data.py	/^AUTO_FORMATS = {$/;"	v
AUTO_FORMATS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/data.py	/^AUTO_FORMATS = {$/;"	v
AVERAGE_CHARACTERS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/translate/gale_church.py	/^    AVERAGE_CHARACTERS = 1$/;"	v	class:LanguageIndependent
AVERAGE_CHARACTERS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/translate/gale_church.py	/^    AVERAGE_CHARACTERS = 1$/;"	v	class:LanguageIndependent
AWS4Auth	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests_aws4auth/aws4auth.py	/^class AWS4Auth(AuthBase):$/;"	c
AWS4Auth	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests_aws4auth/aws4auth.py	/^class AWS4Auth(AuthBase):$/;"	c
AWS4SigningKey	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests_aws4auth/aws4signingkey.py	/^class AWS4SigningKey:$/;"	c
AWS4SigningKey	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests_aws4auth/aws4signingkey.py	/^class AWS4SigningKey:$/;"	c
AWSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSConnection(object):$/;"	c
AWSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSConnection(object):$/;"	c
AWSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSConnection(object):$/;"	c
AWSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSConnection(object):$/;"	c
AWSConnection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSConnection(object):$/;"	c
AWSConnection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSConnection(object):$/;"	c
AWSHTTPConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSHTTPConnection(AWSConnection, HTTPConnection):$/;"	c
AWSHTTPConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSHTTPConnection(AWSConnection, HTTPConnection):$/;"	c
AWSHTTPConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSHTTPConnection(AWSConnection, HTTPConnection):$/;"	c
AWSHTTPConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSHTTPConnection(AWSConnection, HTTPConnection):$/;"	c
AWSHTTPConnection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPConnection(AWSConnection, HTTPConnection):$/;"	c
AWSHTTPConnection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPConnection(AWSConnection, HTTPConnection):$/;"	c
AWSHTTPConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
AWSHTTPConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
AWSHTTPConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
AWSHTTPConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
AWSHTTPConnectionPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
AWSHTTPConnectionPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
AWSHTTPResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSHTTPResponse(HTTPResponse):$/;"	c
AWSHTTPResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSHTTPResponse(HTTPResponse):$/;"	c
AWSHTTPResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSHTTPResponse(HTTPResponse):$/;"	c
AWSHTTPResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSHTTPResponse(HTTPResponse):$/;"	c
AWSHTTPResponse	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPResponse(HTTPResponse):$/;"	c
AWSHTTPResponse	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPResponse(HTTPResponse):$/;"	c
AWSHTTPSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSHTTPSConnection(AWSConnection, VerifiedHTTPSConnection):$/;"	c
AWSHTTPSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSHTTPSConnection(AWSConnection, VerifiedHTTPSConnection):$/;"	c
AWSHTTPSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSHTTPSConnection(AWSConnection, VerifiedHTTPSConnection):$/;"	c
AWSHTTPSConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSHTTPSConnection(AWSConnection, VerifiedHTTPSConnection):$/;"	c
AWSHTTPSConnection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPSConnection(AWSConnection, VerifiedHTTPSConnection):$/;"	c
AWSHTTPSConnection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPSConnection(AWSConnection, VerifiedHTTPSConnection):$/;"	c
AWSHTTPSConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
AWSHTTPSConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
AWSHTTPSConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
AWSHTTPSConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
AWSHTTPSConnectionPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
AWSHTTPSConnectionPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
AWSPreparedRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSPreparedRequest(object):$/;"	c
AWSPreparedRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSPreparedRequest(object):$/;"	c
AWSPreparedRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSPreparedRequest(object):$/;"	c
AWSPreparedRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSPreparedRequest(object):$/;"	c
AWSPreparedRequest	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSPreparedRequest(object):$/;"	c
AWSPreparedRequest	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSPreparedRequest(object):$/;"	c
AWSRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSRequest(object):$/;"	c
AWSRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSRequest(object):$/;"	c
AWSRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSRequest(object):$/;"	c
AWSRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSRequest(object):$/;"	c
AWSRequest	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSRequest(object):$/;"	c
AWSRequest	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSRequest(object):$/;"	c
AWSRequestPreparer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSRequestPreparer(object):$/;"	c
AWSRequestPreparer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSRequestPreparer(object):$/;"	c
AWSRequestPreparer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSRequestPreparer(object):$/;"	c
AWSRequestPreparer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSRequestPreparer(object):$/;"	c
AWSRequestPreparer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSRequestPreparer(object):$/;"	c
AWSRequestPreparer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSRequestPreparer(object):$/;"	c
AWSResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^class AWSResponse(object):$/;"	c
AWSResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^class AWSResponse(object):$/;"	c
AWSResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^class AWSResponse(object):$/;"	c
AWSResponse	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^class AWSResponse(object):$/;"	c
AWSResponse	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSResponse(object):$/;"	c
AWSResponse	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^class AWSResponse(object):$/;"	c
AWS_DOC_BASE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/method.py	/^AWS_DOC_BASE = 'https:\/\/docs.aws.amazon.com\/goto\/WebAPI'$/;"	v
AWS_DOC_BASE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/method.py	/^AWS_DOC_BASE = 'https:\/\/docs.aws.amazon.com\/goto\/WebAPI'$/;"	v
AWS_DOC_BASE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/method.py	/^AWS_DOC_BASE = 'https:\/\/docs.aws.amazon.com\/goto\/WebAPI'$/;"	v
AWS_DOC_BASE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/method.py	/^AWS_DOC_BASE = 'https:\/\/docs.aws.amazon.com\/goto\/WebAPI'$/;"	v
AWS_DOC_BASE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/method.py	/^AWS_DOC_BASE = 'https:\/\/docs.aws.amazon.com\/goto\/WebAPI'$/;"	v
AWS_DOC_BASE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/method.py	/^AWS_DOC_BASE = 'https:\/\/docs.aws.amazon.com\/goto\/WebAPI'$/;"	v
Abort	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/exceptions.py	/^class Abort(RuntimeError):$/;"	c
Abort	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/exceptions.py	/^class Abort(RuntimeError):$/;"	c
AbstractBoxerDrs	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class AbstractBoxerDrs(object):$/;"	c
AbstractBoxerDrs	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class AbstractBoxerDrs(object):$/;"	c
AbstractCCGCategory	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/api.py	/^class AbstractCCGCategory(metaclass=ABCMeta):$/;"	c
AbstractCCGCategory	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/api.py	/^class AbstractCCGCategory(metaclass=ABCMeta):$/;"	c
AbstractChartRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class AbstractChartRule(ChartRuleI):$/;"	c
AbstractChartRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class AbstractChartRule(ChartRuleI):$/;"	c
AbstractCollocationFinder	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/collocations.py	/^class AbstractCollocationFinder(object):$/;"	c
AbstractCollocationFinder	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/collocations.py	/^class AbstractCollocationFinder(object):$/;"	c
AbstractContainerWidget	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class AbstractContainerWidget(CanvasWidget):$/;"	c
AbstractContainerWidget	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class AbstractContainerWidget(CanvasWidget):$/;"	c
AbstractLazySequence	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/collections.py	/^class AbstractLazySequence(object):$/;"	c
AbstractLazySequence	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/collections.py	/^class AbstractLazySequence(object):$/;"	c
AbstractParentedTree	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tree.py	/^class AbstractParentedTree(Tree, metaclass=ABCMeta):$/;"	c
AbstractParentedTree	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tree.py	/^class AbstractParentedTree(Tree, metaclass=ABCMeta):$/;"	c
AbstractVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class AbstractVariableExpression(Expression):$/;"	c
AbstractVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class AbstractVariableExpression(Expression):$/;"	c
AcceptorConfig	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/waiter.py	/^class AcceptorConfig(object):$/;"	c
AcceptorConfig	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/waiter.py	/^class AcceptorConfig(object):$/;"	c
AcceptorConfig	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/waiter.py	/^class AcceptorConfig(object):$/;"	c
AcceptorConfig	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/waiter.py	/^class AcceptorConfig(object):$/;"	c
AcceptorConfig	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/waiter.py	/^class AcceptorConfig(object):$/;"	c
AcceptorConfig	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/waiter.py	/^class AcceptorConfig(object):$/;"	c
Action	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/model.py	/^class Action(object):$/;"	c
Action	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/model.py	/^class Action(object):$/;"	c
Action	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/model.py	/^class Action(object):$/;"	c
Action	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/model.py	/^class Action(object):$/;"	c
Action	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/model.py	/^class Action(object):$/;"	c
Action	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/model.py	/^class Action(object):$/;"	c
ActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/docstring.py	/^class ActionDocstring(LazyLoadedDocstring):$/;"	c
ActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/docstring.py	/^class ActionDocstring(LazyLoadedDocstring):$/;"	c
ActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/docstring.py	/^class ActionDocstring(LazyLoadedDocstring):$/;"	c
ActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/docstring.py	/^class ActionDocstring(LazyLoadedDocstring):$/;"	c
ActionDocstring	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/docstring.py	/^class ActionDocstring(LazyLoadedDocstring):$/;"	c
ActionDocstring	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/docstring.py	/^class ActionDocstring(LazyLoadedDocstring):$/;"	c
ActionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/action.py	/^class ActionDocumenter(BaseDocumenter):$/;"	c
ActionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/action.py	/^class ActionDocumenter(BaseDocumenter):$/;"	c
ActionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/action.py	/^class ActionDocumenter(BaseDocumenter):$/;"	c
ActionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/action.py	/^class ActionDocumenter(BaseDocumenter):$/;"	c
ActionDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/action.py	/^class ActionDocumenter(BaseDocumenter):$/;"	c
ActionDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/action.py	/^class ActionDocumenter(BaseDocumenter):$/;"	c
AddonClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/utils.py	/^class AddonClient(NamespacedClient):$/;"	c
AddonClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/utils.py	/^class AddonClient(NamespacedClient):$/;"	c
Ae_kappa	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Ae_kappa(self, cA, cB):$/;"	m	class:AnnotationTask
Ae_kappa	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Ae_kappa(self, cA, cB):$/;"	m	class:AnnotationTask
AffixTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/sequential.py	/^class AffixTagger(ContextTagger):$/;"	c
AffixTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/sequential.py	/^class AffixTagger(ContextTagger):$/;"	c
Agenda	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^class Agenda(object):$/;"	c
Agenda	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^class Agenda(object):$/;"	c
AggregatedProgressCallback	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/upload.py	/^class AggregatedProgressCallback(object):$/;"	c
AggregatedProgressCallback	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/upload.py	/^class AggregatedProgressCallback(object):$/;"	c
AggregatedProgressCallback	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/upload.py	/^class AggregatedProgressCallback(object):$/;"	c
AggregatedProgressCallback	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/upload.py	/^class AggregatedProgressCallback(object):$/;"	c
AggregatedProgressCallback	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/upload.py	/^class AggregatedProgressCallback(object):$/;"	c
AggregatedProgressCallback	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/upload.py	/^class AggregatedProgressCallback(object):$/;"	c
AliasConflictParameterError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class AliasConflictParameterError(ValidationError):$/;"	c
AliasConflictParameterError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class AliasConflictParameterError(ValidationError):$/;"	c
AliasConflictParameterError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class AliasConflictParameterError(ValidationError):$/;"	c
AliasConflictParameterError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class AliasConflictParameterError(ValidationError):$/;"	c
AliasConflictParameterError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class AliasConflictParameterError(ValidationError):$/;"	c
AliasConflictParameterError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class AliasConflictParameterError(ValidationError):$/;"	c
AlignedCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/aligned.py	/^class AlignedCorpusReader(CorpusReader):$/;"	c
AlignedCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/aligned.py	/^class AlignedCorpusReader(CorpusReader):$/;"	c
AlignedSent	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/translate/api.py	/^class AlignedSent(object):$/;"	c
AlignedSent	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/translate/api.py	/^class AlignedSent(object):$/;"	c
AlignedSentCorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/aligned.py	/^class AlignedSentCorpusView(StreamBackedCorpusView):$/;"	c
AlignedSentCorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/aligned.py	/^class AlignedSentCorpusView(StreamBackedCorpusView):$/;"	c
Alignment	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/translate/api.py	/^class Alignment(frozenset):$/;"	c
Alignment	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/translate/api.py	/^class Alignment(frozenset):$/;"	c
AlignmentInfo	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/translate/ibm_model.py	/^class AlignmentInfo(object):$/;"	c
AlignmentInfo	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/translate/ibm_model.py	/^class AlignmentInfo(object):$/;"	c
AllExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class AllExpression(QuantifiedExpression):$/;"	c
AllExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class AllExpression(QuantifiedExpression):$/;"	c
AlpinoCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^class AlpinoCorpusReader(BracketParseCorpusReader):$/;"	c
AlpinoCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^class AlpinoCorpusReader(BracketParseCorpusReader):$/;"	c
AnaphoraResolutionException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class AnaphoraResolutionException(Exception):$/;"	c
AnaphoraResolutionException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class AnaphoraResolutionException(Exception):$/;"	c
And	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class And(ConditionBase):$/;"	c
And	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class And(ConditionBase):$/;"	c
And	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class And(ConditionBase):$/;"	c
And	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class And(ConditionBase):$/;"	c
And	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class And(ConditionBase):$/;"	c
And	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class And(ConditionBase):$/;"	c
AndExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class AndExpression(BooleanExpression):$/;"	c
AndExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class AndExpression(BooleanExpression):$/;"	c
AnnotationTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/agreement.py	/^class AnnotationTask(object):$/;"	c
AnnotationTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/agreement.py	/^class AnnotationTask(object):$/;"	c
AnotherZlibCompressorWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^class AnotherZlibCompressorWrapper(CompressorWrapper):$/;"	c
AnotherZlibCompressorWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^class AnotherZlibCompressorWrapper(CompressorWrapper):$/;"	c
Any	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class Any(RegexBase):$/;"	c
Any	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class Any(RegexBase):$/;"	c
AnyAll	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class AnyAll(Any):$/;"	c
AnyAll	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class AnyAll(Any):$/;"	c
AnyType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class AnyType(BasicType, ComplexType):$/;"	c
AnyType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class AnyType(BasicType, ComplexType):$/;"	c
AnyU	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class AnyU(Any):$/;"	c
AnyU	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class AnyU(Any):$/;"	c
Ao	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Ao(self, cA, cB):$/;"	m	class:AnnotationTask
Ao	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Ao(self, cA, cB):$/;"	m	class:AnnotationTask
ApiVersionNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ApiVersionNotFoundError(BotoCoreError):$/;"	c
ApiVersionNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ApiVersionNotFoundError(BotoCoreError):$/;"	c
ApiVersionNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ApiVersionNotFoundError(BotoCoreError):$/;"	c
ApiVersionNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ApiVersionNotFoundError(BotoCoreError):$/;"	c
ApiVersionNotFoundError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ApiVersionNotFoundError(BotoCoreError):$/;"	c
ApiVersionNotFoundError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ApiVersionNotFoundError(BotoCoreError):$/;"	c
AppEngineManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEngineManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEngineManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEngineManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEngineManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEngineManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEnginePlatformError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppEnginePlatformWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppEnginePlatformWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppEnginePlatformWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppEnginePlatformWarning	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppEnginePlatformWarning	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppendParamDocumentation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/utils.py	/^class AppendParamDocumentation(object):$/;"	c
AppendParamDocumentation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/utils.py	/^class AppendParamDocumentation(object):$/;"	c
AppendParamDocumentation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/utils.py	/^class AppendParamDocumentation(object):$/;"	c
AppendParamDocumentation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/utils.py	/^class AppendParamDocumentation(object):$/;"	c
AppendParamDocumentation	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/utils.py	/^class AppendParamDocumentation(object):$/;"	c
AppendParamDocumentation	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/utils.py	/^class AppendParamDocumentation(object):$/;"	c
ApplicationExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class ApplicationExpression(Expression):$/;"	c
ApplicationExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class ApplicationExpression(Expression):$/;"	c
ApplicationExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class ApplicationExpression(Expression):$/;"	c
ApplicationExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class ApplicationExpression(Expression):$/;"	c
ApplicationRuleSet	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^ApplicationRuleSet = [$/;"	v
ApplicationRuleSet	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^ApplicationRuleSet = [$/;"	v
ArabicStemmer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/stem/snowball.py	/^class ArabicStemmer(_StandardStemmer):$/;"	c
ArabicStemmer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/stem/snowball.py	/^class ArabicStemmer(_StandardStemmer):$/;"	c
Argument	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^class Argument(Parameter):$/;"	c
Argument	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/parser.py	/^class Argument(object):$/;"	c
Argument	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^class Argument(Parameter):$/;"	c
Argument	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/parser.py	/^class Argument(object):$/;"	c
ArgumentGenerator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^class ArgumentGenerator(object):$/;"	c
ArgumentGenerator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^class ArgumentGenerator(object):$/;"	c
ArgumentGenerator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^class ArgumentGenerator(object):$/;"	c
ArgumentGenerator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^class ArgumentGenerator(object):$/;"	c
ArgumentGenerator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^class ArgumentGenerator(object):$/;"	c
ArgumentGenerator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^class ArgumentGenerator(object):$/;"	c
ArityError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/jmespath/exceptions.py	/^class ArityError(ParseError):$/;"	c
ArityError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/jmespath/exceptions.py	/^class ArityError(ParseError):$/;"	c
ArityError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/jmespath/exceptions.py	/^class ArityError(ParseError):$/;"	c
ArityError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/jmespath/exceptions.py	/^class ArityError(ParseError):$/;"	c
ArityError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/jmespath/exceptions.py	/^class ArityError(ParseError):$/;"	c
ArityError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/jmespath/exceptions.py	/^class ArityError(ParseError):$/;"	c
ArnParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^class ArnParser(object):$/;"	c
ArnParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^class ArnParser(object):$/;"	c
ArnParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^class ArnParser(object):$/;"	c
ArnParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^class ArnParser(object):$/;"	c
ArnParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^class ArnParser(object):$/;"	c
ArnParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^class ArnParser(object):$/;"	c
ArrayMemmapForwardReducer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/_memmapping_reducer.py	/^class ArrayMemmapForwardReducer(object):$/;"	c
ArrayMemmapForwardReducer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/_memmapping_reducer.py	/^class ArrayMemmapForwardReducer(object):$/;"	c
Assignment	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/evaluate.py	/^class Assignment(dict):$/;"	c
Assignment	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/evaluate.py	/^class Assignment(dict):$/;"	c
AssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class AssumeRoleCredentialFetcher(BaseAssumeRoleCredentialFetcher):$/;"	c
AssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class AssumeRoleCredentialFetcher(BaseAssumeRoleCredentialFetcher):$/;"	c
AssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class AssumeRoleCredentialFetcher(BaseAssumeRoleCredentialFetcher):$/;"	c
AssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class AssumeRoleCredentialFetcher(BaseAssumeRoleCredentialFetcher):$/;"	c
AssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class AssumeRoleCredentialFetcher(BaseAssumeRoleCredentialFetcher):$/;"	c
AssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class AssumeRoleCredentialFetcher(BaseAssumeRoleCredentialFetcher):$/;"	c
AssumeRoleProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class AssumeRoleProvider(CredentialProvider):$/;"	c
AssumeRoleProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class AssumeRoleProvider(CredentialProvider):$/;"	c
AssumeRoleProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class AssumeRoleProvider(CredentialProvider):$/;"	c
AssumeRoleProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class AssumeRoleProvider(CredentialProvider):$/;"	c
AssumeRoleProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class AssumeRoleProvider(CredentialProvider):$/;"	c
AssumeRoleProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class AssumeRoleProvider(CredentialProvider):$/;"	c
AssumeRoleWithWebIdentityCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^):$/;"	c
AssumeRoleWithWebIdentityCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^):$/;"	c
AssumeRoleWithWebIdentityCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^):$/;"	c
AssumeRoleWithWebIdentityCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^):$/;"	c
AssumeRoleWithWebIdentityCredentialFetcher	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^):$/;"	c
AssumeRoleWithWebIdentityCredentialFetcher	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^):$/;"	c
AssumeRoleWithWebIdentityProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class AssumeRoleWithWebIdentityProvider(CredentialProvider):$/;"	c
AssumeRoleWithWebIdentityProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class AssumeRoleWithWebIdentityProvider(CredentialProvider):$/;"	c
AssumeRoleWithWebIdentityProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class AssumeRoleWithWebIdentityProvider(CredentialProvider):$/;"	c
AssumeRoleWithWebIdentityProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class AssumeRoleWithWebIdentityProvider(CredentialProvider):$/;"	c
AssumeRoleWithWebIdentityProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class AssumeRoleWithWebIdentityProvider(CredentialProvider):$/;"	c
AssumeRoleWithWebIdentityProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class AssumeRoleWithWebIdentityProvider(CredentialProvider):$/;"	c
AsyncConnection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^class AsyncConnection(Connection):$/;"	c
AsyncConnection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^class AsyncConnection(Connection):$/;"	c
AsyncElasticsearch	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/__init__.py	/^class AsyncElasticsearch(object):$/;"	c
AsyncElasticsearch	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/__init__.py	/^class AsyncElasticsearch(object):$/;"	c
AsyncSearchClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/async_search.py	/^class AsyncSearchClient(NamespacedClient):$/;"	c
AsyncSearchClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/async_search.py	/^class AsyncSearchClient(NamespacedClient):$/;"	c
AsyncSearchClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/async_search.py	/^class AsyncSearchClient(NamespacedClient):$/;"	c
AsyncSearchClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/async_search.py	/^class AsyncSearchClient(NamespacedClient):$/;"	c
AsyncTransport	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/transport.py	/^class AsyncTransport(Transport):$/;"	c
AsyncTransport	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/transport.py	/^class AsyncTransport(Transport):$/;"	c
Atomic	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class Atomic(RegexBase):$/;"	c
Atomic	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class Atomic(RegexBase):$/;"	c
AtomicExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class AtomicExpression(Expression):$/;"	c
AtomicExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class AtomicExpression(Expression):$/;"	c
Attr	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class Attr(AttributeBase):$/;"	c
Attr	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class Attr(AttributeBase):$/;"	c
Attr	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class Attr(AttributeBase):$/;"	c
Attr	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class Attr(AttributeBase):$/;"	c
Attr	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Attr(AttributeBase):$/;"	c
Attr	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Attr(AttributeBase):$/;"	c
AttrDict	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/framenet.py	/^class AttrDict(dict):$/;"	c
AttrDict	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/framenet.py	/^class AttrDict(dict):$/;"	c
AttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class AttributeBase(object):$/;"	c
AttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class AttributeBase(object):$/;"	c
AttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class AttributeBase(object):$/;"	c
AttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class AttributeBase(object):$/;"	c
AttributeBase	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeBase(object):$/;"	c
AttributeBase	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeBase(object):$/;"	c
AttributeDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/docstring.py	/^class AttributeDocstring(LazyLoadedDocstring):$/;"	c
AttributeDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/docstring.py	/^class AttributeDocstring(LazyLoadedDocstring):$/;"	c
AttributeDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/docstring.py	/^class AttributeDocstring(LazyLoadedDocstring):$/;"	c
AttributeDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/docstring.py	/^class AttributeDocstring(LazyLoadedDocstring):$/;"	c
AttributeDocstring	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/docstring.py	/^class AttributeDocstring(LazyLoadedDocstring):$/;"	c
AttributeDocstring	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/docstring.py	/^class AttributeDocstring(LazyLoadedDocstring):$/;"	c
AttributeExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class AttributeExists(ConditionBase):$/;"	c
AttributeExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class AttributeExists(ConditionBase):$/;"	c
AttributeExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class AttributeExists(ConditionBase):$/;"	c
AttributeExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class AttributeExists(ConditionBase):$/;"	c
AttributeExists	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeExists(ConditionBase):$/;"	c
AttributeExists	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeExists(ConditionBase):$/;"	c
AttributeNotExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class AttributeNotExists(ConditionBase):$/;"	c
AttributeNotExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class AttributeNotExists(ConditionBase):$/;"	c
AttributeNotExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class AttributeNotExists(ConditionBase):$/;"	c
AttributeNotExists	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class AttributeNotExists(ConditionBase):$/;"	c
AttributeNotExists	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeNotExists(ConditionBase):$/;"	c
AttributeNotExists	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeNotExists(ConditionBase):$/;"	c
AttributeType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class AttributeType(ConditionBase):$/;"	c
AttributeType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class AttributeType(ConditionBase):$/;"	c
AttributeType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class AttributeType(ConditionBase):$/;"	c
AttributeType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class AttributeType(ConditionBase):$/;"	c
AttributeType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeType(ConditionBase):$/;"	c
AttributeType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class AttributeType(ConditionBase):$/;"	c
AuthBase	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/auth.py	/^class AuthBase(object):$/;"	c
AuthBase	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/auth.py	/^class AuthBase(object):$/;"	c
Authenticate	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/twitter/util.py	/^class Authenticate(object):$/;"	c
Authenticate	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/twitter/util.py	/^class Authenticate(object):$/;"	c
AuthenticationException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class AuthenticationException(TransportError):$/;"	c
AuthenticationException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class AuthenticationException(TransportError):$/;"	c
AuthenticationKey	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/process.py	/^class AuthenticationKey(bytes):$/;"	c
AuthenticationKey	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/process.py	/^class AuthenticationKey(bytes):$/;"	c
AuthorizationException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class AuthorizationException(TransportError):$/;"	c
AuthorizationException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class AuthorizationException(TransportError):$/;"	c
AutoBatchingMixin	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/_parallel_backends.py	/^class AutoBatchingMixin(object):$/;"	c
AutoBatchingMixin	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/_parallel_backends.py	/^class AutoBatchingMixin(object):$/;"	c
AutoPopulatedParam	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/utils.py	/^class AutoPopulatedParam(object):$/;"	c
AutoPopulatedParam	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/utils.py	/^class AutoPopulatedParam(object):$/;"	c
AutoPopulatedParam	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/utils.py	/^class AutoPopulatedParam(object):$/;"	c
AutoPopulatedParam	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/utils.py	/^class AutoPopulatedParam(object):$/;"	c
AutoPopulatedParam	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/utils.py	/^class AutoPopulatedParam(object):$/;"	c
AutoPopulatedParam	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/utils.py	/^class AutoPopulatedParam(object):$/;"	c
AutoscalingClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/autoscaling.py	/^class AutoscalingClient(NamespacedClient):$/;"	c
AutoscalingClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/autoscaling.py	/^class AutoscalingClient(NamespacedClient):$/;"	c
AutoscalingClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/autoscaling.py	/^class AutoscalingClient(NamespacedClient):$/;"	c
AutoscalingClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/autoscaling.py	/^class AutoscalingClient(NamespacedClient):$/;"	c
AveragedPerceptron	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/perceptron.py	/^class AveragedPerceptron:$/;"	c
AveragedPerceptron	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/perceptron.py	/^class AveragedPerceptron:$/;"	c
B	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^    def B(self):$/;"	m	class:FreqDist
B	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^    def B(self):$/;"	m	class:FreqDist
BACKENDS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^BACKENDS = {$/;"	v
BACKENDS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^BACKENDS = {$/;"	v
BACKOFF_MAX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKOFF_MAX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKOFF_MAX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKOFF_MAX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKOFF_MAX	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKOFF_MAX	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BAD_CHAR_RANGE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_CHAR_RANGE = "bad character range"$/;"	v	class:RegexTests
BAD_CHAR_RANGE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_CHAR_RANGE = "bad character range"$/;"	v	class:RegexTests
BAD_ESCAPE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_ESCAPE = r"bad escape \\(end of pattern\\)"$/;"	v	class:RegexTests
BAD_ESCAPE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_ESCAPE = r"bad escape \\(end of pattern\\)"$/;"	v	class:RegexTests
BAD_GROUP_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_GROUP_NAME = "bad character in group name"$/;"	v	class:RegexTests
BAD_GROUP_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_GROUP_NAME = "bad character in group name"$/;"	v	class:RegexTests
BAD_OCTAL_ESCAPE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_OCTAL_ESCAPE = r"bad escape \\\\"$/;"	v	class:RegexTests
BAD_OCTAL_ESCAPE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_OCTAL_ESCAPE = r"bad escape \\\\"$/;"	v	class:RegexTests
BAD_SET	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_SET = "unterminated character set"$/;"	v	class:RegexTests
BAD_SET	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BAD_SET = "unterminated character set"$/;"	v	class:RegexTests
BEFORE_BAR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_termui_impl.py	/^    BEFORE_BAR = "\\r"$/;"	v
BEFORE_BAR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_termui_impl.py	/^    BEFORE_BAR = "\\r\\033[?25l"$/;"	v
BEFORE_BAR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_termui_impl.py	/^    BEFORE_BAR = "\\r"$/;"	v
BEFORE_BAR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_termui_impl.py	/^    BEFORE_BAR = "\\r\\033[?25l"$/;"	v
BIG5_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_CHAR_LEN_TABLE = (0, 1, 1, 2, 0)$/;"	v
BIG5_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_CHAR_LEN_TABLE = (0, 1, 1, 2, 0)$/;"	v
BIG5_CHAR_TO_FREQ_ORDER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/big5freq.py	/^BIG5_CHAR_TO_FREQ_ORDER = ($/;"	v
BIG5_CHAR_TO_FREQ_ORDER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/big5freq.py	/^BIG5_CHAR_TO_FREQ_ORDER = ($/;"	v
BIG5_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_CLS = ($/;"	v
BIG5_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_CLS = ($/;"	v
BIG5_SM_MODEL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_SM_MODEL = {'class_table': BIG5_CLS,$/;"	v
BIG5_SM_MODEL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_SM_MODEL = {'class_table': BIG5_CLS,$/;"	v
BIG5_ST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_ST = ($/;"	v
BIG5_ST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^BIG5_ST = ($/;"	v
BIG5_TABLE_SIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/big5freq.py	/^BIG5_TABLE_SIZE = 5376$/;"	v
BIG5_TABLE_SIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/big5freq.py	/^BIG5_TABLE_SIZE = 5376$/;"	v
BIG5_TYPICAL_DISTRIBUTION_RATIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/big5freq.py	/^BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
BIG5_TYPICAL_DISTRIBUTION_RATIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/big5freq.py	/^BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
BINARY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/types.py	/^BINARY = 'B'$/;"	v
BINARY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/types.py	/^BINARY = 'B'$/;"	v
BINARY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/types.py	/^BINARY = 'B'$/;"	v
BINARY	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/types.py	/^BINARY = 'B'$/;"	v
BINARY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BINARY = 'B'$/;"	v
BINARY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BINARY = 'B'$/;"	v
BINARY_SET	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/types.py	/^BINARY_SET = 'BS'$/;"	v
BINARY_SET	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/types.py	/^BINARY_SET = 'BS'$/;"	v
BINARY_SET	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/types.py	/^BINARY_SET = 'BS'$/;"	v
BINARY_SET	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/types.py	/^BINARY_SET = 'BS'$/;"	v
BINARY_SET	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BINARY_SET = 'BS'$/;"	v
BINARY_SET	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BINARY_SET = 'BS'$/;"	v
BINARY_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/types.py	/^BINARY_TYPES = (bytearray, six.binary_type)$/;"	v
BINARY_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/types.py	/^BINARY_TYPES = (bytearray, six.binary_type)$/;"	v
BINARY_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/types.py	/^BINARY_TYPES = (bytearray, six.binary_type)$/;"	v
BINARY_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/types.py	/^BINARY_TYPES = (bytearray, six.binary_type)$/;"	v
BINARY_TYPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BINARY_TYPES = (bytearray, six.binary_type)$/;"	v
BINARY_TYPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BINARY_TYPES = (bytearray, six.binary_type)$/;"	v
BINDING_POWER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/jmespath/parser.py	/^    BINDING_POWER = {$/;"	v	class:Parser
BINDING_POWER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/jmespath/parser.py	/^    BINDING_POWER = {$/;"	v	class:Parser
BINDING_POWER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/jmespath/parser.py	/^    BINDING_POWER = {$/;"	v	class:Parser
BINDING_POWER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/jmespath/parser.py	/^    BINDING_POWER = {$/;"	v	class:Parser
BINDING_POWER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/jmespath/parser.py	/^    BINDING_POWER = {$/;"	v	class:Parser
BINDING_POWER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/jmespath/parser.py	/^    BINDING_POWER = {$/;"	v	class:Parser
BINOPS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    BINOPS = AND_LIST + OR_LIST + IMP_LIST + IFF_LIST$/;"	v	class:Tokens
BINOPS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    BINOPS = AND_LIST + OR_LIST + IMP_LIST + IFF_LIST$/;"	v	class:Tokens
BITS_PER_CODE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^BITS_PER_CODE = BYTES_PER_CODE * 8$/;"	v
BITS_PER_CODE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^BITS_PER_CODE = BYTES_PER_CODE * 8$/;"	v
BLANK	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/std.py	/^    BLANK = "  "$/;"	v	class:Bar
BLANK	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/std.py	/^    BLANK = "  "$/;"	v	class:Bar
BLOCK_SIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/util.py	/^    BLOCK_SIZE = 100$/;"	v	class:PickleCorpusView
BLOCK_SIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/util.py	/^    BLOCK_SIZE = 100$/;"	v	class:PickleCorpusView
BNCCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bnc.py	/^class BNCCorpusReader(XMLCorpusReader):$/;"	c
BNCCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bnc.py	/^class BNCCorpusReader(XMLCorpusReader):$/;"	c
BNCSentence	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bnc.py	/^class BNCSentence(list):$/;"	c
BNCSentence	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bnc.py	/^class BNCSentence(list):$/;"	c
BNCWordView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bnc.py	/^class BNCWordView(XMLCorpusView):$/;"	c
BNCWordView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bnc.py	/^class BNCWordView(XMLCorpusView):$/;"	c
BOOL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/types.py	/^BOOL = BoolParamType()$/;"	v
BOOL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/types.py	/^BOOL = BoolParamType()$/;"	v
BOOLEAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/types.py	/^BOOLEAN = 'BOOL'$/;"	v
BOOLEAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/types.py	/^BOOLEAN = 'BOOL'$/;"	v
BOOLEAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/types.py	/^BOOLEAN = 'BOOL'$/;"	v
BOOLEAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/types.py	/^BOOLEAN = 'BOOL'$/;"	v
BOOLEAN	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BOOLEAN = 'BOOL'$/;"	v
BOOLEAN	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/types.py	/^BOOLEAN = 'BOOL'$/;"	v
BOOSTER_DICT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    BOOSTER_DICT = {$/;"	v	class:VaderConstants
BOOSTER_DICT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    BOOSTER_DICT = {$/;"	v	class:VaderConstants
BOTOCORE_DEFAUT_SESSION_VARIABLES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^BOTOCORE_DEFAUT_SESSION_VARIABLES = {$/;"	v
BOTOCORE_DEFAUT_SESSION_VARIABLES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^BOTOCORE_DEFAUT_SESSION_VARIABLES = {$/;"	v
BOTOCORE_DEFAUT_SESSION_VARIABLES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^BOTOCORE_DEFAUT_SESSION_VARIABLES = {$/;"	v
BOTOCORE_DEFAUT_SESSION_VARIABLES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^BOTOCORE_DEFAUT_SESSION_VARIABLES = {$/;"	v
BOTOCORE_DEFAUT_SESSION_VARIABLES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^BOTOCORE_DEFAUT_SESSION_VARIABLES = {$/;"	v
BOTOCORE_DEFAUT_SESSION_VARIABLES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^BOTOCORE_DEFAUT_SESSION_VARIABLES = {$/;"	v
BOTOCORE_ROOT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/__init__.py	/^BOTOCORE_ROOT = os.path.dirname(os.path.abspath(__file__))$/;"	v
BOTOCORE_ROOT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/__init__.py	/^BOTOCORE_ROOT = os.path.dirname(os.path.abspath(__file__))$/;"	v
BOTOCORE_ROOT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/__init__.py	/^BOTOCORE_ROOT = os.path.dirname(os.path.abspath(__file__))$/;"	v
BOTOCORE_ROOT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/__init__.py	/^BOTOCORE_ROOT = os.path.dirname(os.path.abspath(__file__))$/;"	v
BOTOCORE_ROOT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/__init__.py	/^BOTOCORE_ROOT = os.path.dirname(os.path.abspath(__file__))$/;"	v
BOTOCORE_ROOT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/__init__.py	/^BOTOCORE_ROOT = os.path.dirname(os.path.abspath(__file__))$/;"	v
BOTO_CONFIG_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    BOTO_CONFIG_ENV = 'BOTO_CONFIG'$/;"	v	class:BotoProvider
BOTO_CONFIG_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    BOTO_CONFIG_ENV = 'BOTO_CONFIG'$/;"	v	class:BotoProvider
BOTO_CONFIG_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    BOTO_CONFIG_ENV = 'BOTO_CONFIG'$/;"	v	class:BotoProvider
BOTO_CONFIG_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    BOTO_CONFIG_ENV = 'BOTO_CONFIG'$/;"	v	class:BotoProvider
BOTO_CONFIG_ENV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    BOTO_CONFIG_ENV = 'BOTO_CONFIG'$/;"	v	class:BotoProvider
BOTO_CONFIG_ENV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    BOTO_CONFIG_ENV = 'BOTO_CONFIG'$/;"	v	class:BotoProvider
BOUNDARY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/concordance_app.py	/^BOUNDARY = r"\\b"$/;"	v
BOUNDARY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/concordance_app.py	/^BOUNDARY = r"\\b"$/;"	v
BRACELESS_IPV6_ADDRZ_RE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/url.py	/^BRACELESS_IPV6_ADDRZ_RE = re.compile("^" + IPV6_ADDRZ_PAT[2:-2] + "$")$/;"	v
BRACELESS_IPV6_ADDRZ_RE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/url.py	/^BRACELESS_IPV6_ADDRZ_RE = re.compile("^" + IPV6_ADDRZ_PAT[2:-2] + "$")$/;"	v
BRACELESS_IPV6_ADDRZ_RE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/url.py	/^BRACELESS_IPV6_ADDRZ_RE = re.compile("^" + IPV6_ADDRZ_PAT[2:-2] + "$")$/;"	v
BRACELESS_IPV6_ADDRZ_RE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/url.py	/^BRACELESS_IPV6_ADDRZ_RE = re.compile("^" + IPV6_ADDRZ_PAT[2:-2] + "$")$/;"	v
BRACELESS_IPV6_ADDRZ_RE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/url.py	/^BRACELESS_IPV6_ADDRZ_RE = re.compile("^" + IPV6_ADDRZ_PAT[2:-2] + "$")$/;"	v
BRACELESS_IPV6_ADDRZ_RE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/url.py	/^BRACELESS_IPV6_ADDRZ_RE = re.compile("^" + IPV6_ADDRZ_PAT[2:-2] + "$")$/;"	v
BUFFER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^    BUFFER = 3  # Space between elements$/;"	v	class:DrsDrawer
BUFFER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^    BUFFER = 3  # Space between elements$/;"	v	class:DrsDrawer
BUFFER_SIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/numpy_pickle_utils.py	/^BUFFER_SIZE = 2 ** 18  # size of buffer for reading npz files in bytes$/;"	v
BUFFER_SIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/numpy_pickle_utils.py	/^BUFFER_SIZE = 2 ** 18  # size of buffer for reading npz files in bytes$/;"	v
BUILTIN_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/loaders.py	/^    BUILTIN_DATA_PATH = os.path.join(BOTOCORE_ROOT, 'data')$/;"	v	class:Loader
BUILTIN_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/loaders.py	/^    BUILTIN_DATA_PATH = os.path.join(BOTOCORE_ROOT, 'data')$/;"	v	class:Loader
BUILTIN_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/loaders.py	/^    BUILTIN_DATA_PATH = os.path.join(BOTOCORE_ROOT, 'data')$/;"	v	class:Loader
BUILTIN_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/loaders.py	/^    BUILTIN_DATA_PATH = os.path.join(BOTOCORE_ROOT, 'data')$/;"	v	class:Loader
BUILTIN_DATA_PATH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/loaders.py	/^    BUILTIN_DATA_PATH = os.path.join(BOTOCORE_ROOT, 'data')$/;"	v	class:Loader
BUILTIN_DATA_PATH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/loaders.py	/^    BUILTIN_DATA_PATH = os.path.join(BOTOCORE_ROOT, 'data')$/;"	v	class:Loader
BUILTIN_EXTRAS_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/loaders.py	/^    BUILTIN_EXTRAS_TYPES = ['sdk']$/;"	v	class:Loader
BUILTIN_EXTRAS_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/loaders.py	/^    BUILTIN_EXTRAS_TYPES = ['sdk']$/;"	v	class:Loader
BUILTIN_EXTRAS_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/loaders.py	/^    BUILTIN_EXTRAS_TYPES = ['sdk']$/;"	v	class:Loader
BUILTIN_EXTRAS_TYPES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/loaders.py	/^    BUILTIN_EXTRAS_TYPES = ['sdk']$/;"	v	class:Loader
BUILTIN_EXTRAS_TYPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/loaders.py	/^    BUILTIN_EXTRAS_TYPES = ['sdk']$/;"	v	class:Loader
BUILTIN_EXTRAS_TYPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/loaders.py	/^    BUILTIN_EXTRAS_TYPES = ['sdk']$/;"	v	class:Loader
BUILTIN_HANDLERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/handlers.py	/^BUILTIN_HANDLERS = [$/;"	v
BUILTIN_HANDLERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/handlers.py	/^BUILTIN_HANDLERS = [$/;"	v
BUILTIN_HANDLERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/handlers.py	/^BUILTIN_HANDLERS = [$/;"	v
BUILTIN_HANDLERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/handlers.py	/^BUILTIN_HANDLERS = [$/;"	v
BUILTIN_HANDLERS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/handlers.py	/^BUILTIN_HANDLERS = [$/;"	v
BUILTIN_HANDLERS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/handlers.py	/^BUILTIN_HANDLERS = [$/;"	v
BU_FEATURE_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/featurechart.py	/^BU_FEATURE_STRATEGY = [$/;"	v
BU_FEATURE_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/featurechart.py	/^BU_FEATURE_STRATEGY = [$/;"	v
BU_INCREMENTAL_FEATURE_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_INCREMENTAL_FEATURE_STRATEGY = [$/;"	v
BU_INCREMENTAL_FEATURE_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_INCREMENTAL_FEATURE_STRATEGY = [$/;"	v
BU_INCREMENTAL_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_INCREMENTAL_STRATEGY = [$/;"	v
BU_INCREMENTAL_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_INCREMENTAL_STRATEGY = [$/;"	v
BU_LC_FEATURE_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/featurechart.py	/^BU_LC_FEATURE_STRATEGY = [$/;"	v
BU_LC_FEATURE_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/featurechart.py	/^BU_LC_FEATURE_STRATEGY = [$/;"	v
BU_LC_INCREMENTAL_FEATURE_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_LC_INCREMENTAL_FEATURE_STRATEGY = [$/;"	v
BU_LC_INCREMENTAL_FEATURE_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_LC_INCREMENTAL_FEATURE_STRATEGY = [$/;"	v
BU_LC_INCREMENTAL_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_LC_INCREMENTAL_STRATEGY = [$/;"	v
BU_LC_INCREMENTAL_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^BU_LC_INCREMENTAL_STRATEGY = [$/;"	v
BU_LC_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^BU_LC_STRATEGY = [$/;"	v
BU_LC_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^BU_LC_STRATEGY = [$/;"	v
BU_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^BU_STRATEGY = [$/;"	v
BU_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^BU_STRATEGY = [$/;"	v
BYTES_PAT_ON_STR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BYTES_PAT_ON_STR = "cannot use a bytes pattern on a string-like object"$/;"	v	class:RegexTests
BYTES_PAT_ON_STR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BYTES_PAT_ON_STR = "cannot use a bytes pattern on a string-like object"$/;"	v	class:RegexTests
BYTES_PAT_STR_TEMPL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BYTES_PAT_STR_TEMPL = "expected a bytes-like object, str found"$/;"	v	class:RegexTests
BYTES_PAT_STR_TEMPL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BYTES_PAT_STR_TEMPL = "expected a bytes-like object, str found"$/;"	v	class:RegexTests
BYTES_PAT_UNI_FLAG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    BYTES_PAT_UNI_FLAG = "cannot use UNICODE flag with a bytes pattern"$/;"	v	class:RegexTests
BYTES_PAT_UNI_FLAG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    BYTES_PAT_UNI_FLAG = "cannot use UNICODE flag with a bytes pattern"$/;"	v	class:RegexTests
BYTES_PER_CODE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^BYTES_PER_CODE = _regex.get_code_size()$/;"	v
BYTES_PER_CODE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^BYTES_PER_CODE = _regex.get_code_size()$/;"	v
BZ2CompressorWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/compressor.py	/^class BZ2CompressorWrapper(CompressorWrapper):$/;"	c
BZ2CompressorWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/compressor.py	/^class BZ2CompressorWrapper(CompressorWrapper):$/;"	c
B_DECR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    B_DECR = -0.293$/;"	v	class:VaderConstants
B_DECR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    B_DECR = -0.293$/;"	v	class:VaderConstants
B_INCR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    B_INCR = 0.293$/;"	v	class:VaderConstants
B_INCR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    B_INCR = 0.293$/;"	v	class:VaderConstants
BackwardApplication	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardApplication = BackwardCombinator(UndirectedFunctionApplication(), backwardOnly)$/;"	v
BackwardApplication	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardApplication = BackwardCombinator(UndirectedFunctionApplication(), backwardOnly)$/;"	v
BackwardBx	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardBx = BackwardCombinator($/;"	v
BackwardBx	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardBx = BackwardCombinator($/;"	v
BackwardCombinator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^class BackwardCombinator(DirectedBinaryCombinator):$/;"	c
BackwardCombinator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^class BackwardCombinator(DirectedBinaryCombinator):$/;"	c
BackwardComposition	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardComposition = BackwardCombinator(UndirectedComposition(), backwardOnly)$/;"	v
BackwardComposition	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardComposition = BackwardCombinator(UndirectedComposition(), backwardOnly)$/;"	v
BackwardSx	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardSx = BackwardCombinator(UndirectedSubstitution(), backwardSxConstraint, "x")$/;"	v
BackwardSx	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardSx = BackwardCombinator(UndirectedSubstitution(), backwardSxConstraint, "x")$/;"	v
BackwardT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardT = BackwardCombinator(UndirectedTypeRaise(), backwardTConstraint)$/;"	v
BackwardT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^BackwardT = BackwardCombinator(UndirectedTypeRaise(), backwardTConstraint)$/;"	v
BackwardTypeRaiseRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^class BackwardTypeRaiseRule(AbstractChartRule):$/;"	c
BackwardTypeRaiseRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^class BackwardTypeRaiseRule(AbstractChartRule):$/;"	c
BadArgumentUsage	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/exceptions.py	/^class BadArgumentUsage(UsageError):$/;"	c
BadArgumentUsage	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/exceptions.py	/^class BadArgumentUsage(UsageError):$/;"	c
BadIMDSRequestError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^class BadIMDSRequestError(Exception):$/;"	c
BadIMDSRequestError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^class BadIMDSRequestError(Exception):$/;"	c
BadIMDSRequestError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^class BadIMDSRequestError(Exception):$/;"	c
BadIMDSRequestError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^class BadIMDSRequestError(Exception):$/;"	c
BadIMDSRequestError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^class BadIMDSRequestError(Exception):$/;"	c
BadIMDSRequestError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^class BadIMDSRequestError(Exception):$/;"	c
BadOptionUsage	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/exceptions.py	/^class BadOptionUsage(UsageError):$/;"	c
BadOptionUsage	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/exceptions.py	/^class BadOptionUsage(UsageError):$/;"	c
BadParameter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/exceptions.py	/^class BadParameter(UsageError):$/;"	c
BadParameter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/exceptions.py	/^class BadParameter(UsageError):$/;"	c
BandwidthLimitedStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/bandwidth.py	/^class BandwidthLimitedStream(object):$/;"	c
BandwidthLimitedStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/bandwidth.py	/^class BandwidthLimitedStream(object):$/;"	c
BandwidthLimitedStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/bandwidth.py	/^class BandwidthLimitedStream(object):$/;"	c
BandwidthLimitedStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/bandwidth.py	/^class BandwidthLimitedStream(object):$/;"	c
BandwidthLimitedStream	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class BandwidthLimitedStream(object):$/;"	c
BandwidthLimitedStream	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class BandwidthLimitedStream(object):$/;"	c
BandwidthLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/bandwidth.py	/^class BandwidthLimiter(object):$/;"	c
BandwidthLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/bandwidth.py	/^class BandwidthLimiter(object):$/;"	c
BandwidthLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/bandwidth.py	/^class BandwidthLimiter(object):$/;"	c
BandwidthLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/bandwidth.py	/^class BandwidthLimiter(object):$/;"	c
BandwidthLimiter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class BandwidthLimiter(object):$/;"	c
BandwidthLimiter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class BandwidthLimiter(object):$/;"	c
BandwidthRateTracker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/bandwidth.py	/^class BandwidthRateTracker(object):$/;"	c
BandwidthRateTracker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/bandwidth.py	/^class BandwidthRateTracker(object):$/;"	c
BandwidthRateTracker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/bandwidth.py	/^class BandwidthRateTracker(object):$/;"	c
BandwidthRateTracker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/bandwidth.py	/^class BandwidthRateTracker(object):$/;"	c
BandwidthRateTracker	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class BandwidthRateTracker(object):$/;"	c
BandwidthRateTracker	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class BandwidthRateTracker(object):$/;"	c
Bar	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/std.py	/^class Bar(object):$/;"	c
Bar	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/std.py	/^class Bar(object):$/;"	c
BaseAdapter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/adapters.py	/^class BaseAdapter(object):$/;"	c
BaseAdapter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/adapters.py	/^class BaseAdapter(object):$/;"	c
BaseAssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class BaseAssumeRoleCredentialFetcher(CachedCredentialFetcher):$/;"	c
BaseAssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class BaseAssumeRoleCredentialFetcher(CachedCredentialFetcher):$/;"	c
BaseAssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class BaseAssumeRoleCredentialFetcher(CachedCredentialFetcher):$/;"	c
BaseAssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class BaseAssumeRoleCredentialFetcher(CachedCredentialFetcher):$/;"	c
BaseAssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class BaseAssumeRoleCredentialFetcher(CachedCredentialFetcher):$/;"	c
BaseAssumeRoleCredentialFetcher	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class BaseAssumeRoleCredentialFetcher(CachedCredentialFetcher):$/;"	c
BaseBlob	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/blob.py	/^class BaseBlob(StringlikeMixin, BlobComparableMixin):$/;"	c
BaseBlob	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/blob.py	/^class BaseBlob(StringlikeMixin, BlobComparableMixin):$/;"	c
BaseChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retryhandler.py	/^class BaseChecker(object):$/;"	c
BaseChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retryhandler.py	/^class BaseChecker(object):$/;"	c
BaseChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retryhandler.py	/^class BaseChecker(object):$/;"	c
BaseChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retryhandler.py	/^class BaseChecker(object):$/;"	c
BaseChecker	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retryhandler.py	/^class BaseChecker(object):$/;"	c
BaseChecker	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retryhandler.py	/^class BaseChecker(object):$/;"	c
BaseClassifier	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/classifiers.py	/^class BaseClassifier(object):$/;"	c
BaseClassifier	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/classifiers.py	/^class BaseClassifier(object):$/;"	c
BaseClient	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/client.py	/^class BaseClient(object):$/;"	c
BaseClient	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/client.py	/^class BaseClient(object):$/;"	c
BaseClient	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/client.py	/^class BaseClient(object):$/;"	c
BaseClient	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/client.py	/^class BaseClient(object):$/;"	c
BaseClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/client.py	/^class BaseClient(object):$/;"	c
BaseClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/client.py	/^class BaseClient(object):$/;"	c
BaseClientExceptions	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/errorfactory.py	/^class BaseClientExceptions(object):$/;"	c
BaseClientExceptions	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/errorfactory.py	/^class BaseClientExceptions(object):$/;"	c
BaseClientExceptions	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/errorfactory.py	/^class BaseClientExceptions(object):$/;"	c
BaseClientExceptions	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/errorfactory.py	/^class BaseClientExceptions(object):$/;"	c
BaseClientExceptions	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/errorfactory.py	/^class BaseClientExceptions(object):$/;"	c
BaseClientExceptions	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/errorfactory.py	/^class BaseClientExceptions(object):$/;"	c
BaseCommand	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^class BaseCommand(object):$/;"	c
BaseCommand	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^class BaseCommand(object):$/;"	c
BaseContext	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^    BaseContext = object$/;"	v
BaseContext	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^    BaseContext = object$/;"	v
BaseDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/base.py	/^class BaseDocumenter(object):$/;"	c
BaseDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/base.py	/^class BaseDocumenter(object):$/;"	c
BaseDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/base.py	/^class BaseDocumenter(object):$/;"	c
BaseDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/base.py	/^class BaseDocumenter(object):$/;"	c
BaseDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/base.py	/^class BaseDocumenter(object):$/;"	c
BaseDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/base.py	/^class BaseDocumenter(object):$/;"	c
BaseEndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/regions.py	/^class BaseEndpointResolver(object):$/;"	c
BaseEndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/regions.py	/^class BaseEndpointResolver(object):$/;"	c
BaseEndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/regions.py	/^class BaseEndpointResolver(object):$/;"	c
BaseEndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/regions.py	/^class BaseEndpointResolver(object):$/;"	c
BaseEndpointResolver	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/regions.py	/^class BaseEndpointResolver(object):$/;"	c
BaseEndpointResolver	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/regions.py	/^class BaseEndpointResolver(object):$/;"	c
BaseEndpointResolverError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class BaseEndpointResolverError(BotoCoreError):$/;"	c
BaseEndpointResolverError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class BaseEndpointResolverError(BotoCoreError):$/;"	c
BaseEndpointResolverError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class BaseEndpointResolverError(BotoCoreError):$/;"	c
BaseEndpointResolverError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class BaseEndpointResolverError(BotoCoreError):$/;"	c
BaseEndpointResolverError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class BaseEndpointResolverError(BotoCoreError):$/;"	c
BaseEndpointResolverError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class BaseEndpointResolverError(BotoCoreError):$/;"	c
BaseEventHooks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/hooks.py	/^class BaseEventHooks(object):$/;"	c
BaseEventHooks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/hooks.py	/^class BaseEventHooks(object):$/;"	c
BaseEventHooks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/hooks.py	/^class BaseEventHooks(object):$/;"	c
BaseEventHooks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/hooks.py	/^class BaseEventHooks(object):$/;"	c
BaseEventHooks	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/hooks.py	/^class BaseEventHooks(object):$/;"	c
BaseEventHooks	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/hooks.py	/^class BaseEventHooks(object):$/;"	c
BaseEventStreamParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class BaseEventStreamParser(ResponseParser):$/;"	c
BaseEventStreamParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class BaseEventStreamParser(ResponseParser):$/;"	c
BaseEventStreamParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class BaseEventStreamParser(ResponseParser):$/;"	c
BaseEventStreamParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class BaseEventStreamParser(ResponseParser):$/;"	c
BaseEventStreamParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class BaseEventStreamParser(ResponseParser):$/;"	c
BaseEventStreamParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class BaseEventStreamParser(ResponseParser):$/;"	c
BaseExampleDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/example.py	/^class BaseExampleDocumenter(ShapeDocumenter):$/;"	c
BaseExampleDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/example.py	/^class BaseExampleDocumenter(ShapeDocumenter):$/;"	c
BaseExampleDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/example.py	/^class BaseExampleDocumenter(ShapeDocumenter):$/;"	c
BaseExampleDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/example.py	/^class BaseExampleDocumenter(ShapeDocumenter):$/;"	c
BaseExampleDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/example.py	/^class BaseExampleDocumenter(ShapeDocumenter):$/;"	c
BaseExampleDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/example.py	/^class BaseExampleDocumenter(ShapeDocumenter):$/;"	c
BaseExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/futures.py	/^class BaseExecutor(object):$/;"	c
BaseExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/futures.py	/^class BaseExecutor(object):$/;"	c
BaseExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/futures.py	/^class BaseExecutor(object):$/;"	c
BaseExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/futures.py	/^class BaseExecutor(object):$/;"	c
BaseExecutor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/futures.py	/^class BaseExecutor(object):$/;"	c
BaseExecutor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/futures.py	/^class BaseExecutor(object):$/;"	c
BaseFormat	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/formats.py	/^class BaseFormat(object):$/;"	c
BaseFormat	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/formats.py	/^class BaseFormat(object):$/;"	c
BaseHistoryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/history.py	/^class BaseHistoryHandler(object):$/;"	c
BaseHistoryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/history.py	/^class BaseHistoryHandler(object):$/;"	c
BaseHistoryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/history.py	/^class BaseHistoryHandler(object):$/;"	c
BaseHistoryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/history.py	/^class BaseHistoryHandler(object):$/;"	c
BaseHistoryHandler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/history.py	/^class BaseHistoryHandler(object):$/;"	c
BaseHistoryHandler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/history.py	/^class BaseHistoryHandler(object):$/;"	c
BaseJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class BaseJSONParser(ResponseParser):$/;"	c
BaseJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class BaseJSONParser(ResponseParser):$/;"	c
BaseJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class BaseJSONParser(ResponseParser):$/;"	c
BaseJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class BaseJSONParser(ResponseParser):$/;"	c
BaseJSONParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class BaseJSONParser(ResponseParser):$/;"	c
BaseJSONParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class BaseJSONParser(ResponseParser):$/;"	c
BaseModelBuilderCommand	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/api.py	/^class BaseModelBuilderCommand(BaseTheoremToolCommand, ModelBuilderCommand):$/;"	c
BaseModelBuilderCommand	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/api.py	/^class BaseModelBuilderCommand(BaseTheoremToolCommand, ModelBuilderCommand):$/;"	c
BaseMonitorEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/monitoring.py	/^class BaseMonitorEvent(object):$/;"	c
BaseMonitorEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/monitoring.py	/^class BaseMonitorEvent(object):$/;"	c
BaseMonitorEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/monitoring.py	/^class BaseMonitorEvent(object):$/;"	c
BaseMonitorEvent	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/monitoring.py	/^class BaseMonitorEvent(object):$/;"	c
BaseMonitorEvent	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/monitoring.py	/^class BaseMonitorEvent(object):$/;"	c
BaseMonitorEvent	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/monitoring.py	/^class BaseMonitorEvent(object):$/;"	c
BaseNPExtractor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^class BaseNPExtractor(with_metaclass(ABCMeta)):$/;"	c
BaseNPExtractor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^class BaseNPExtractor(with_metaclass(ABCMeta)):$/;"	c
BaseParamsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/params.py	/^class BaseParamsDocumenter(ShapeDocumenter):$/;"	c
BaseParamsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/params.py	/^class BaseParamsDocumenter(ShapeDocumenter):$/;"	c
BaseParamsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/params.py	/^class BaseParamsDocumenter(ShapeDocumenter):$/;"	c
BaseParamsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/params.py	/^class BaseParamsDocumenter(ShapeDocumenter):$/;"	c
BaseParamsDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/params.py	/^class BaseParamsDocumenter(ShapeDocumenter):$/;"	c
BaseParamsDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/params.py	/^class BaseParamsDocumenter(ShapeDocumenter):$/;"	c
BaseParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^class BaseParser(with_metaclass(ABCMeta)):$/;"	c
BaseParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^class BaseParser(with_metaclass(ABCMeta)):$/;"	c
BaseProverCommand	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/api.py	/^class BaseProverCommand(BaseTheoremToolCommand, ProverCommand):$/;"	c
BaseProverCommand	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/api.py	/^class BaseProverCommand(BaseTheoremToolCommand, ProverCommand):$/;"	c
BaseProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^class BaseProvider(object):$/;"	c
BaseProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^class BaseProvider(object):$/;"	c
BaseProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^class BaseProvider(object):$/;"	c
BaseProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^class BaseProvider(object):$/;"	c
BaseProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^class BaseProvider(object):$/;"	c
BaseProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^class BaseProvider(object):$/;"	c
BaseRestParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class BaseRestParser(ResponseParser):$/;"	c
BaseRestParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class BaseRestParser(ResponseParser):$/;"	c
BaseRestParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class BaseRestParser(ResponseParser):$/;"	c
BaseRestParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class BaseRestParser(ResponseParser):$/;"	c
BaseRestParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class BaseRestParser(ResponseParser):$/;"	c
BaseRestParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class BaseRestParser(ResponseParser):$/;"	c
BaseRestSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/serialize.py	/^class BaseRestSerializer(Serializer):$/;"	c
BaseRestSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/serialize.py	/^class BaseRestSerializer(Serializer):$/;"	c
BaseRestSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/serialize.py	/^class BaseRestSerializer(Serializer):$/;"	c
BaseRestSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/serialize.py	/^class BaseRestSerializer(Serializer):$/;"	c
BaseRestSerializer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/serialize.py	/^class BaseRestSerializer(Serializer):$/;"	c
BaseRestSerializer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/serialize.py	/^class BaseRestSerializer(Serializer):$/;"	c
BaseRetryBackoff	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/base.py	/^class BaseRetryBackoff(object):$/;"	c
BaseRetryBackoff	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/base.py	/^class BaseRetryBackoff(object):$/;"	c
BaseRetryBackoff	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/base.py	/^class BaseRetryBackoff(object):$/;"	c
BaseRetryBackoff	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/base.py	/^class BaseRetryBackoff(object):$/;"	c
BaseRetryBackoff	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/base.py	/^class BaseRetryBackoff(object):$/;"	c
BaseRetryBackoff	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/base.py	/^class BaseRetryBackoff(object):$/;"	c
BaseRetryableChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/base.py	/^class BaseRetryableChecker(object):$/;"	c
BaseRetryableChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/base.py	/^class BaseRetryableChecker(object):$/;"	c
BaseRetryableChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/base.py	/^class BaseRetryableChecker(object):$/;"	c
BaseRetryableChecker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/base.py	/^class BaseRetryableChecker(object):$/;"	c
BaseRetryableChecker	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/base.py	/^class BaseRetryableChecker(object):$/;"	c
BaseRetryableChecker	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/base.py	/^class BaseRetryableChecker(object):$/;"	c
BaseS3TransferProcess	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/processpool.py	/^class BaseS3TransferProcess(multiprocessing.Process):$/;"	c
BaseS3TransferProcess	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/processpool.py	/^class BaseS3TransferProcess(multiprocessing.Process):$/;"	c
BaseS3TransferProcess	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/processpool.py	/^class BaseS3TransferProcess(multiprocessing.Process):$/;"	c
BaseS3TransferProcess	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/processpool.py	/^class BaseS3TransferProcess(multiprocessing.Process):$/;"	c
BaseS3TransferProcess	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/processpool.py	/^class BaseS3TransferProcess(multiprocessing.Process):$/;"	c
BaseS3TransferProcess	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/processpool.py	/^class BaseS3TransferProcess(multiprocessing.Process):$/;"	c
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSSLError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSSLError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSentimentAnalyzer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^class BaseSentimentAnalyzer(with_metaclass(ABCMeta)):$/;"	c
BaseSentimentAnalyzer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^class BaseSentimentAnalyzer(with_metaclass(ABCMeta)):$/;"	c
BaseSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/auth.py	/^class BaseSigner(object):$/;"	c
BaseSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/auth.py	/^class BaseSigner(object):$/;"	c
BaseSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/auth.py	/^class BaseSigner(object):$/;"	c
BaseSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/auth.py	/^class BaseSigner(object):$/;"	c
BaseSigner	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/auth.py	/^class BaseSigner(object):$/;"	c
BaseSigner	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/auth.py	/^class BaseSigner(object):$/;"	c
BaseStyle	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/bcdoc/style.py	/^class BaseStyle(object):$/;"	c
BaseStyle	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/bcdoc/style.py	/^class BaseStyle(object):$/;"	c
BaseStyle	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/bcdoc/style.py	/^class BaseStyle(object):$/;"	c
BaseStyle	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/bcdoc/style.py	/^class BaseStyle(object):$/;"	c
BaseStyle	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/bcdoc/style.py	/^class BaseStyle(object):$/;"	c
BaseStyle	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/bcdoc/style.py	/^class BaseStyle(object):$/;"	c
BaseSubscriber	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/subscribers.py	/^class BaseSubscriber(object):$/;"	c
BaseSubscriber	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/subscribers.py	/^class BaseSubscriber(object):$/;"	c
BaseSubscriber	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/subscribers.py	/^class BaseSubscriber(object):$/;"	c
BaseSubscriber	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/subscribers.py	/^class BaseSubscriber(object):$/;"	c
BaseSubscriber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/subscribers.py	/^class BaseSubscriber(object):$/;"	c
BaseSubscriber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/subscribers.py	/^class BaseSubscriber(object):$/;"	c
BaseTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^class BaseTagger(with_metaclass(ABCMeta)):$/;"	c
BaseTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^class BaseTagger(with_metaclass(ABCMeta)):$/;"	c
BaseTheoremToolCommand	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/api.py	/^class BaseTheoremToolCommand(TheoremToolCommand):$/;"	c
BaseTheoremToolCommand	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/api.py	/^class BaseTheoremToolCommand(TheoremToolCommand):$/;"	c
BaseTokenizer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^class BaseTokenizer(with_metaclass(ABCMeta), nltk.tokenize.api.TokenizerI):$/;"	c
BaseTokenizer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^class BaseTokenizer(with_metaclass(ABCMeta), nltk.tokenize.api.TokenizerI):$/;"	c
BaseTransferFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/futures.py	/^class BaseTransferFuture(object):$/;"	c
BaseTransferFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/futures.py	/^class BaseTransferFuture(object):$/;"	c
BaseTransferFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/futures.py	/^class BaseTransferFuture(object):$/;"	c
BaseTransferFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/futures.py	/^class BaseTransferFuture(object):$/;"	c
BaseTransferFuture	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/futures.py	/^class BaseTransferFuture(object):$/;"	c
BaseTransferFuture	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/futures.py	/^class BaseTransferFuture(object):$/;"	c
BaseTransferMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/futures.py	/^class BaseTransferMeta(object):$/;"	c
BaseTransferMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/futures.py	/^class BaseTransferMeta(object):$/;"	c
BaseTransferMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/futures.py	/^class BaseTransferMeta(object):$/;"	c
BaseTransferMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/futures.py	/^class BaseTransferMeta(object):$/;"	c
BaseTransferMeta	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/futures.py	/^class BaseTransferMeta(object):$/;"	c
BaseTransferMeta	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/futures.py	/^class BaseTransferMeta(object):$/;"	c
BaseXMLResponseParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class BaseXMLResponseParser(ResponseParser):$/;"	c
BaseXMLResponseParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class BaseXMLResponseParser(ResponseParser):$/;"	c
BaseXMLResponseParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class BaseXMLResponseParser(ResponseParser):$/;"	c
BaseXMLResponseParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class BaseXMLResponseParser(ResponseParser):$/;"	c
BaseXMLResponseParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class BaseXMLResponseParser(ResponseParser):$/;"	c
BaseXMLResponseParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class BaseXMLResponseParser(ResponseParser):$/;"	c
BasicTweetHandler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/twitter/api.py	/^class BasicTweetHandler(metaclass=ABCMeta):$/;"	c
BasicTweetHandler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/twitter/api.py	/^class BasicTweetHandler(metaclass=ABCMeta):$/;"	c
BasicType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class BasicType(Type):$/;"	c
BasicType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class BasicType(Type):$/;"	c
Batch	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/_dask.py	/^class Batch:$/;"	c
Batch	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/_dask.py	/^class Batch:$/;"	c
BatchAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/action.py	/^class BatchAction(ServiceAction):$/;"	c
BatchAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/action.py	/^class BatchAction(ServiceAction):$/;"	c
BatchAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/action.py	/^class BatchAction(ServiceAction):$/;"	c
BatchAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/action.py	/^class BatchAction(ServiceAction):$/;"	c
BatchAction	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/action.py	/^class BatchAction(ServiceAction):$/;"	c
BatchAction	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/action.py	/^class BatchAction(ServiceAction):$/;"	c
BatchActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/docstring.py	/^class BatchActionDocstring(LazyLoadedDocstring):$/;"	c
BatchActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/docstring.py	/^class BatchActionDocstring(LazyLoadedDocstring):$/;"	c
BatchActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/docstring.py	/^class BatchActionDocstring(LazyLoadedDocstring):$/;"	c
BatchActionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/docstring.py	/^class BatchActionDocstring(LazyLoadedDocstring):$/;"	c
BatchActionDocstring	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/docstring.py	/^class BatchActionDocstring(LazyLoadedDocstring):$/;"	c
BatchActionDocstring	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/docstring.py	/^class BatchActionDocstring(LazyLoadedDocstring):$/;"	c
BatchCompletionCallBack	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^class BatchCompletionCallBack(object):$/;"	c
BatchCompletionCallBack	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^class BatchCompletionCallBack(object):$/;"	c
BatchWriter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/table.py	/^class BatchWriter(object):$/;"	c
BatchWriter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/table.py	/^class BatchWriter(object):$/;"	c
BatchWriter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/table.py	/^class BatchWriter(object):$/;"	c
BatchWriter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/table.py	/^class BatchWriter(object):$/;"	c
BatchWriter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/table.py	/^class BatchWriter(object):$/;"	c
BatchWriter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/table.py	/^class BatchWriter(object):$/;"	c
BatchedCalls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^class BatchedCalls(object):$/;"	c
BatchedCalls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^class BatchedCalls(object):$/;"	c
BeginsWith	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class BeginsWith(ConditionBase):$/;"	c
BeginsWith	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class BeginsWith(ConditionBase):$/;"	c
BeginsWith	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class BeginsWith(ConditionBase):$/;"	c
BeginsWith	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class BeginsWith(ConditionBase):$/;"	c
BeginsWith	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class BeginsWith(ConditionBase):$/;"	c
BeginsWith	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class BeginsWith(ConditionBase):$/;"	c
Between	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class Between(ConditionBase):$/;"	c
Between	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class Between(ConditionBase):$/;"	c
Between	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class Between(ConditionBase):$/;"	c
Between	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class Between(ConditionBase):$/;"	c
Between	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Between(ConditionBase):$/;"	c
Between	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Between(ConditionBase):$/;"	c
Big5DistributionAnalysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/chardistribution.py	/^class Big5DistributionAnalysis(CharDistributionAnalysis):$/;"	c
Big5DistributionAnalysis	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/chardistribution.py	/^class Big5DistributionAnalysis(CharDistributionAnalysis):$/;"	c
Big5Prober	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/big5prober.py	/^class Big5Prober(MultiByteCharSetProber):$/;"	c
Big5Prober	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/big5prober.py	/^class Big5Prober(MultiByteCharSetProber):$/;"	c
BigramAssocMeasures	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/association.py	/^class BigramAssocMeasures(NgramAssocMeasures):$/;"	c
BigramAssocMeasures	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/association.py	/^class BigramAssocMeasures(NgramAssocMeasures):$/;"	c
BigramCollocationFinder	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/collocations.py	/^class BigramCollocationFinder(AbstractCollocationFinder):$/;"	c
BigramCollocationFinder	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/collocations.py	/^class BigramCollocationFinder(AbstractCollocationFinder):$/;"	c
BigramTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/sequential.py	/^class BigramTagger(NgramTagger):$/;"	c
BigramTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/sequential.py	/^class BigramTagger(NgramTagger):$/;"	c
Binary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/types.py	/^class Binary(object):$/;"	c
Binary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/types.py	/^class Binary(object):$/;"	c
Binary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/types.py	/^class Binary(object):$/;"	c
Binary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/types.py	/^class Binary(object):$/;"	c
Binary	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/types.py	/^class Binary(object):$/;"	c
Binary	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/types.py	/^class Binary(object):$/;"	c
BinaryCombinatorRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^class BinaryCombinatorRule(AbstractChartRule):$/;"	c
BinaryCombinatorRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^class BinaryCombinatorRule(AbstractChartRule):$/;"	c
BinaryCompressorTestFile	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^    class BinaryCompressorTestFile(io.BufferedIOBase):$/;"	c	function:test_register_compressor
BinaryCompressorTestFile	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^    class BinaryCompressorTestFile(io.BufferedIOBase):$/;"	c	function:test_register_compressor
BinaryCompressorTestWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^    class BinaryCompressorTestWrapper(CompressorWrapper):$/;"	c	function:test_register_compressor
BinaryCompressorTestWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^    class BinaryCompressorTestWrapper(CompressorWrapper):$/;"	c	function:test_register_compressor
BinaryExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class BinaryExpression(Expression):$/;"	c
BinaryExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class BinaryExpression(Expression):$/;"	c
BinaryGzipFile	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/compressor.py	/^class BinaryGzipFile(BinaryZlibFile):$/;"	c
BinaryGzipFile	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/compressor.py	/^class BinaryGzipFile(BinaryZlibFile):$/;"	c
BinaryMaxentFeatureEncoding	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/maxent.py	/^class BinaryMaxentFeatureEncoding(MaxentFeatureEncodingI):$/;"	c
BinaryMaxentFeatureEncoding	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/maxent.py	/^class BinaryMaxentFeatureEncoding(MaxentFeatureEncodingI):$/;"	c
BinaryZlibFile	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/compressor.py	/^class BinaryZlibFile(io.BufferedIOBase):$/;"	c
BinaryZlibFile	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/compressor.py	/^class BinaryZlibFile(io.BufferedIOBase):$/;"	c
BindingDict	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/resolution.py	/^class BindingDict(object):$/;"	c
BindingDict	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class BindingDict(object):$/;"	c
BindingDict	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/resolution.py	/^class BindingDict(object):$/;"	c
BindingDict	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class BindingDict(object):$/;"	c
BindingException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/resolution.py	/^class BindingException(Exception):$/;"	c
BindingException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/resolution.py	/^class BindingException(Exception):$/;"	c
BlanklineTokenizer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/regexp.py	/^class BlanklineTokenizer(RegexpTokenizer):$/;"	c
BlanklineTokenizer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/regexp.py	/^class BlanklineTokenizer(RegexpTokenizer):$/;"	c
BllipParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/bllip.py	/^class BllipParser(ParserI):$/;"	c
BllipParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/bllip.py	/^class BllipParser(ParserI):$/;"	c
BlobComparableMixin	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/mixins.py	/^class BlobComparableMixin(ComparableMixin):$/;"	c
BlobComparableMixin	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/mixins.py	/^class BlobComparableMixin(ComparableMixin):$/;"	c
Blobber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/blob.py	/^class Blobber(object):$/;"	c
Blobber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/blob.py	/^class Blobber(object):$/;"	c
BlockingPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/helpers/actions.py	/^    class BlockingPool(ThreadPool):$/;"	c
BlockingPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/helpers/actions.py	/^    class BlockingPool(ThreadPool):$/;"	c
BodyNotHttplibCompatible	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BodyNotHttplibCompatible	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BodyNotHttplibCompatible	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BodyNotHttplibCompatible	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BodyNotHttplibCompatible	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BodyNotHttplibCompatible	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BoolParamType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/types.py	/^class BoolParamType(ParamType):$/;"	c
BoolParamType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/types.py	/^class BoolParamType(ParamType):$/;"	c
Boolean	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
Boolean	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
Boolean	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
Boolean	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
Boolean	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
Boolean	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
BooleanExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class BooleanExpression(BinaryExpression):$/;"	c
BooleanExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class BooleanExpression(BinaryExpression):$/;"	c
Boto3ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/client.py	/^class Boto3ClientDocumenter(ClientDocumenter):$/;"	c
Boto3ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/client.py	/^class Boto3ClientDocumenter(ClientDocumenter):$/;"	c
Boto3ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/client.py	/^class Boto3ClientDocumenter(ClientDocumenter):$/;"	c
Boto3ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/client.py	/^class Boto3ClientDocumenter(ClientDocumenter):$/;"	c
Boto3ClientDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/client.py	/^class Boto3ClientDocumenter(ClientDocumenter):$/;"	c
Boto3ClientDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/client.py	/^class Boto3ClientDocumenter(ClientDocumenter):$/;"	c
Boto3Error	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/exceptions.py	/^class Boto3Error(Exception):$/;"	c
Boto3Error	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/exceptions.py	/^class Boto3Error(Exception):$/;"	c
Boto3Error	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/exceptions.py	/^class Boto3Error(Exception):$/;"	c
Boto3Error	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/exceptions.py	/^class Boto3Error(Exception):$/;"	c
Boto3Error	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/exceptions.py	/^class Boto3Error(Exception):$/;"	c
Boto3Error	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/exceptions.py	/^class Boto3Error(Exception):$/;"	c
BotoCoreError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class BotoCoreError(Exception):$/;"	c
BotoCoreError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class BotoCoreError(Exception):$/;"	c
BotoCoreError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class BotoCoreError(Exception):$/;"	c
BotoCoreError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class BotoCoreError(Exception):$/;"	c
BotoCoreError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class BotoCoreError(Exception):$/;"	c
BotoCoreError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class BotoCoreError(Exception):$/;"	c
BotoProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class BotoProvider(CredentialProvider):$/;"	c
BotoProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class BotoProvider(CredentialProvider):$/;"	c
BotoProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class BotoProvider(CredentialProvider):$/;"	c
BotoProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class BotoProvider(CredentialProvider):$/;"	c
BotoProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class BotoProvider(CredentialProvider):$/;"	c
BotoProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class BotoProvider(CredentialProvider):$/;"	c
BottomUpChartParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpChartParser(ChartParser):$/;"	c
BottomUpChartParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpChartParser(ChartParser):$/;"	c
BottomUpEdgeRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class BottomUpEdgeRule(EdgeRule, BottomUpPredictRule):$/;"	c
BottomUpEdgeRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class BottomUpEdgeRule(EdgeRule, BottomUpPredictRule):$/;"	c
BottomUpLeftCornerChartParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpLeftCornerChartParser(ChartParser):$/;"	c
BottomUpLeftCornerChartParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpLeftCornerChartParser(ChartParser):$/;"	c
BottomUpLeftCornerEdgeRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class BottomUpLeftCornerEdgeRule(EdgeRule, BottomUpPredictCombineRule):$/;"	c
BottomUpLeftCornerEdgeRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class BottomUpLeftCornerEdgeRule(EdgeRule, BottomUpPredictCombineRule):$/;"	c
BottomUpPredictCombineRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpPredictCombineRule(BottomUpPredictRule):$/;"	c
BottomUpPredictCombineRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpPredictCombineRule(BottomUpPredictRule):$/;"	c
BottomUpPredictRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpPredictRule(AbstractChartRule):$/;"	c
BottomUpPredictRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class BottomUpPredictRule(AbstractChartRule):$/;"	c
BottomUpProbabilisticChartParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/pchart.py	/^class BottomUpProbabilisticChartParser(ParserI):$/;"	c
BottomUpProbabilisticChartParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/pchart.py	/^class BottomUpProbabilisticChartParser(ParserI):$/;"	c
Boundary	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class Boundary(ZeroWidthBase):$/;"	c
Boundary	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class Boundary(ZeroWidthBase):$/;"	c
BoundedExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/futures.py	/^class BoundedExecutor(object):$/;"	c
BoundedExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/futures.py	/^class BoundedExecutor(object):$/;"	c
BoundedExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/futures.py	/^class BoundedExecutor(object):$/;"	c
BoundedExecutor	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/futures.py	/^class BoundedExecutor(object):$/;"	c
BoundedExecutor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/futures.py	/^class BoundedExecutor(object):$/;"	c
BoundedExecutor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/futures.py	/^class BoundedExecutor(object):$/;"	c
BoundedSemaphore	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^        def BoundedSemaphore(self, value):$/;"	f	function:LokyContext.SimpleQueue
BoundedSemaphore	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/synchronize.py	/^class BoundedSemaphore(Semaphore):$/;"	c
BoundedSemaphore	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^        def BoundedSemaphore(self, value):$/;"	f	function:LokyContext.SimpleQueue
BoundedSemaphore	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/synchronize.py	/^class BoundedSemaphore(Semaphore):$/;"	c
BoxWidget	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class BoxWidget(AbstractContainerWidget):$/;"	c
BoxWidget	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class BoxWidget(AbstractContainerWidget):$/;"	c
Boxer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class Boxer(object):$/;"	c
Boxer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class Boxer(object):$/;"	c
BoxerCard	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerCard(BoxerIndexed):$/;"	c
BoxerCard	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerCard(BoxerIndexed):$/;"	c
BoxerDrs	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerDrs(AbstractBoxerDrs):$/;"	c
BoxerDrs	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerDrs(AbstractBoxerDrs):$/;"	c
BoxerDrsParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerDrsParser(DrtParser):$/;"	c
BoxerDrsParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerDrsParser(DrtParser):$/;"	c
BoxerEq	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerEq(BoxerIndexed):$/;"	c
BoxerEq	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerEq(BoxerIndexed):$/;"	c
BoxerIndexed	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerIndexed(AbstractBoxerDrs):$/;"	c
BoxerIndexed	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerIndexed(AbstractBoxerDrs):$/;"	c
BoxerNamed	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerNamed(BoxerIndexed):$/;"	c
BoxerNamed	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerNamed(BoxerIndexed):$/;"	c
BoxerNot	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerNot(AbstractBoxerDrs):$/;"	c
BoxerNot	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerNot(AbstractBoxerDrs):$/;"	c
BoxerOr	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerOr(BoxerIndexed):$/;"	c
BoxerOr	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerOr(BoxerIndexed):$/;"	c
BoxerOutputDrsParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerOutputDrsParser(DrtParser):$/;"	c
BoxerOutputDrsParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerOutputDrsParser(DrtParser):$/;"	c
BoxerPred	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerPred(BoxerIndexed):$/;"	c
BoxerPred	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerPred(BoxerIndexed):$/;"	c
BoxerProp	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerProp(BoxerIndexed):$/;"	c
BoxerProp	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerProp(BoxerIndexed):$/;"	c
BoxerRel	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerRel(BoxerIndexed):$/;"	c
BoxerRel	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerRel(BoxerIndexed):$/;"	c
BoxerWhq	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerWhq(BoxerIndexed):$/;"	c
BoxerWhq	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/boxer.py	/^class BoxerWhq(BoxerIndexed):$/;"	c
BracketParseCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^class BracketParseCorpusReader(SyntaxCorpusReader):$/;"	c
BracketParseCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^class BracketParseCorpusReader(SyntaxCorpusReader):$/;"	c
BracketWidget	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class BracketWidget(AbstractContainerWidget):$/;"	c
BracketWidget	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class BracketWidget(AbstractContainerWidget):$/;"	c
Branch	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class Branch(RegexBase):$/;"	c
Branch	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class Branch(RegexBase):$/;"	c
BrillTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/brill.py	/^class BrillTagger(TaggerI):$/;"	c
BrillTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/brill.py	/^class BrillTagger(TaggerI):$/;"	c
BrillTaggerTrainer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/brill_trainer.py	/^class BrillTaggerTrainer(object):$/;"	c
BrillTaggerTrainer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/brill_trainer.py	/^class BrillTaggerTrainer(object):$/;"	c
BrillTemplateI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tbl/template.py	/^class BrillTemplateI(metaclass=ABCMeta):$/;"	c
BrillTemplateI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tbl/template.py	/^class BrillTemplateI(metaclass=ABCMeta):$/;"	c
BrokenExecutor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/process_executor.py	/^BrokenExecutor = BrokenProcessPool$/;"	v
BrokenExecutor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/process_executor.py	/^BrokenExecutor = BrokenProcessPool$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^    BrokenPipeError = BrokenPipeError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^    class BrokenPipeError(Exception):$/;"	c
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^    BrokenPipeError = BrokenPipeError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^    class BrokenPipeError(Exception):$/;"	c
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^    BrokenPipeError = BrokenPipeError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^    class BrokenPipeError(Exception):$/;"	c
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^    BrokenPipeError = BrokenPipeError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^    class BrokenPipeError(Exception):$/;"	c
BrokenPipeError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/resource_tracker.py	/^    BrokenPipeError = OSError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^    BrokenPipeError = BrokenPipeError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^    class BrokenPipeError(Exception):$/;"	c
BrokenPipeError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/resource_tracker.py	/^    BrokenPipeError = OSError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^    BrokenPipeError = BrokenPipeError$/;"	v
BrokenPipeError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^    class BrokenPipeError(Exception):$/;"	c
BrokenProcessPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/process_executor.py	/^class BrokenProcessPool(_BPPException):$/;"	c
BrokenProcessPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/process_executor.py	/^class BrokenProcessPool(_BPPException):$/;"	c
BrotliDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/response.py	/^    class BrotliDecoder(object):$/;"	c	class:GzipDecoder
BrotliDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/response.py	/^    class BrotliDecoder(object):$/;"	c	class:GzipDecoder
BrotliDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/response.py	/^    class BrotliDecoder(object):$/;"	c	class:GzipDecoder
BrotliDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/response.py	/^    class BrotliDecoder(object):$/;"	c	class:GzipDecoder
BrotliDecoder	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/response.py	/^    class BrotliDecoder(object):$/;"	c	class:GzipDecoder
BrotliDecoder	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/response.py	/^    class BrotliDecoder(object):$/;"	c	class:GzipDecoder
BufferedGzipFile	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/data.py	/^class BufferedGzipFile(GzipFile):$/;"	c
BufferedGzipFile	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/data.py	/^class BufferedGzipFile(GzipFile):$/;"	c
BuiltConditionExpression	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^BuiltConditionExpression = namedtuple($/;"	v
BuiltConditionExpression	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^BuiltConditionExpression = namedtuple($/;"	v
BuiltConditionExpression	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^BuiltConditionExpression = namedtuple($/;"	v
BuiltConditionExpression	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^BuiltConditionExpression = namedtuple($/;"	v
BuiltConditionExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^BuiltConditionExpression = namedtuple($/;"	v
BuiltConditionExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^BuiltConditionExpression = namedtuple($/;"	v
BulgarianLangModel	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/langbulgarianmodel.py	/^BulgarianLangModel = ($/;"	v
BulgarianLangModel	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/langbulgarianmodel.py	/^BulgarianLangModel = ($/;"	v
BulkIndexError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/helpers/errors.py	/^class BulkIndexError(ElasticsearchException):$/;"	c
BulkIndexError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/helpers/errors.py	/^class BulkIndexError(ElasticsearchException):$/;"	c
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesSubclass	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^class BytesSubclass(bytes):$/;"	c
BytesSubclass	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^class BytesSubclass(bytes):$/;"	c
C	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/maxent.py	/^    def C(self):$/;"	m	class:GISEncoding
C	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/maxent.py	/^    def C(self):$/;"	m	class:GISEncoding
CACHE_DIR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CACHE_DIR = os.path.expanduser(os.path.join('~', '.aws', 'boto', 'cache'))$/;"	v	class:JSONFileCache
CACHE_DIR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CACHE_DIR = os.path.expanduser(os.path.join('~', '.aws', 'boto', 'cache'))$/;"	v	class:JSONFileCache
CACHE_DIR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CACHE_DIR = os.path.expanduser(os.path.join('~', '.aws', 'boto', 'cache'))$/;"	v	class:JSONFileCache
CACHE_DIR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CACHE_DIR = os.path.expanduser(os.path.join('~', '.aws', 'boto', 'cache'))$/;"	v	class:JSONFileCache
CACHE_DIR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CACHE_DIR = os.path.expanduser(os.path.join('~', '.aws', 'boto', 'cache'))$/;"	v	class:JSONFileCache
CACHE_DIR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CACHE_DIR = os.path.expanduser(os.path.join('~', '.aws', 'boto', 'cache'))$/;"	v	class:JSONFileCache
CANCELLED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    CANCELLED = 'CANCELLED'$/;"	v
CANCELLED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    CANCELLED = 'CANCELLED'$/;"	v
CANCELLED_AND_NOTIFIED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    CANCELLED_AND_NOTIFIED = 'CANCELLED_AND_NOTIFIED'$/;"	v
CANCELLED_AND_NOTIFIED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    CANCELLED_AND_NOTIFIED = 'CANCELLED_AND_NOTIFIED'$/;"	v
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'Boto2Config'$/;"	v	class:BotoProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2Config'$/;"	v	class:OriginalEC2Provider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2InstanceMetadata'$/;"	v	class:InstanceMetadataProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'EcsContainer'$/;"	v	class:ContainerProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'Environment'$/;"	v	class:EnvProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedConfig'$/;"	v	class:ConfigProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedCredentials'$/;"	v	class:SharedCredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleWithWebIdentityProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:CredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'Boto2Config'$/;"	v	class:BotoProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2Config'$/;"	v	class:OriginalEC2Provider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2InstanceMetadata'$/;"	v	class:InstanceMetadataProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'EcsContainer'$/;"	v	class:ContainerProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'Environment'$/;"	v	class:EnvProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedConfig'$/;"	v	class:ConfigProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedCredentials'$/;"	v	class:SharedCredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleWithWebIdentityProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:CredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'Boto2Config'$/;"	v	class:BotoProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2Config'$/;"	v	class:OriginalEC2Provider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2InstanceMetadata'$/;"	v	class:InstanceMetadataProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'EcsContainer'$/;"	v	class:ContainerProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'Environment'$/;"	v	class:EnvProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedConfig'$/;"	v	class:ConfigProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedCredentials'$/;"	v	class:SharedCredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleWithWebIdentityProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:CredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'Boto2Config'$/;"	v	class:BotoProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2Config'$/;"	v	class:OriginalEC2Provider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2InstanceMetadata'$/;"	v	class:InstanceMetadataProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'EcsContainer'$/;"	v	class:ContainerProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'Environment'$/;"	v	class:EnvProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedConfig'$/;"	v	class:ConfigProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedCredentials'$/;"	v	class:SharedCredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleWithWebIdentityProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:CredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Boto2Config'$/;"	v	class:BotoProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2Config'$/;"	v	class:OriginalEC2Provider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2InstanceMetadata'$/;"	v	class:InstanceMetadataProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'EcsContainer'$/;"	v	class:ContainerProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Environment'$/;"	v	class:EnvProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedConfig'$/;"	v	class:ConfigProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedCredentials'$/;"	v	class:SharedCredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleWithWebIdentityProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:CredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Boto2Config'$/;"	v	class:BotoProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2Config'$/;"	v	class:OriginalEC2Provider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Ec2InstanceMetadata'$/;"	v	class:InstanceMetadataProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'EcsContainer'$/;"	v	class:ContainerProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'Environment'$/;"	v	class:EnvProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedConfig'$/;"	v	class:ConfigProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = 'SharedCredentials'$/;"	v	class:SharedCredentialProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:AssumeRoleWithWebIdentityProvider
CANONICAL_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CANONICAL_NAME = None$/;"	v	class:CredentialProvider
CANT_TURN_OFF	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    CANT_TURN_OFF = "bad inline flags: cannot turn flags off"$/;"	v	class:RegexTests
CANT_TURN_OFF	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    CANT_TURN_OFF = "bad inline flags: cannot turn flags off"$/;"	v	class:RegexTests
CASE_FLAGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^CASE_FLAGS = FULLCASE | IGNORECASE$/;"	v
CASE_FLAGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^CASE_FLAGS = FULLCASE | IGNORECASE$/;"	v
CASE_FLAGS_COMBINATIONS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^CASE_FLAGS_COMBINATIONS = {0: 0, FULLCASE: 0, IGNORECASE: IGNORECASE,$/;"	v
CASE_FLAGS_COMBINATIONS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^CASE_FLAGS_COMBINATIONS = {0: 0, FULLCASE: 0, IGNORECASE: IGNORECASE,$/;"	v
CASE_TEXT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^CASE_TEXT = {NOCASE: "", IGNORECASE: " SIMPLE_IGNORE_CASE", FULLCASE: "",$/;"	v
CASE_TEXT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^CASE_TEXT = {NOCASE: "", IGNORECASE: " SIMPLE_IGNORE_CASE", FULLCASE: "",$/;"	v
CAUSE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CAUSE = 14$/;"	v
CAUSE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CAUSE = 14$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^    CA_CERTS = certifi.where()$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^CA_CERTS = None$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection/http_urllib3.py	/^    CA_CERTS = certifi.where()$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection/http_urllib3.py	/^CA_CERTS = None$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^    CA_CERTS = certifi.where()$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^CA_CERTS = None$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection/http_urllib3.py	/^    CA_CERTS = certifi.where()$/;"	v
CA_CERTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection/http_urllib3.py	/^CA_CERTS = None$/;"	v
CCGChart	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGChart(Chart):$/;"	c
CCGChart	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGChart(Chart):$/;"	c
CCGChartParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGChartParser(ParserI):$/;"	c
CCGChartParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGChartParser(ParserI):$/;"	c
CCGEdge	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGEdge(EdgeI):$/;"	c
CCGEdge	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGEdge(EdgeI):$/;"	c
CCGLeafEdge	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGLeafEdge(EdgeI):$/;"	c
CCGLeafEdge	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^class CCGLeafEdge(EdgeI):$/;"	c
CCGLexicon	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/lexicon.py	/^class CCGLexicon(object):$/;"	c
CCGLexicon	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/lexicon.py	/^class CCGLexicon(object):$/;"	c
CCGVar	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/api.py	/^class CCGVar(AbstractCCGCategory):$/;"	c
CCGVar	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/api.py	/^class CCGVar(AbstractCCGCategory):$/;"	c
CD	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^CD = re.compile(r"^[0-9\\-\\,\\.\\:\\\/\\%\\$]+$")$/;"	v
CD	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^CD = re.compile(r"^[0-9\\-\\,\\.\\:\\\/\\%\\$]+$")$/;"	v
CFAllocatorRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFAllocatorRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFAllocatorRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFAllocatorRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFAllocatorRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFAllocatorRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArray	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArray	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArrayCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayCallBacks	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayCallBacks	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFArrayRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFArrayRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFConst	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFConst	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFConst	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFConst	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFConst	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFConst	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFData	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFData	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFData	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFData	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFData	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFData	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFDataRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDataRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDataRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDataRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDataRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDataRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDictionary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionary	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionary	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionary	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionaryKeyCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryKeyCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryKeyCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryKeyCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryKeyCallBacks	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryKeyCallBacks	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryValueCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFDictionaryValueCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFDictionaryValueCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFDictionaryValueCallBacks	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFDictionaryValueCallBacks	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFDictionaryValueCallBacks	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/grammar.py	/^class CFG(object):$/;"	c
CFG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/en/np_extractors.py	/^    CFG = {$/;"	v	class:ConllExtractor
CFG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/en/np_extractors.py	/^    CFG = {$/;"	v	class:FastNPExtractor
CFG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/grammar.py	/^class CFG(object):$/;"	c
CFG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/en/np_extractors.py	/^    CFG = {$/;"	v	class:ConllExtractor
CFG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/en/np_extractors.py	/^    CFG = {$/;"	v	class:FastNPExtractor
CFGDemo	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/cfg.py	/^class CFGDemo(object):$/;"	c
CFGDemo	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/cfg.py	/^class CFGDemo(object):$/;"	c
CFGEditor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/cfg.py	/^class CFGEditor(object):$/;"	c
CFGEditor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/cfg.py	/^class CFGEditor(object):$/;"	c
CFIndex	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFIndex	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFIndex	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFIndex	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFIndex	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFIndex	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFMutableArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArray	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArray	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArray	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFMutableArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFMutableArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFMutableArrayRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFMutableArrayRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFMutableArrayRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFString	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFString	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFString	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFString	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFString	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFString	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFStringEncoding	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringEncoding	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringEncoding	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringEncoding	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringEncoding	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringEncoding	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFStringRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFStringRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFStringRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFStringRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFStringRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFType	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFTypeID	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeID	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeID	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeID	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeID	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeID	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CFTypeRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CFTypeRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CFTypeRef	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CFTypeRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CFTypeRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CHARACTER_ESCAPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^CHARACTER_ESCAPES = {$/;"	v
CHARACTER_ESCAPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^CHARACTER_ESCAPES = {$/;"	v
CHARSET_ESCAPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^CHARSET_ESCAPES = {$/;"	v
CHARSET_ESCAPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^CHARSET_ESCAPES = {$/;"	v
CHART_FILE_TYPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^    CHART_FILE_TYPES = [("Pickle file", ".pickle"), ("All files", "*")]$/;"	v	class:ChartComparer
CHART_FILE_TYPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^    CHART_FILE_TYPES = [("Pickle file", ".pickle"), ("All files", "*")]$/;"	v	class:ChartParserApp
CHART_FILE_TYPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^    CHART_FILE_TYPES = [("Pickle file", ".pickle"), ("All files", "*")]$/;"	v	class:ChartComparer
CHART_FILE_TYPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^    CHART_FILE_TYPES = [("Pickle file", ".pickle"), ("All files", "*")]$/;"	v	class:ChartParserApp
CHILDESCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/childes.py	/^class CHILDESCorpusReader(XMLCorpusReader):$/;"	c
CHILDESCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/childes.py	/^class CHILDESCorpusReader(XMLCorpusReader):$/;"	c
CHINESE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    CHINESE = CHINESE_SIMPLIFIED | CHINESE_TRADITIONAL$/;"	v	class:LanguageFilter
CHINESE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    CHINESE = CHINESE_SIMPLIFIED | CHINESE_TRADITIONAL$/;"	v	class:LanguageFilter
CHINESE_SIMPLIFIED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    CHINESE_SIMPLIFIED = 0x01$/;"	v	class:LanguageFilter
CHINESE_SIMPLIFIED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    CHINESE_SIMPLIFIED = 0x01$/;"	v	class:LanguageFilter
CHINESE_TRADITIONAL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    CHINESE_TRADITIONAL = 0x02$/;"	v	class:LanguageFilter
CHINESE_TRADITIONAL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    CHINESE_TRADITIONAL = 0x02$/;"	v	class:LanguageFilter
CHUNK	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^    CHUNK = "chunk"  #: column type for chunk structures$/;"	v	class:ConllCorpusReader
CHUNK	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^    CHUNK = "chunk"  #: column type for chunk structures$/;"	v	class:ConllCorpusReader
CHUNKS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^CHUNKS = [[$/;"	v
CHUNKS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^CHUNKS = [[$/;"	v
CHUNK_TAG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^    CHUNK_TAG = r"(<%s+?>)" % CHUNK_TAG_CHAR$/;"	v	class:ChunkString
CHUNK_TAG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^    CHUNK_TAG = r"(<%s+?>)" % CHUNK_TAG_CHAR$/;"	v	class:ChunkString
CHUNK_TAG_CHAR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^    CHUNK_TAG_CHAR = r"[^\\{\\}<>]"$/;"	v	class:ChunkString
CHUNK_TAG_CHAR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^    CHUNK_TAG_CHAR = r"[^\\{\\}<>]"$/;"	v	class:ChunkString
CHUNK_TAG_PATTERN	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^CHUNK_TAG_PATTERN = re.compile($/;"	v
CHUNK_TAG_PATTERN	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^CHUNK_TAG_PATTERN = re.compile($/;"	v
CIPHER_SUITES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CIPHER_SUITES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CIPHER_SUITES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CIPHER_SUITES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CIPHER_SUITES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CIPHER_SUITES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CJK	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    CJK = CHINESE | JAPANESE | KOREAN$/;"	v	class:LanguageFilter
CJK	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    CJK = CHINESE | JAPANESE | KOREAN$/;"	v	class:LanguageFilter
CJKChars	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/util.py	/^class CJKChars(object):$/;"	c
CJKChars	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/util.py	/^class CJKChars(object):$/;"	c
CJK_Compatibility_Forms	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/util.py	/^    CJK_Compatibility_Forms = (65072, 65103)  # (ord(u"\\uFE30"), ord(u"\\uFE4F"))$/;"	v	class:CJKChars
CJK_Compatibility_Forms	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/util.py	/^    CJK_Compatibility_Forms = (65072, 65103)  # (ord(u"\\uFE30"), ord(u"\\uFE4F"))$/;"	v	class:CJKChars
CJK_Compatibility_Ideographs	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/util.py	/^    CJK_Compatibility_Ideographs = (63744, 64255)  # (ord(u"\\uF900"), ord(u"\\uFAFF"))$/;"	v	class:CJKChars
CJK_Compatibility_Ideographs	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/util.py	/^    CJK_Compatibility_Ideographs = (63744, 64255)  # (ord(u"\\uF900"), ord(u"\\uFAFF"))$/;"	v	class:CJKChars
CJK_Radicals	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/util.py	/^    CJK_Radicals = (11904, 42191)  # (ord(u"\\u2e80"), ord(u"\\ua4cf"))$/;"	v	class:CJKChars
CJK_Radicals	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/util.py	/^    CJK_Radicals = (11904, 42191)  # (ord(u"\\u2e80"), ord(u"\\ua4cf"))$/;"	v	class:CJKChars
CLASS_CATEGORY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_CATEGORY = 11$/;"	v
CLASS_CATEGORY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_CATEGORY = 21$/;"	v
CLASS_CATEGORY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_CATEGORY = 11$/;"	v
CLASS_CATEGORY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_CATEGORY = 21$/;"	v
CLASS_NUM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/latin1prober.py	/^CLASS_NUM = 8  # total classes$/;"	v
CLASS_NUM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/latin1prober.py	/^CLASS_NUM = 8  # total classes$/;"	v
CLASS_REGIONAL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_REGIONAL = 2$/;"	v
CLASS_REGIONAL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_REGIONAL = 23$/;"	v
CLASS_REGIONAL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_REGIONAL = 2$/;"	v
CLASS_REGIONAL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_REGIONAL = 23$/;"	v
CLASS_USAGE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_USAGE = 22$/;"	v
CLASS_USAGE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_USAGE = 24$/;"	v
CLASS_USAGE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_USAGE = 22$/;"	v
CLASS_USAGE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^CLASS_USAGE = 24$/;"	v
CLAUSE_PUNCT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sentiment/util.py	/^CLAUSE_PUNCT = r"^[.:;!?]$"$/;"	v
CLAUSE_PUNCT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sentiment/util.py	/^CLAUSE_PUNCT = r"^[.:;!?]$"$/;"	v
CLAUSE_PUNCT_RE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sentiment/util.py	/^CLAUSE_PUNCT_RE = re.compile(CLAUSE_PUNCT)$/;"	v
CLAUSE_PUNCT_RE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sentiment/util.py	/^CLAUSE_PUNCT_RE = re.compile(CLAUSE_PUNCT)$/;"	v
CLOCK_MONOTONIC	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/_posix_wait.py	/^    CLOCK_MONOTONIC = 1  # see <linux\/time.h>$/;"	v
CLOCK_MONOTONIC	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/_posix_wait.py	/^    CLOCK_MONOTONIC = 1  # see <linux\/time.h>$/;"	v
CLOSE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^    CLOSE = ")"$/;"	v	class:Tokens
CLOSE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    CLOSE = ")"$/;"	v	class:Tokens
CLOSE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^    CLOSE = ")"$/;"	v	class:Tokens
CLOSE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    CLOSE = ")"$/;"	v	class:Tokens
CLOSE_BRACKET	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^    CLOSE_BRACKET = "]"$/;"	v	class:DrtTokens
CLOSE_BRACKET	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^    CLOSE_BRACKET = "]"$/;"	v	class:DrtTokens
CLOSE_COMPARISON	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^CLOSE_COMPARISON = re.compile(r"<\/cs-[1234]>")$/;"	v
CLOSE_COMPARISON	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^CLOSE_COMPARISON = re.compile(r"<\/cs-[1234]>")$/;"	v
CLOSE_PUNCT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CLOSE_PUNCT = str($/;"	v	class:ToktokTokenizer
CLOSE_PUNCT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CLOSE_PUNCT = str($/;"	v	class:ToktokTokenizer
CLOSE_PUNCT_RE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CLOSE_PUNCT_RE = re.compile(u"([{}])".format(CLOSE_PUNCT)), r"\\1 "$/;"	v	class:ToktokTokenizer
CLOSE_PUNCT_RE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CLOSE_PUNCT_RE = re.compile(u"([{}])".format(CLOSE_PUNCT)), r"\\1 "$/;"	v	class:ToktokTokenizer
CMUDictCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/cmudict.py	/^class CMUDictCorpusReader(CorpusReader):$/;"	c
CMUDictCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/cmudict.py	/^class CMUDictCorpusReader(CorpusReader):$/;"	c
COLLOCATION	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/punkt.py	/^    COLLOCATION = 7.88$/;"	v	class:PunktTrainer
COLLOCATION	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/punkt.py	/^    COLLOCATION = 7.88$/;"	v	class:PunktTrainer
COLON	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^    COLON = ":"$/;"	v	class:DrtTokens
COLON	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^    COLON = ":"$/;"	v	class:DrtTokens
COLOURS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/std.py	/^    COLOURS = dict(BLACK='\\x1b[30m', RED='\\x1b[31m', GREEN='\\x1b[32m',$/;"	v	class:Bar
COLOURS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/std.py	/^    COLOURS = dict(BLACK='\\x1b[30m', RED='\\x1b[31m', GREEN='\\x1b[32m',$/;"	v	class:Bar
COLOUR_RESET	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/std.py	/^    COLOUR_RESET = '\\x1b[0m'$/;"	v	class:Bar
COLOUR_RESET	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/std.py	/^    COLOUR_RESET = '\\x1b[0m'$/;"	v	class:Bar
COLOUR_RGB	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/std.py	/^    COLOUR_RGB = '\\x1b[38;2;%d;%d;%dm'$/;"	v	class:Bar
COLOUR_RGB	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/std.py	/^    COLOUR_RGB = '\\x1b[38;2;%d;%d;%dm'$/;"	v	class:Bar
COLUMNS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^    COLUMNS = [$/;"	v	class:DownloaderGUI
COLUMNS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^    COLUMNS = [$/;"	v	class:DownloaderGUI
COLUMN_TYPES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^    COLUMN_TYPES = (WORDS, POS, TREE, CHUNK, NE, SRL, IGNORE)$/;"	v	class:ConllCorpusReader
COLUMN_TYPES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^    COLUMN_TYPES = (WORDS, POS, TREE, CHUNK, NE, SRL, IGNORE)$/;"	v	class:ConllCorpusReader
COLUMN_WEIGHTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^    COLUMN_WEIGHTS = {"": 0, "Name": 5, "Size": 0, "Status": 0}$/;"	v	class:DownloaderGUI
COLUMN_WEIGHTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^    COLUMN_WEIGHTS = {"": 0, "Name": 5, "Size": 0, "Status": 0}$/;"	v	class:DownloaderGUI
COLUMN_WIDTHS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^    COLUMN_WIDTHS = {$/;"	v	class:DownloaderGUI
COLUMN_WIDTHS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^    COLUMN_WIDTHS = {$/;"	v	class:DownloaderGUI
COMMA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    COMMA = ","$/;"	v	class:Tokens
COMMA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    COMMA = ","$/;"	v	class:Tokens
COMMA_IN_NUM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    COMMA_IN_NUM = re.compile(r"(?<!,)([,،])(?![,\\d])"), r" \\1 "$/;"	v	class:ToktokTokenizer
COMMA_IN_NUM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    COMMA_IN_NUM = re.compile(r"(?<!,)([,،])(?![,\\d])"), r" \\1 "$/;"	v	class:ToktokTokenizer
COMPARATOR_FUNC	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/jmespath/visitor.py	/^    COMPARATOR_FUNC = {$/;"	v	class:TreeInterpreter
COMPARATOR_FUNC	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/jmespath/visitor.py	/^    COMPARATOR_FUNC = {$/;"	v	class:TreeInterpreter
COMPARATOR_FUNC	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/jmespath/visitor.py	/^    COMPARATOR_FUNC = {$/;"	v	class:TreeInterpreter
COMPARATOR_FUNC	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/jmespath/visitor.py	/^    COMPARATOR_FUNC = {$/;"	v	class:TreeInterpreter
COMPARATOR_FUNC	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/jmespath/visitor.py	/^    COMPARATOR_FUNC = {$/;"	v	class:TreeInterpreter
COMPARATOR_FUNC	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/jmespath/visitor.py	/^    COMPARATOR_FUNC = {$/;"	v	class:TreeInterpreter
COMPARISON	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^COMPARISON = re.compile(r"<cs-[1234]>")$/;"	v
COMPARISON	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^COMPARISON = re.compile(r"<cs-[1234]>")$/;"	v
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/copies.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:CopySubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/upload.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:UploadSubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/copies.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:CopySubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/upload.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:UploadSubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/copies.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:CopySubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/upload.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:UploadSubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/copies.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:CopySubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/upload.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:UploadSubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/copies.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:CopySubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/upload.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:UploadSubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/copies.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:CopySubmissionTask
COMPLETE_MULTIPART_ARGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/upload.py	/^    COMPLETE_MULTIPART_ARGS = [$/;"	v	class:UploadSubmissionTask
COMPLETION_SCRIPT_FISH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_bashcomplete.py	/^COMPLETION_SCRIPT_FISH = ($/;"	v
COMPLETION_SCRIPT_FISH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_bashcomplete.py	/^COMPLETION_SCRIPT_FISH = ($/;"	v
CONFUSED	'	/^    CONFUSED = "Confused"$/;"	v	class:Sentiments
CONFUSED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tweet_utils.py	/^    CONFUSED = "Confused"$/;"	v	class:Sentiments
CONFUSED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^    CONFUSED = "Confused"$/;"	v	class:Sentiments
CONFUSED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tweet_utils.py	/^    CONFUSED = "Confused"$/;"	v	class:Sentiments
CONFUSED	TwitterStreamWithAWS/src/Utilities/tweet_utils.py	/^    CONFUSED = "Confused"$/;"	v	class:Sentiments
CONTENT_CHUNK_SIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/models.py	/^CONTENT_CHUNK_SIZE = 10 * 1024$/;"	v
CONTENT_CHUNK_SIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/models.py	/^CONTENT_CHUNK_SIZE = 10 * 1024$/;"	v
CONTENT_DECODERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/response.py	/^    CONTENT_DECODERS = ["gzip", "deflate"]$/;"	v	class:HTTPResponse
CONTENT_DECODERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/response.py	/^    CONTENT_DECODERS = ["gzip", "deflate"]$/;"	v	class:HTTPResponse
CONTENT_DECODERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/response.py	/^    CONTENT_DECODERS = ["gzip", "deflate"]$/;"	v	class:HTTPResponse
CONTENT_DECODERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/response.py	/^    CONTENT_DECODERS = ["gzip", "deflate"]$/;"	v	class:HTTPResponse
CONTENT_DECODERS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/response.py	/^    CONTENT_DECODERS = ["gzip", "deflate"]$/;"	v	class:HTTPResponse
CONTENT_DECODERS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/response.py	/^    CONTENT_DECODERS = ["gzip", "deflate"]$/;"	v	class:HTTPResponse
CONTENT_TYPE_FORM_URLENCODED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/auth.py	/^CONTENT_TYPE_FORM_URLENCODED = 'application\/x-www-form-urlencoded'$/;"	v
CONTENT_TYPE_FORM_URLENCODED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/auth.py	/^CONTENT_TYPE_FORM_URLENCODED = 'application\/x-www-form-urlencoded'$/;"	v
CONTENT_TYPE_MULTI_PART	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/auth.py	/^CONTENT_TYPE_MULTI_PART = 'multipart\/form-data'$/;"	v
CONTENT_TYPE_MULTI_PART	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/auth.py	/^CONTENT_TYPE_MULTI_PART = 'multipart\/form-data'$/;"	v
CONTEXT_SETTINGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/cli.py	/^CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])$/;"	v
CONTEXT_SETTINGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/cli.py	/^CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])$/;"	v
CONTINUOUS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^CONTINUOUS = 'co'$/;"	v
CONTINUOUS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^CONTINUOUS = 'co'$/;"	v
CONTRACTIONS2	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS2 = [$/;"	v	class:MacIntyreContractions
CONTRACTIONS2	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS2 = list(map(re.compile, _contractions.CONTRACTIONS2))$/;"	v	class:NLTKWordTokenizer
CONTRACTIONS2	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS2 = [$/;"	v	class:TreebankWordDetokenizer
CONTRACTIONS2	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS2 = list(map(re.compile, _contractions.CONTRACTIONS2))$/;"	v	class:TreebankWordTokenizer
CONTRACTIONS2	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS2 = [$/;"	v	class:MacIntyreContractions
CONTRACTIONS2	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS2 = list(map(re.compile, _contractions.CONTRACTIONS2))$/;"	v	class:NLTKWordTokenizer
CONTRACTIONS2	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS2 = [$/;"	v	class:TreebankWordDetokenizer
CONTRACTIONS2	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS2 = list(map(re.compile, _contractions.CONTRACTIONS2))$/;"	v	class:TreebankWordTokenizer
CONTRACTIONS3	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS3 = [r"(?i) ('t)(?#X)(is)\\b", r"(?i) ('t)(?#X)(was)\\b"]$/;"	v	class:MacIntyreContractions
CONTRACTIONS3	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS3 = list(map(re.compile, _contractions.CONTRACTIONS3))$/;"	v	class:NLTKWordTokenizer
CONTRACTIONS3	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS3 = [$/;"	v	class:TreebankWordDetokenizer
CONTRACTIONS3	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS3 = list(map(re.compile, _contractions.CONTRACTIONS3))$/;"	v	class:TreebankWordTokenizer
CONTRACTIONS3	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS3 = [r"(?i) ('t)(?#X)(is)\\b", r"(?i) ('t)(?#X)(was)\\b"]$/;"	v	class:MacIntyreContractions
CONTRACTIONS3	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS3 = list(map(re.compile, _contractions.CONTRACTIONS3))$/;"	v	class:NLTKWordTokenizer
CONTRACTIONS3	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS3 = [$/;"	v	class:TreebankWordDetokenizer
CONTRACTIONS3	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONTRACTIONS3 = list(map(re.compile, _contractions.CONTRACTIONS3))$/;"	v	class:TreebankWordTokenizer
CONTRACTIONS4	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS4 = [r"(?i)\\b(whad)(dd)(ya)\\b", r"(?i)\\b(wha)(t)(cha)\\b"]$/;"	v	class:MacIntyreContractions
CONTRACTIONS4	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONTRACTIONS4 = [r"(?i)\\b(whad)(dd)(ya)\\b", r"(?i)\\b(wha)(t)(cha)\\b"]$/;"	v	class:MacIntyreContractions
CONTROL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    CONTROL = 251$/;"	v	class:CharacterCategory
CONTROL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    CONTROL = 251$/;"	v	class:CharacterCategory
CONVERT_PARENTHESES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONVERT_PARENTHESES = [$/;"	v	class:NLTKWordTokenizer
CONVERT_PARENTHESES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONVERT_PARENTHESES = [$/;"	v	class:TreebankWordDetokenizer
CONVERT_PARENTHESES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONVERT_PARENTHESES = [$/;"	v	class:TreebankWordTokenizer
CONVERT_PARENTHESES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    CONVERT_PARENTHESES = [$/;"	v	class:NLTKWordTokenizer
CONVERT_PARENTHESES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONVERT_PARENTHESES = [$/;"	v	class:TreebankWordDetokenizer
CONVERT_PARENTHESES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    CONVERT_PARENTHESES = [$/;"	v	class:TreebankWordTokenizer
CORPUS_LOADED_EVENT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/collocations_app.py	/^CORPUS_LOADED_EVENT = "<<CL_EVENT>>"$/;"	v
CORPUS_LOADED_EVENT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/concordance_app.py	/^CORPUS_LOADED_EVENT = "<<CL_EVENT>>"$/;"	v
CORPUS_LOADED_EVENT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/collocations_app.py	/^CORPUS_LOADED_EVENT = "<<CL_EVENT>>"$/;"	v
CORPUS_LOADED_EVENT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/concordance_app.py	/^CORPUS_LOADED_EVENT = "<<CL_EVENT>>"$/;"	v
COVID_KEYWORDS	TwitterStreamWithAWS/global_params.py	/^COVID_KEYWORDS = ["covid", "corona", "sarscov2"]$/;"	v
CP949Prober	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/cp949prober.py	/^class CP949Prober(MultiByteCharSetProber):$/;"	c
CP949Prober	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/cp949prober.py	/^class CP949Prober(MultiByteCharSetProber):$/;"	c
CP949_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_CHAR_LEN_TABLE = (0, 1, 2, 0, 1, 1, 2, 2, 0, 2)$/;"	v
CP949_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_CHAR_LEN_TABLE = (0, 1, 2, 0, 1, 1, 2, 2, 0, 2)$/;"	v
CP949_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_CLS  = ($/;"	v
CP949_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_CLS  = ($/;"	v
CP949_SM_MODEL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_SM_MODEL = {'class_table': CP949_CLS,$/;"	v
CP949_SM_MODEL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_SM_MODEL = {'class_table': CP949_CLS,$/;"	v
CP949_ST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_ST = ($/;"	v
CP949_ST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^CP949_ST = ($/;"	v
CRC32Checker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retryhandler.py	/^class CRC32Checker(BaseChecker):$/;"	c
CRC32Checker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retryhandler.py	/^class CRC32Checker(BaseChecker):$/;"	c
CRC32Checker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retryhandler.py	/^class CRC32Checker(BaseChecker):$/;"	c
CRC32Checker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retryhandler.py	/^class CRC32Checker(BaseChecker):$/;"	c
CRC32Checker	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retryhandler.py	/^class CRC32Checker(BaseChecker):$/;"	c
CRC32Checker	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retryhandler.py	/^class CRC32Checker(BaseChecker):$/;"	c
CREATE_MULTIPART_ARGS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/copies.py	/^    CREATE_MULTIPART_ARGS_BLACKLIST = [$/;"	v	class:CopySubmissionTask
CREATE_MULTIPART_ARGS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/copies.py	/^    CREATE_MULTIPART_ARGS_BLACKLIST = [$/;"	v	class:CopySubmissionTask
CREATE_MULTIPART_ARGS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/copies.py	/^    CREATE_MULTIPART_ARGS_BLACKLIST = [$/;"	v	class:CopySubmissionTask
CREATE_MULTIPART_ARGS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/copies.py	/^    CREATE_MULTIPART_ARGS_BLACKLIST = [$/;"	v	class:CopySubmissionTask
CREATE_MULTIPART_ARGS_BLACKLIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/copies.py	/^    CREATE_MULTIPART_ARGS_BLACKLIST = [$/;"	v	class:CopySubmissionTask
CREATE_MULTIPART_ARGS_BLACKLIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/copies.py	/^    CREATE_MULTIPART_ARGS_BLACKLIST = [$/;"	v	class:CopySubmissionTask
CRED_FILE_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    CRED_FILE_ENV = 'AWS_CREDENTIAL_FILE'$/;"	v	class:OriginalEC2Provider
CRED_FILE_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    CRED_FILE_ENV = 'AWS_CREDENTIAL_FILE'$/;"	v	class:OriginalEC2Provider
CRED_FILE_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    CRED_FILE_ENV = 'AWS_CREDENTIAL_FILE'$/;"	v	class:OriginalEC2Provider
CRED_FILE_ENV	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    CRED_FILE_ENV = 'AWS_CREDENTIAL_FILE'$/;"	v	class:OriginalEC2Provider
CRED_FILE_ENV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    CRED_FILE_ENV = 'AWS_CREDENTIAL_FILE'$/;"	v	class:OriginalEC2Provider
CRED_FILE_ENV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    CRED_FILE_ENV = 'AWS_CREDENTIAL_FILE'$/;"	v	class:OriginalEC2Provider
CRFTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/crf.py	/^class CRFTagger(TaggerI):$/;"	c
CRFTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/crf.py	/^class CRFTagger(TaggerI):$/;"	c
CSMSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/monitoring.py	/^class CSMSerializer(object):$/;"	c
CSMSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/monitoring.py	/^class CSMSerializer(object):$/;"	c
CSMSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/monitoring.py	/^class CSMSerializer(object):$/;"	c
CSMSerializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/monitoring.py	/^class CSMSerializer(object):$/;"	c
CSMSerializer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/monitoring.py	/^class CSMSerializer(object):$/;"	c
CSMSerializer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/monitoring.py	/^class CSMSerializer(object):$/;"	c
CSV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/formats.py	/^class CSV(DelimitedFormat):$/;"	c
CSV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/formats.py	/^class CSV(DelimitedFormat):$/;"	c
CURRENCY_SYM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CURRENCY_SYM = str($/;"	v	class:ToktokTokenizer
CURRENCY_SYM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CURRENCY_SYM = str($/;"	v	class:ToktokTokenizer
CURRENCY_SYM_RE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CURRENCY_SYM_RE = re.compile(u"([{}])".format(CURRENCY_SYM)), r"\\1 "$/;"	v	class:ToktokTokenizer
CURRENCY_SYM_RE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    CURRENCY_SYM_RE = re.compile(u"([{}])".format(CURRENCY_SYM)), r"\\1 "$/;"	v	class:ToktokTokenizer
CUR_OS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/utils.py	/^CUR_OS = sys.platform$/;"	v
CUR_OS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/utils.py	/^CUR_OS = sys.platform$/;"	v
CUSTOMER_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/loaders.py	/^    CUSTOMER_DATA_PATH = os.path.join(os.path.expanduser('~'),$/;"	v	class:Loader
CUSTOMER_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/loaders.py	/^    CUSTOMER_DATA_PATH = os.path.join(os.path.expanduser('~'),$/;"	v	class:Loader
CUSTOMER_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/loaders.py	/^    CUSTOMER_DATA_PATH = os.path.join(os.path.expanduser('~'),$/;"	v	class:Loader
CUSTOMER_DATA_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/loaders.py	/^    CUSTOMER_DATA_PATH = os.path.join(os.path.expanduser('~'),$/;"	v	class:Loader
CUSTOMER_DATA_PATH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/loaders.py	/^    CUSTOMER_DATA_PATH = os.path.join(os.path.expanduser('~'),$/;"	v	class:Loader
CUSTOMER_DATA_PATH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/loaders.py	/^    CUSTOMER_DATA_PATH = os.path.join(os.path.expanduser('~'),$/;"	v	class:Loader
CYGWIN	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_compat.py	/^CYGWIN = sys.platform.startswith("cygwin")$/;"	v
CYGWIN	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_compat.py	/^CYGWIN = sys.platform.startswith("cygwin")$/;"	v
C_INCR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    C_INCR = 0.733$/;"	v	class:VaderConstants
C_INCR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sentiment/vader.py	/^    C_INCR = 0.733$/;"	v	class:VaderConstants
C_exp	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_exp = 45  # Expansions\/compressions$/;"	v
C_exp	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_exp = 45  # Expansions\/compressions$/;"	v
C_skip	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_skip = 10  # Indels$/;"	v
C_skip	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_skip = 10  # Indels$/;"	v
C_sub	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_sub = 35  # Substitutions$/;"	v
C_sub	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_sub = 35  # Substitutions$/;"	v
C_vwl	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_vwl = 5  # Vowel\/consonant relative weight (decreased from 10)$/;"	v
C_vwl	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/aline.py	/^C_vwl = 5  # Vowel\/consonant relative weight (decreased from 10)$/;"	v
CacheItemInfo	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/_store_backends.py	/^CacheItemInfo = collections.namedtuple('CacheItemInfo',$/;"	v
CacheItemInfo	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/_store_backends.py	/^CacheItemInfo = collections.namedtuple('CacheItemInfo',$/;"	v
CachedCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class CachedCredentialFetcher(object):$/;"	c
CachedCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class CachedCredentialFetcher(object):$/;"	c
CachedCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class CachedCredentialFetcher(object):$/;"	c
CachedCredentialFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class CachedCredentialFetcher(object):$/;"	c
CachedCredentialFetcher	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class CachedCredentialFetcher(object):$/;"	c
CachedCredentialFetcher	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class CachedCredentialFetcher(object):$/;"	c
CachedProperty	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^class CachedProperty(object):$/;"	c
CachedProperty	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^class CachedProperty(object):$/;"	c
CachedProperty	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^class CachedProperty(object):$/;"	c
CachedProperty	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^class CachedProperty(object):$/;"	c
CachedProperty	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^class CachedProperty(object):$/;"	c
CachedProperty	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^class CachedProperty(object):$/;"	c
CachedTopDownPredictRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class CachedTopDownPredictRule(TopDownPredictRule):$/;"	c
CachedTopDownPredictRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class CachedTopDownPredictRule(TopDownPredictRule):$/;"	c
CallArgs	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/utils.py	/^class CallArgs(object):$/;"	c
CallArgs	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/utils.py	/^class CallArgs(object):$/;"	c
CallArgs	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/utils.py	/^class CallArgs(object):$/;"	c
CallArgs	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/utils.py	/^class CallArgs(object):$/;"	c
CallArgs	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/utils.py	/^class CallArgs(object):$/;"	c
CallArgs	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/utils.py	/^class CallArgs(object):$/;"	c
CallGroup	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class CallGroup(RegexBase):$/;"	c
CallGroup	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class CallGroup(RegexBase):$/;"	c
CallRef	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class CallRef(RegexBase):$/;"	c
CallRef	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class CallRef(RegexBase):$/;"	c
CallableObjectWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/cloudpickle_wrapper.py	/^class CallableObjectWrapper(CloudpickledObjectWrapper):$/;"	c
CallableObjectWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/cloudpickle_wrapper.py	/^class CallableObjectWrapper(CloudpickledObjectWrapper):$/;"	c
CallbackIOWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/utils.py	/^class CallbackIOWrapper(ObjectWrapper):$/;"	c
CallbackIOWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/utils.py	/^class CallbackIOWrapper(ObjectWrapper):$/;"	c
CancelledError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    class CancelledError(Error):$/;"	c
CancelledError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    class CancelledError(Error):$/;"	c
CanonicalNameCredentialSourcer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class CanonicalNameCredentialSourcer(object):$/;"	c
CanonicalNameCredentialSourcer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class CanonicalNameCredentialSourcer(object):$/;"	c
CanonicalNameCredentialSourcer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class CanonicalNameCredentialSourcer(object):$/;"	c
CanonicalNameCredentialSourcer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class CanonicalNameCredentialSourcer(object):$/;"	c
CanonicalNameCredentialSourcer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class CanonicalNameCredentialSourcer(object):$/;"	c
CanonicalNameCredentialSourcer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class CanonicalNameCredentialSourcer(object):$/;"	c
CanvasFrame	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class CanvasFrame(object):$/;"	c
CanvasFrame	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class CanvasFrame(object):$/;"	c
CanvasWidget	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class CanvasWidget(metaclass=ABCMeta):$/;"	c
CanvasWidget	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class CanvasWidget(metaclass=ABCMeta):$/;"	c
CapacityNotAvailableError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class CapacityNotAvailableError(BotoCoreError):$/;"	c
CapacityNotAvailableError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class CapacityNotAvailableError(BotoCoreError):$/;"	c
CapacityNotAvailableError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class CapacityNotAvailableError(BotoCoreError):$/;"	c
CapacityNotAvailableError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class CapacityNotAvailableError(BotoCoreError):$/;"	c
CapacityNotAvailableError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class CapacityNotAvailableError(BotoCoreError):$/;"	c
CapacityNotAvailableError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class CapacityNotAvailableError(BotoCoreError):$/;"	c
CaseInsensitiveDict	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/structures.py	/^class CaseInsensitiveDict(MutableMapping):$/;"	c
CaseInsensitiveDict	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/structures.py	/^class CaseInsensitiveDict(MutableMapping):$/;"	c
CatClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/cat.py	/^class CatClient(NamespacedClient):$/;"	c
CatClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/cat.py	/^class CatClient(NamespacedClient):$/;"	c
CatClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/cat.py	/^class CatClient(NamespacedClient):$/;"	c
CatClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/cat.py	/^class CatClient(NamespacedClient):$/;"	c
Categories	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^class Categories(object):$/;"	c
Categories	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^class Categories(object):$/;"	c
CategorizedBracketParseCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^):$/;"	c
CategorizedBracketParseCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^):$/;"	c
CategorizedCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/api.py	/^class CategorizedCorpusReader(object):$/;"	c
CategorizedCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/api.py	/^class CategorizedCorpusReader(object):$/;"	c
CategorizedPlaintextCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/plaintext.py	/^class CategorizedPlaintextCorpusReader(CategorizedCorpusReader, PlaintextCorpusReader):$/;"	c
CategorizedPlaintextCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/plaintext.py	/^class CategorizedPlaintextCorpusReader(CategorizedCorpusReader, PlaintextCorpusReader):$/;"	c
CategorizedSentencesCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/categorized_sents.py	/^class CategorizedSentencesCorpusReader(CategorizedCorpusReader, CorpusReader):$/;"	c
CategorizedSentencesCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/categorized_sents.py	/^class CategorizedSentencesCorpusReader(CategorizedCorpusReader, CorpusReader):$/;"	c
CategorizedTaggedCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/tagged.py	/^class CategorizedTaggedCorpusReader(CategorizedCorpusReader, TaggedCorpusReader):$/;"	c
CategorizedTaggedCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/tagged.py	/^class CategorizedTaggedCorpusReader(CategorizedCorpusReader, TaggedCorpusReader):$/;"	c
CcrClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/ccr.py	/^class CcrClient(NamespacedClient):$/;"	c
CcrClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/ccr.py	/^class CcrClient(NamespacedClient):$/;"	c
CcrClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/ccr.py	/^class CcrClient(NamespacedClient):$/;"	c
CcrClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/ccr.py	/^class CcrClient(NamespacedClient):$/;"	c
CellType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^    CellType = type(f().__closure__[0])$/;"	v
CellType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^    CellType = type(f().__closure__[0])$/;"	v
CertificateError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CertificateError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CertificateError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CertificateError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CertificateError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CertificateError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CfgReadingCommand	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/discourse.py	/^class CfgReadingCommand(ReadingCommand):$/;"	c
CfgReadingCommand	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/discourse.py	/^class CfgReadingCommand(ReadingCommand):$/;"	c
ChainProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^class ChainProvider(BaseProvider):$/;"	c
ChainProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^class ChainProvider(BaseProvider):$/;"	c
ChainProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^class ChainProvider(BaseProvider):$/;"	c
ChainProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^class ChainProvider(BaseProvider):$/;"	c
ChainProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^class ChainProvider(BaseProvider):$/;"	c
ChainProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^class ChainProvider(BaseProvider):$/;"	c
CharDistributionAnalysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/chardistribution.py	/^class CharDistributionAnalysis(object):$/;"	c
CharDistributionAnalysis	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/chardistribution.py	/^class CharDistributionAnalysis(object):$/;"	c
CharSetGroupProber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/charsetgroupprober.py	/^class CharSetGroupProber(CharSetProber):$/;"	c
CharSetGroupProber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/charsetgroupprober.py	/^class CharSetGroupProber(CharSetProber):$/;"	c
CharSetProber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/charsetprober.py	/^class CharSetProber(object):$/;"	c
CharSetProber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/charsetprober.py	/^class CharSetProber(object):$/;"	c
CharTokenizer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/simple.py	/^class CharTokenizer(StringTokenizer):$/;"	c
CharTokenizer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/simple.py	/^class CharTokenizer(StringTokenizer):$/;"	c
Character	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class Character(RegexBase):$/;"	c
Character	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class Character(RegexBase):$/;"	c
CharacterCategory	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^class CharacterCategory(object):$/;"	c
CharacterCategory	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^class CharacterCategory(object):$/;"	c
Chart	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class Chart(object):$/;"	c
Chart	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class Chart(object):$/;"	c
ChartCell	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/projectivedependencyparser.py	/^class ChartCell(object):$/;"	c
ChartCell	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/projectivedependencyparser.py	/^class ChartCell(object):$/;"	c
ChartComparer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartComparer(object):$/;"	c
ChartComparer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartComparer(object):$/;"	c
ChartMatrixView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartMatrixView(object):$/;"	c
ChartMatrixView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartMatrixView(object):$/;"	c
ChartParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class ChartParser(ParserI):$/;"	c
ChartParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class ChartParser(ParserI):$/;"	c
ChartParserApp	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartParserApp(object):$/;"	c
ChartParserApp	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartParserApp(object):$/;"	c
ChartResultsView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartResultsView(object):$/;"	c
ChartResultsView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartResultsView(object):$/;"	c
ChartRuleI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class ChartRuleI(object):$/;"	c
ChartRuleI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class ChartRuleI(object):$/;"	c
ChartView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartView(object):$/;"	c
ChartView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class ChartView(object):$/;"	c
ChasenCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/chasen.py	/^class ChasenCorpusReader(CorpusReader):$/;"	c
ChasenCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/chasen.py	/^class ChasenCorpusReader(CorpusReader):$/;"	c
ChasenCorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/chasen.py	/^class ChasenCorpusView(StreamBackedCorpusView):$/;"	c
ChasenCorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/chasen.py	/^class ChasenCorpusView(StreamBackedCorpusView):$/;"	c
Chat	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chat/util.py	/^class Chat(object):$/;"	c
Chat	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chat/util.py	/^class Chat(object):$/;"	c
ChecksumError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ChecksumError(BotoCoreError):$/;"	c
ChecksumError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ChecksumError(BotoCoreError):$/;"	c
ChecksumError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ChecksumError(BotoCoreError):$/;"	c
ChecksumError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ChecksumError(BotoCoreError):$/;"	c
ChecksumError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ChecksumError(BotoCoreError):$/;"	c
ChecksumError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ChecksumError(BotoCoreError):$/;"	c
ChecksumMismatch	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class ChecksumMismatch(ParserError):$/;"	c
ChecksumMismatch	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class ChecksumMismatch(ParserError):$/;"	c
ChecksumMismatch	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class ChecksumMismatch(ParserError):$/;"	c
ChecksumMismatch	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class ChecksumMismatch(ParserError):$/;"	c
ChecksumMismatch	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class ChecksumMismatch(ParserError):$/;"	c
ChecksumMismatch	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class ChecksumMismatch(ParserError):$/;"	c
ChinkRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChinkRule(RegexpChunkRule):$/;"	c
ChinkRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChinkRule(RegexpChunkRule):$/;"	c
Choice	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/types.py	/^class Choice(ParamType):$/;"	c
Choice	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/types.py	/^class Choice(ParamType):$/;"	c
ChomskyNormalFormForCFGTest	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/test/unit/test_cfg2chomsky.py	/^class ChomskyNormalFormForCFGTest(unittest.TestCase):$/;"	c
ChomskyNormalFormForCFGTest	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/test/unit/test_cfg2chomsky.py	/^class ChomskyNormalFormForCFGTest(unittest.TestCase):$/;"	c
ChunkParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/en/np_extractors.py	/^class ChunkParser(nltk.ChunkParserI):$/;"	c
ChunkParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/en/np_extractors.py	/^class ChunkParser(nltk.ChunkParserI):$/;"	c
ChunkParserI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/api.py	/^class ChunkParserI(ParserI):$/;"	c
ChunkParserI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/api.py	/^class ChunkParserI(ParserI):$/;"	c
ChunkRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChunkRule(RegexpChunkRule):$/;"	c
ChunkRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChunkRule(RegexpChunkRule):$/;"	c
ChunkRuleWithContext	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChunkRuleWithContext(RegexpChunkRule):$/;"	c
ChunkRuleWithContext	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChunkRuleWithContext(RegexpChunkRule):$/;"	c
ChunkScore	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/util.py	/^class ChunkScore(object):$/;"	c
ChunkScore	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/util.py	/^class ChunkScore(object):$/;"	c
ChunkString	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChunkString(object):$/;"	c
ChunkString	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ChunkString(object):$/;"	c
ChunkedCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/chunked.py	/^class ChunkedCorpusReader(CorpusReader):$/;"	c
ChunkedCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/chunked.py	/^class ChunkedCorpusReader(CorpusReader):$/;"	c
ChunkedCorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/chunked.py	/^class ChunkedCorpusView(StreamBackedCorpusView):$/;"	c
ChunkedCorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/chunked.py	/^class ChunkedCorpusView(StreamBackedCorpusView):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunkedEncodingError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
ChunksizeAdjuster	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/utils.py	/^class ChunksizeAdjuster(object):$/;"	c
ChunksizeAdjuster	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/utils.py	/^class ChunksizeAdjuster(object):$/;"	c
ChunksizeAdjuster	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/utils.py	/^class ChunksizeAdjuster(object):$/;"	c
ChunksizeAdjuster	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/utils.py	/^class ChunksizeAdjuster(object):$/;"	c
ChunksizeAdjuster	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/utils.py	/^class ChunksizeAdjuster(object):$/;"	c
ChunksizeAdjuster	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/utils.py	/^class ChunksizeAdjuster(object):$/;"	c
Cistem	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/stem/cistem.py	/^class Cistem(StemmerI):$/;"	c
Cistem	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/stem/cistem.py	/^class Cistem(StemmerI):$/;"	c
ClassVar	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^    ClassVar = None$/;"	v
ClassVar	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^    ClassVar = None$/;"	v
ClassifierBasedPOSTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/sequential.py	/^class ClassifierBasedPOSTagger(ClassifierBasedTagger):$/;"	c
ClassifierBasedPOSTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/sequential.py	/^class ClassifierBasedPOSTagger(ClassifierBasedTagger):$/;"	c
ClassifierBasedTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/sequential.py	/^class ClassifierBasedTagger(SequentialBackoffTagger, FeaturesetTaggerI):$/;"	c
ClassifierBasedTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/sequential.py	/^class ClassifierBasedTagger(SequentialBackoffTagger, FeaturesetTaggerI):$/;"	c
ClassifierI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/api.py	/^class ClassifierI(object):$/;"	c
ClassifierI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/api.py	/^class ClassifierI(object):$/;"	c
Clause	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/resolution.py	/^class Clause(list):$/;"	c
Clause	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/resolution.py	/^class Clause(list):$/;"	c
CliRunner	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/testing.py	/^class CliRunner(object):$/;"	c
CliRunner	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/testing.py	/^class CliRunner(object):$/;"	c
ClickException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/exceptions.py	/^class ClickException(Exception):$/;"	c
ClickException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/exceptions.py	/^class ClickException(Exception):$/;"	c
ClientArgsCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/args.py	/^class ClientArgsCreator(object):$/;"	c
ClientArgsCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/args.py	/^class ClientArgsCreator(object):$/;"	c
ClientArgsCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/args.py	/^class ClientArgsCreator(object):$/;"	c
ClientArgsCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/args.py	/^class ClientArgsCreator(object):$/;"	c
ClientArgsCreator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/args.py	/^class ClientArgsCreator(object):$/;"	c
ClientArgsCreator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/args.py	/^class ClientArgsCreator(object):$/;"	c
ClientCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/client.py	/^class ClientCreator(object):$/;"	c
ClientCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/client.py	/^class ClientCreator(object):$/;"	c
ClientCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/client.py	/^class ClientCreator(object):$/;"	c
ClientCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/client.py	/^class ClientCreator(object):$/;"	c
ClientCreator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/client.py	/^class ClientCreator(object):$/;"	c
ClientCreator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/client.py	/^class ClientCreator(object):$/;"	c
ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/client.py	/^class ClientDocumenter(object):$/;"	c
ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/client.py	/^class ClientDocumenter(object):$/;"	c
ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/client.py	/^class ClientDocumenter(object):$/;"	c
ClientDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/client.py	/^class ClientDocumenter(object):$/;"	c
ClientDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/client.py	/^class ClientDocumenter(object):$/;"	c
ClientDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/client.py	/^class ClientDocumenter(object):$/;"	c
ClientEndpointBridge	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/client.py	/^class ClientEndpointBridge(object):$/;"	c
ClientEndpointBridge	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/client.py	/^class ClientEndpointBridge(object):$/;"	c
ClientEndpointBridge	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/client.py	/^class ClientEndpointBridge(object):$/;"	c
ClientEndpointBridge	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/client.py	/^class ClientEndpointBridge(object):$/;"	c
ClientEndpointBridge	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/client.py	/^class ClientEndpointBridge(object):$/;"	c
ClientEndpointBridge	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/client.py	/^class ClientEndpointBridge(object):$/;"	c
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/errorfactory.py	/^    ClientError = ClientError$/;"	v	class:BaseClientExceptions
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ClientError(Exception):$/;"	c
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/errorfactory.py	/^    ClientError = ClientError$/;"	v	class:BaseClientExceptions
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ClientError(Exception):$/;"	c
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/errorfactory.py	/^    ClientError = ClientError$/;"	v	class:BaseClientExceptions
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ClientError(Exception):$/;"	c
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/errorfactory.py	/^    ClientError = ClientError$/;"	v	class:BaseClientExceptions
ClientError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ClientError(Exception):$/;"	c
ClientError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/errorfactory.py	/^    ClientError = ClientError$/;"	v	class:BaseClientExceptions
ClientError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ClientError(Exception):$/;"	c
ClientError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/errorfactory.py	/^    ClientError = ClientError$/;"	v	class:BaseClientExceptions
ClientError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ClientError(Exception):$/;"	c
ClientExceptionsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/client.py	/^class ClientExceptionsDocumenter(object):$/;"	c
ClientExceptionsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/client.py	/^class ClientExceptionsDocumenter(object):$/;"	c
ClientExceptionsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/client.py	/^class ClientExceptionsDocumenter(object):$/;"	c
ClientExceptionsDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/client.py	/^class ClientExceptionsDocumenter(object):$/;"	c
ClientExceptionsDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/client.py	/^class ClientExceptionsDocumenter(object):$/;"	c
ClientExceptionsDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/client.py	/^class ClientExceptionsDocumenter(object):$/;"	c
ClientExceptionsFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/errorfactory.py	/^class ClientExceptionsFactory(object):$/;"	c
ClientExceptionsFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/errorfactory.py	/^class ClientExceptionsFactory(object):$/;"	c
ClientExceptionsFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/errorfactory.py	/^class ClientExceptionsFactory(object):$/;"	c
ClientExceptionsFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/errorfactory.py	/^class ClientExceptionsFactory(object):$/;"	c
ClientExceptionsFactory	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/errorfactory.py	/^class ClientExceptionsFactory(object):$/;"	c
ClientExceptionsFactory	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/errorfactory.py	/^class ClientExceptionsFactory(object):$/;"	c
ClientFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/processpool.py	/^class ClientFactory(object):$/;"	c
ClientFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/processpool.py	/^class ClientFactory(object):$/;"	c
ClientFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/processpool.py	/^class ClientFactory(object):$/;"	c
ClientFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/processpool.py	/^class ClientFactory(object):$/;"	c
ClientFactory	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/processpool.py	/^class ClientFactory(object):$/;"	c
ClientFactory	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/processpool.py	/^class ClientFactory(object):$/;"	c
ClientMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/client.py	/^class ClientMeta(object):$/;"	c
ClientMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/client.py	/^class ClientMeta(object):$/;"	c
ClientMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/client.py	/^class ClientMeta(object):$/;"	c
ClientMeta	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/client.py	/^class ClientMeta(object):$/;"	c
ClientMeta	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/client.py	/^class ClientMeta(object):$/;"	c
ClientMeta	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/client.py	/^class ClientMeta(object):$/;"	c
ClientMethodAlias	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/handlers.py	/^class ClientMethodAlias(object):$/;"	c
ClientMethodAlias	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/handlers.py	/^class ClientMethodAlias(object):$/;"	c
ClientMethodAlias	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/handlers.py	/^class ClientMethodAlias(object):$/;"	c
ClientMethodAlias	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/handlers.py	/^class ClientMethodAlias(object):$/;"	c
ClientMethodAlias	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/handlers.py	/^class ClientMethodAlias(object):$/;"	c
ClientMethodAlias	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/handlers.py	/^class ClientMethodAlias(object):$/;"	c
ClientMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/docstring.py	/^class ClientMethodDocstring(LazyLoadedDocstring):$/;"	c
ClientMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/docstring.py	/^class ClientMethodDocstring(LazyLoadedDocstring):$/;"	c
ClientMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/docstring.py	/^class ClientMethodDocstring(LazyLoadedDocstring):$/;"	c
ClientMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/docstring.py	/^class ClientMethodDocstring(LazyLoadedDocstring):$/;"	c
ClientMethodDocstring	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/docstring.py	/^class ClientMethodDocstring(LazyLoadedDocstring):$/;"	c
ClientMethodDocstring	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/docstring.py	/^class ClientMethodDocstring(LazyLoadedDocstring):$/;"	c
ClientRateLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/adaptive.py	/^class ClientRateLimiter(object):$/;"	c
ClientRateLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/adaptive.py	/^class ClientRateLimiter(object):$/;"	c
ClientRateLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/adaptive.py	/^class ClientRateLimiter(object):$/;"	c
ClientRateLimiter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/adaptive.py	/^class ClientRateLimiter(object):$/;"	c
ClientRateLimiter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/adaptive.py	/^class ClientRateLimiter(object):$/;"	c
ClientRateLimiter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/adaptive.py	/^class ClientRateLimiter(object):$/;"	c
Clock	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/bucket.py	/^class Clock(object):$/;"	c
Clock	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/bucket.py	/^class Clock(object):$/;"	c
Clock	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/bucket.py	/^class Clock(object):$/;"	c
Clock	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/bucket.py	/^class Clock(object):$/;"	c
Clock	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/bucket.py	/^class Clock(object):$/;"	c
Clock	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/bucket.py	/^class Clock(object):$/;"	c
CloseHandle	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/compat_win32.py	/^            def CloseHandle(h):$/;"	m	class:_winapi
CloseHandle	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/compat_win32.py	/^            def CloseHandle(h):$/;"	m	class:_winapi
ClosedDomainProver	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/nonmonotonic.py	/^class ClosedDomainProver(ProverCommandDecorator):$/;"	c
ClosedDomainProver	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/nonmonotonic.py	/^class ClosedDomainProver(ProverCommandDecorator):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedPoolError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
ClosedWorldProver	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/nonmonotonic.py	/^class ClosedWorldProver(ProverCommandDecorator):$/;"	c
ClosedWorldProver	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/nonmonotonic.py	/^class ClosedWorldProver(ProverCommandDecorator):$/;"	c
CloudFrontSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/signers.py	/^class CloudFrontSigner(object):$/;"	c
CloudFrontSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/signers.py	/^class CloudFrontSigner(object):$/;"	c
CloudFrontSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/signers.py	/^class CloudFrontSigner(object):$/;"	c
CloudFrontSigner	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/signers.py	/^class CloudFrontSigner(object):$/;"	c
CloudFrontSigner	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/signers.py	/^class CloudFrontSigner(object):$/;"	c
CloudFrontSigner	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/signers.py	/^class CloudFrontSigner(object):$/;"	c
CloudPickler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle_fast.py	/^class CloudPickler(Pickler):$/;"	c
CloudPickler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle_fast.py	/^class CloudPickler(Pickler):$/;"	c
CloudpickledClassWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/cloudpickle_wrapper.py	/^        class CloudpickledClassWrapper(CloudpickledObjectWrapper):$/;"	c	function:wrap_non_picklable_objects
CloudpickledClassWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/cloudpickle_wrapper.py	/^        class CloudpickledClassWrapper(CloudpickledObjectWrapper):$/;"	c	function:wrap_non_picklable_objects
CloudpickledObjectWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/cloudpickle_wrapper.py	/^class CloudpickledObjectWrapper(object):$/;"	c
CloudpickledObjectWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/cloudpickle_wrapper.py	/^class CloudpickledObjectWrapper(object):$/;"	c
ClusterClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/cluster.py	/^class ClusterClient(NamespacedClient):$/;"	c
ClusterClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/cluster.py	/^class ClusterClient(NamespacedClient):$/;"	c
ClusterClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/cluster.py	/^class ClusterClient(NamespacedClient):$/;"	c
ClusterClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/cluster.py	/^class ClusterClient(NamespacedClient):$/;"	c
ClusterI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/cluster/api.py	/^class ClusterI(metaclass=ABCMeta):$/;"	c
ClusterI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/cluster/api.py	/^class ClusterI(metaclass=ABCMeta):$/;"	c
Codec	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/idna/codec.py	/^class Codec(codecs.Codec):$/;"	c
Codec	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/idna/codec.py	/^class Codec(codecs.Codec):$/;"	c
CodingStateMachine	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/codingstatemachine.py	/^class CodingStateMachine(object):$/;"	c
CodingStateMachine	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/codingstatemachine.py	/^class CodingStateMachine(object):$/;"	c
Collection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/model.py	/^class Collection(Action):$/;"	c
Collection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/model.py	/^class Collection(Action):$/;"	c
Collection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/model.py	/^class Collection(Action):$/;"	c
Collection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/model.py	/^class Collection(Action):$/;"	c
Collection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/model.py	/^class Collection(Action):$/;"	c
Collection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^class Collection(object):$/;"	c
Collection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/model.py	/^class Collection(Action):$/;"	c
Collection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^class Collection(object):$/;"	c
CollectionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/docstring.py	/^class CollectionDocstring(LazyLoadedDocstring):$/;"	c
CollectionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/docstring.py	/^class CollectionDocstring(LazyLoadedDocstring):$/;"	c
CollectionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/docstring.py	/^class CollectionDocstring(LazyLoadedDocstring):$/;"	c
CollectionDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/docstring.py	/^class CollectionDocstring(LazyLoadedDocstring):$/;"	c
CollectionDocstring	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/docstring.py	/^class CollectionDocstring(LazyLoadedDocstring):$/;"	c
CollectionDocstring	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/docstring.py	/^class CollectionDocstring(LazyLoadedDocstring):$/;"	c
CollectionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/collection.py	/^class CollectionDocumenter(BaseDocumenter):$/;"	c
CollectionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/collection.py	/^class CollectionDocumenter(BaseDocumenter):$/;"	c
CollectionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/collection.py	/^class CollectionDocumenter(BaseDocumenter):$/;"	c
CollectionDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/collection.py	/^class CollectionDocumenter(BaseDocumenter):$/;"	c
CollectionDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/collection.py	/^class CollectionDocumenter(BaseDocumenter):$/;"	c
CollectionDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/collection.py	/^class CollectionDocumenter(BaseDocumenter):$/;"	c
CollectionFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/collection.py	/^class CollectionFactory(object):$/;"	c
CollectionFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/collection.py	/^class CollectionFactory(object):$/;"	c
CollectionFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/collection.py	/^class CollectionFactory(object):$/;"	c
CollectionFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/collection.py	/^class CollectionFactory(object):$/;"	c
CollectionFactory	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/collection.py	/^class CollectionFactory(object):$/;"	c
CollectionFactory	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/collection.py	/^class CollectionFactory(object):$/;"	c
CollectionManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/collection.py	/^class CollectionManager(object):$/;"	c
CollectionManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/collection.py	/^class CollectionManager(object):$/;"	c
CollectionManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/collection.py	/^class CollectionManager(object):$/;"	c
CollectionManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/collection.py	/^class CollectionManager(object):$/;"	c
CollectionManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/collection.py	/^class CollectionManager(object):$/;"	c
CollectionManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/collection.py	/^class CollectionManager(object):$/;"	c
CollectionMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/docstring.py	/^class CollectionMethodDocstring(LazyLoadedDocstring):$/;"	c
CollectionMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/docstring.py	/^class CollectionMethodDocstring(LazyLoadedDocstring):$/;"	c
CollectionMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/docstring.py	/^class CollectionMethodDocstring(LazyLoadedDocstring):$/;"	c
CollectionMethodDocstring	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/docstring.py	/^class CollectionMethodDocstring(LazyLoadedDocstring):$/;"	c
CollectionMethodDocstring	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/docstring.py	/^class CollectionMethodDocstring(LazyLoadedDocstring):$/;"	c
CollectionMethodDocstring	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/docstring.py	/^class CollectionMethodDocstring(LazyLoadedDocstring):$/;"	c
CollocationsModel	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/collocations_app.py	/^class CollocationsModel:$/;"	c
CollocationsModel	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/collocations_app.py	/^class CollocationsModel:$/;"	c
CollocationsView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/collocations_app.py	/^class CollocationsView:$/;"	c
CollocationsView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/collocations_app.py	/^class CollocationsView:$/;"	c
ColorizedList	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class ColorizedList(object):$/;"	c
ColorizedList	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class ColorizedList(object):$/;"	c
Command	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^class Command(BaseCommand):$/;"	c
Command	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^class Command(BaseCommand):$/;"	c
CommandCollection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^class CommandCollection(MultiCommand):$/;"	c
CommandCollection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^class CommandCollection(MultiCommand):$/;"	c
CommandLineToArgvW	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_winconsole.py	/^CommandLineToArgvW = WINFUNCTYPE(POINTER(LPWSTR), LPCWSTR, POINTER(c_int))($/;"	v
CommandLineToArgvW	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_winconsole.py	/^CommandLineToArgvW = WINFUNCTYPE(POINTER(LPWSTR), LPCWSTR, POINTER(c_int))($/;"	v
Comparable	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/utils.py	/^class Comparable(object):$/;"	c
Comparable	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/utils.py	/^class Comparable(object):$/;"	c
ComparableMixin	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/mixins.py	/^class ComparableMixin(object):$/;"	c
ComparableMixin	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/mixins.py	/^class ComparableMixin(object):$/;"	c
ComparativeSentencesCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^class ComparativeSentencesCorpusReader(CorpusReader):$/;"	c
ComparativeSentencesCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^class ComparativeSentencesCorpusReader(CorpusReader):$/;"	c
Comparison	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^class Comparison(object):$/;"	c
Comparison	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^class Comparison(object):$/;"	c
ComparisonCondition	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class ComparisonCondition(ConditionBase):$/;"	c
ComparisonCondition	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class ComparisonCondition(ConditionBase):$/;"	c
ComparisonCondition	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class ComparisonCondition(ConditionBase):$/;"	c
ComparisonCondition	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class ComparisonCondition(ConditionBase):$/;"	c
ComparisonCondition	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ComparisonCondition(ConditionBase):$/;"	c
ComparisonCondition	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ComparisonCondition(ConditionBase):$/;"	c
CompleteDownloadNOOPTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class CompleteDownloadNOOPTask(Task):$/;"	c
CompleteDownloadNOOPTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class CompleteDownloadNOOPTask(Task):$/;"	c
CompleteDownloadNOOPTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class CompleteDownloadNOOPTask(Task):$/;"	c
CompleteDownloadNOOPTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class CompleteDownloadNOOPTask(Task):$/;"	c
CompleteDownloadNOOPTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class CompleteDownloadNOOPTask(Task):$/;"	c
CompleteDownloadNOOPTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class CompleteDownloadNOOPTask(Task):$/;"	c
CompleteFundamentalRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^class CompleteFundamentalRule(SingleEdgeFundamentalRule):$/;"	c
CompleteFundamentalRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^class CompleteFundamentalRule(SingleEdgeFundamentalRule):$/;"	c
CompleteMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/tasks.py	/^class CompleteMultipartUploadTask(Task):$/;"	c
CompleteMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/tasks.py	/^class CompleteMultipartUploadTask(Task):$/;"	c
CompleteMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/tasks.py	/^class CompleteMultipartUploadTask(Task):$/;"	c
CompleteMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/tasks.py	/^class CompleteMultipartUploadTask(Task):$/;"	c
CompleteMultipartUploadTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/tasks.py	/^class CompleteMultipartUploadTask(Task):$/;"	c
CompleteMultipartUploadTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/tasks.py	/^class CompleteMultipartUploadTask(Task):$/;"	c
CompleterRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^class CompleterRule(CompleteFundamentalRule):$/;"	c
CompleterRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^class CompleterRule(CompleteFundamentalRule):$/;"	c
ComplexTestObject	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^    class ComplexTestObject:$/;"	c	function:test_binary_zlibfile_invalid_filename_type
ComplexTestObject	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_numpy_pickle.py	/^    class ComplexTestObject:$/;"	c	function:test_binary_zlibfile_invalid_filename_type
ComplexType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class ComplexType(Type):$/;"	c
ComplexType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class ComplexType(Type):$/;"	c
ComponentLocator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/session.py	/^class ComponentLocator(object):$/;"	c
ComponentLocator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/session.py	/^class ComponentLocator(object):$/;"	c
ComponentLocator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/session.py	/^class ComponentLocator(object):$/;"	c
ComponentLocator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/session.py	/^class ComponentLocator(object):$/;"	c
ComponentLocator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/session.py	/^class ComponentLocator(object):$/;"	c
ComponentLocator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/session.py	/^class ComponentLocator(object):$/;"	c
CompositeParamType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/types.py	/^class CompositeParamType(ParamType):$/;"	c
CompositeParamType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/types.py	/^class CompositeParamType(ParamType):$/;"	c
CompositionRuleSet	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^CompositionRuleSet = [$/;"	v
CompositionRuleSet	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^CompositionRuleSet = [$/;"	v
CompressorWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/compressor.py	/^class CompressorWrapper():$/;"	c
CompressorWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/compressor.py	/^class CompressorWrapper():$/;"	c
ConcatenatedCorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/util.py	/^class ConcatenatedCorpusView(AbstractLazySequence):$/;"	c
ConcatenatedCorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/util.py	/^class ConcatenatedCorpusView(AbstractLazySequence):$/;"	c
Concept	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/chat80.py	/^class Concept(object):$/;"	c
Concept	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/chat80.py	/^class Concept(object):$/;"	c
ConcordanceIndex	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/text.py	/^class ConcordanceIndex(object):$/;"	c
ConcordanceIndex	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/text.py	/^class ConcordanceIndex(object):$/;"	c
ConcordanceLine	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/text.py	/^ConcordanceLine = namedtuple($/;"	v
ConcordanceLine	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/text.py	/^ConcordanceLine = namedtuple($/;"	v
ConcordanceSearchModel	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/concordance_app.py	/^class ConcordanceSearchModel(object):$/;"	c
ConcordanceSearchModel	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/concordance_app.py	/^class ConcordanceSearchModel(object):$/;"	c
ConcordanceSearchView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/concordance_app.py	/^class ConcordanceSearchView(object):$/;"	c
ConcordanceSearchView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/concordance_app.py	/^class ConcordanceSearchView(object):$/;"	c
Condition	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^        def Condition(self, lock=None):$/;"	f	function:LokyContext.SimpleQueue
Condition	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/synchronize.py	/^class Condition(object):$/;"	c
Condition	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^        def Condition(self, lock=None):$/;"	f	function:LokyContext.SimpleQueue
Condition	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/synchronize.py	/^class Condition(object):$/;"	c
ConditionAttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class ConditionAttributeBase(ConditionBase, AttributeBase):$/;"	c
ConditionAttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class ConditionAttributeBase(ConditionBase, AttributeBase):$/;"	c
ConditionAttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class ConditionAttributeBase(ConditionBase, AttributeBase):$/;"	c
ConditionAttributeBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class ConditionAttributeBase(ConditionBase, AttributeBase):$/;"	c
ConditionAttributeBase	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ConditionAttributeBase(ConditionBase, AttributeBase):$/;"	c
ConditionAttributeBase	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ConditionAttributeBase(ConditionBase, AttributeBase):$/;"	c
ConditionBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class ConditionBase(object):$/;"	c
ConditionBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class ConditionBase(object):$/;"	c
ConditionBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class ConditionBase(object):$/;"	c
ConditionBase	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class ConditionBase(object):$/;"	c
ConditionBase	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ConditionBase(object):$/;"	c
ConditionBase	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ConditionBase(object):$/;"	c
ConditionExpressionBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class ConditionExpressionBuilder(object):$/;"	c
ConditionExpressionBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class ConditionExpressionBuilder(object):$/;"	c
ConditionExpressionBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class ConditionExpressionBuilder(object):$/;"	c
ConditionExpressionBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class ConditionExpressionBuilder(object):$/;"	c
ConditionExpressionBuilder	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ConditionExpressionBuilder(object):$/;"	c
ConditionExpressionBuilder	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class ConditionExpressionBuilder(object):$/;"	c
ConditionExpressionTransformation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/transform.py	/^class ConditionExpressionTransformation(object):$/;"	c
ConditionExpressionTransformation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/transform.py	/^class ConditionExpressionTransformation(object):$/;"	c
ConditionExpressionTransformation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/transform.py	/^class ConditionExpressionTransformation(object):$/;"	c
ConditionExpressionTransformation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/transform.py	/^class ConditionExpressionTransformation(object):$/;"	c
ConditionExpressionTransformation	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/transform.py	/^class ConditionExpressionTransformation(object):$/;"	c
ConditionExpressionTransformation	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/transform.py	/^class ConditionExpressionTransformation(object):$/;"	c
Conditional	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class Conditional(RegexBase):$/;"	c
Conditional	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class Conditional(RegexBase):$/;"	c
ConditionalExponentialClassifier	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/maxent.py	/^ConditionalExponentialClassifier = MaxentClassifier$/;"	v
ConditionalExponentialClassifier	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/maxent.py	/^ConditionalExponentialClassifier = MaxentClassifier$/;"	v
ConditionalFreqDist	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class ConditionalFreqDist(defaultdict):$/;"	c
ConditionalFreqDist	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class ConditionalFreqDist(defaultdict):$/;"	c
ConditionalProbDist	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class ConditionalProbDist(ConditionalProbDistI):$/;"	c
ConditionalProbDist	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class ConditionalProbDist(ConditionalProbDistI):$/;"	c
ConditionalProbDistI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class ConditionalProbDistI(dict, metaclass=ABCMeta):$/;"	c
ConditionalProbDistI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class ConditionalProbDistI(dict, metaclass=ABCMeta):$/;"	c
Config	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/config.py	/^class Config(object):$/;"	c
Config	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/config.py	/^class Config(object):$/;"	c
Config	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/config.py	/^class Config(object):$/;"	c
Config	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/config.py	/^class Config(object):$/;"	c
Config	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/config.py	/^class Config(object):$/;"	c
Config	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/config.py	/^class Config(object):$/;"	c
ConfigChainFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^class ConfigChainFactory(object):$/;"	c
ConfigChainFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^class ConfigChainFactory(object):$/;"	c
ConfigChainFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^class ConfigChainFactory(object):$/;"	c
ConfigChainFactory	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^class ConfigChainFactory(object):$/;"	c
ConfigChainFactory	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^class ConfigChainFactory(object):$/;"	c
ConfigChainFactory	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^class ConfigChainFactory(object):$/;"	c
ConfigNotFound	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ConfigNotFound(BotoCoreError):$/;"	c
ConfigNotFound	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ConfigNotFound(BotoCoreError):$/;"	c
ConfigNotFound	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ConfigNotFound(BotoCoreError):$/;"	c
ConfigNotFound	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ConfigNotFound(BotoCoreError):$/;"	c
ConfigNotFound	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ConfigNotFound(BotoCoreError):$/;"	c
ConfigNotFound	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ConfigNotFound(BotoCoreError):$/;"	c
ConfigParseError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ConfigParseError(BotoCoreError):$/;"	c
ConfigParseError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ConfigParseError(BotoCoreError):$/;"	c
ConfigParseError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ConfigParseError(BotoCoreError):$/;"	c
ConfigParseError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ConfigParseError(BotoCoreError):$/;"	c
ConfigParseError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ConfigParseError(BotoCoreError):$/;"	c
ConfigParseError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ConfigParseError(BotoCoreError):$/;"	c
ConfigProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class ConfigProvider(CredentialProvider):$/;"	c
ConfigProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class ConfigProvider(CredentialProvider):$/;"	c
ConfigProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class ConfigProvider(CredentialProvider):$/;"	c
ConfigProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class ConfigProvider(CredentialProvider):$/;"	c
ConfigProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class ConfigProvider(CredentialProvider):$/;"	c
ConfigProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class ConfigProvider(CredentialProvider):$/;"	c
ConfigValueStore	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^class ConfigValueStore(object):$/;"	c
ConfigValueStore	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^class ConfigValueStore(object):$/;"	c
ConfigValueStore	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^class ConfigValueStore(object):$/;"	c
ConfigValueStore	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^class ConfigValueStore(object):$/;"	c
ConfigValueStore	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^class ConfigValueStore(object):$/;"	c
ConfigValueStore	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^class ConfigValueStore(object):$/;"	c
Configuration	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/transitionparser.py	/^class Configuration(object):$/;"	c
Configuration	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/transitionparser.py	/^class Configuration(object):$/;"	c
ConflictError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ConflictError(TransportError):$/;"	c
ConflictError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ConflictError(TransportError):$/;"	c
ConfusionMatrix	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/confusionmatrix.py	/^class ConfusionMatrix(object):$/;"	c
ConfusionMatrix	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/confusionmatrix.py	/^class ConfusionMatrix(object):$/;"	c
ConllChunkCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllChunkCorpusReader(ConllCorpusReader):$/;"	c
ConllChunkCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllChunkCorpusReader(ConllCorpusReader):$/;"	c
ConllCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllCorpusReader(CorpusReader):$/;"	c
ConllCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllCorpusReader(CorpusReader):$/;"	c
ConllExtractor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/en/np_extractors.py	/^class ConllExtractor(BaseNPExtractor):$/;"	c
ConllExtractor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/en/np_extractors.py	/^class ConllExtractor(BaseNPExtractor):$/;"	c
ConllSRLInstance	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllSRLInstance(object):$/;"	c
ConllSRLInstance	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllSRLInstance(object):$/;"	c
ConllSRLInstanceList	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllSRLInstanceList(list):$/;"	c
ConllSRLInstanceList	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/conll.py	/^class ConllSRLInstanceList(list):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeout	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ConnectTimeoutError(ConnectionError, requests.exceptions.ConnectTimeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ConnectTimeoutError(ConnectionError, requests.exceptions.ConnectTimeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ConnectTimeoutError(ConnectionError, requests.exceptions.ConnectTimeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ConnectTimeoutError(ConnectionError, requests.exceptions.ConnectTimeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ConnectTimeoutError(ConnectionError, requests.exceptions.ConnectTimeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ConnectTimeoutError(ConnectionError, requests.exceptions.ConnectTimeout):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectTimeoutError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
Connection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection/base.py	/^class Connection(object):$/;"	c
Connection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection/base.py	/^class Connection(object):$/;"	c
ConnectionClosedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ConnectionClosedError(HTTPClientError):$/;"	c
ConnectionClosedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ConnectionClosedError(HTTPClientError):$/;"	c
ConnectionClosedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ConnectionClosedError(HTTPClientError):$/;"	c
ConnectionClosedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ConnectionClosedError(HTTPClientError):$/;"	c
ConnectionClosedError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ConnectionClosedError(HTTPClientError):$/;"	c
ConnectionClosedError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ConnectionClosedError(HTTPClientError):$/;"	c
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPConnection$/;"	v	class:AWSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPSConnection$/;"	v	class:AWSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPConnection$/;"	v	class:AWSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPSConnection$/;"	v	class:AWSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPConnection$/;"	v	class:AWSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPSConnection$/;"	v	class:AWSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPConnection$/;"	v	class:AWSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPSConnection$/;"	v	class:AWSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPConnection$/;"	v	class:AWSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPSConnection$/;"	v	class:AWSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPConnection$/;"	v	class:AWSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/awsrequest.py	/^    ConnectionCls = AWSHTTPSConnection$/;"	v	class:AWSHTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class ConnectionError(BotoCoreError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class ConnectionError(BotoCoreError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class ConnectionError(BotoCoreError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class ConnectionError(BotoCoreError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class ConnectionError(BotoCoreError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ConnectionError(TransportError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class ConnectionError(BotoCoreError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ConnectionError(TransportError):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class ConnectionPool(object):$/;"	c
ConnectionPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ConnectionSelector	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class ConnectionSelector(object):$/;"	c
ConnectionSelector	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class ConnectionSelector(object):$/;"	c
ConnectionTimeout	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ConnectionTimeout(ConnectionError):$/;"	c
ConnectionTimeout	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ConnectionTimeout(ConnectionError):$/;"	c
ConsoleStream	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_winconsole.py	/^class ConsoleStream(object):$/;"	c
ConsoleStream	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_winconsole.py	/^class ConsoleStream(object):$/;"	c
ConstantExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class ConstantExpression(AtomicExpression):$/;"	c
ConstantExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class ConstantExpression(AbstractVariableExpression):$/;"	c
ConstantExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/linearlogic.py	/^class ConstantExpression(AtomicExpression):$/;"	c
ConstantExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class ConstantExpression(AbstractVariableExpression):$/;"	c
ConstantProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^class ConstantProvider(BaseProvider):$/;"	c
ConstantProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^class ConstantProvider(BaseProvider):$/;"	c
ConstantProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^class ConstantProvider(BaseProvider):$/;"	c
ConstantProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^class ConstantProvider(BaseProvider):$/;"	c
ConstantProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^class ConstantProvider(BaseProvider):$/;"	c
ConstantProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^class ConstantProvider(BaseProvider):$/;"	c
Constants	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/hole.py	/^class Constants(object):$/;"	c
Constants	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/hole.py	/^class Constants(object):$/;"	c
Constraint	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/hole.py	/^class Constraint(object):$/;"	c
Constraint	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/hole.py	/^class Constraint(object):$/;"	c
ConsumptionScheduler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/bandwidth.py	/^class ConsumptionScheduler(object):$/;"	c
ConsumptionScheduler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/bandwidth.py	/^class ConsumptionScheduler(object):$/;"	c
ConsumptionScheduler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/bandwidth.py	/^class ConsumptionScheduler(object):$/;"	c
ConsumptionScheduler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/bandwidth.py	/^class ConsumptionScheduler(object):$/;"	c
ConsumptionScheduler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class ConsumptionScheduler(object):$/;"	c
ConsumptionScheduler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/bandwidth.py	/^class ConsumptionScheduler(object):$/;"	c
ContainerCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainerCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainerCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainerCls	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainerCls	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainerCls	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainerMetadataFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^class ContainerMetadataFetcher(object):$/;"	c
ContainerMetadataFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^class ContainerMetadataFetcher(object):$/;"	c
ContainerMetadataFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^class ContainerMetadataFetcher(object):$/;"	c
ContainerMetadataFetcher	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^class ContainerMetadataFetcher(object):$/;"	c
ContainerMetadataFetcher	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^class ContainerMetadataFetcher(object):$/;"	c
ContainerMetadataFetcher	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^class ContainerMetadataFetcher(object):$/;"	c
ContainerProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class ContainerProvider(CredentialProvider):$/;"	c
ContainerProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class ContainerProvider(CredentialProvider):$/;"	c
ContainerProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class ContainerProvider(CredentialProvider):$/;"	c
ContainerProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class ContainerProvider(CredentialProvider):$/;"	c
ContainerProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class ContainerProvider(CredentialProvider):$/;"	c
ContainerProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class ContainerProvider(CredentialProvider):$/;"	c
Contains	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class Contains(ConditionBase):$/;"	c
Contains	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class Contains(ConditionBase):$/;"	c
Contains	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class Contains(ConditionBase):$/;"	c
Contains	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class Contains(ConditionBase):$/;"	c
Contains	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Contains(ConditionBase):$/;"	c
Contains	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Contains(ConditionBase):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
ContentDecodingError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
Context	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^class Context(object):$/;"	c
Context	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^class Context(lazylist, Rules):$/;"	c
Context	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^class Context(object):$/;"	c
Context	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^class Context(lazylist, Rules):$/;"	c
ContextIndex	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/text.py	/^class ContextIndex(object):$/;"	c
ContextIndex	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/text.py	/^class ContextIndex(object):$/;"	c
ContextTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/sequential.py	/^class ContextTagger(SequentialBackoffTagger):$/;"	c
ContextTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/sequential.py	/^class ContextTagger(SequentialBackoffTagger):$/;"	c
ContingencyMeasures	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/association.py	/^class ContingencyMeasures(object):$/;"	c
ContingencyMeasures	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/association.py	/^class ContingencyMeasures(object):$/;"	c
CookieConflictError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/cookies.py	/^class CookieConflictError(RuntimeError):$/;"	c
CookieConflictError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/cookies.py	/^class CookieConflictError(RuntimeError):$/;"	c
CooperStore	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/cooper_storage.py	/^class CooperStore(object):$/;"	c
CooperStore	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/cooper_storage.py	/^class CooperStore(object):$/;"	c
CopyObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/copies.py	/^class CopyObjectTask(Task):$/;"	c
CopyObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/copies.py	/^class CopyObjectTask(Task):$/;"	c
CopyObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/copies.py	/^class CopyObjectTask(Task):$/;"	c
CopyObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/copies.py	/^class CopyObjectTask(Task):$/;"	c
CopyObjectTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/copies.py	/^class CopyObjectTask(Task):$/;"	c
CopyObjectTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/copies.py	/^class CopyObjectTask(Task):$/;"	c
CopyPartTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/copies.py	/^class CopyPartTask(Task):$/;"	c
CopyPartTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/copies.py	/^class CopyPartTask(Task):$/;"	c
CopyPartTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/copies.py	/^class CopyPartTask(Task):$/;"	c
CopyPartTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/copies.py	/^class CopyPartTask(Task):$/;"	c
CopyPartTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/copies.py	/^class CopyPartTask(Task):$/;"	c
CopyPartTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/copies.py	/^class CopyPartTask(Task):$/;"	c
CopySubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/copies.py	/^class CopySubmissionTask(SubmissionTask):$/;"	c
CopySubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/copies.py	/^class CopySubmissionTask(SubmissionTask):$/;"	c
CopySubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/copies.py	/^class CopySubmissionTask(SubmissionTask):$/;"	c
CopySubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/copies.py	/^class CopySubmissionTask(SubmissionTask):$/;"	c
CopySubmissionTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/copies.py	/^class CopySubmissionTask(SubmissionTask):$/;"	c
CopySubmissionTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/copies.py	/^class CopySubmissionTask(SubmissionTask):$/;"	c
CoreFoundation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = load_cdll($/;"	v
CoreFoundation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = load_cdll($/;"	v
CoreFoundation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = load_cdll($/;"	v
CoreFoundation	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = load_cdll($/;"	v
CoreFoundation	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = load_cdll($/;"	v
CoreFoundation	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = load_cdll($/;"	v
CoreNLPDependencyParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPDependencyParser(GenericCoreNLPParser):$/;"	c
CoreNLPDependencyParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPDependencyParser(GenericCoreNLPParser):$/;"	c
CoreNLPParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPParser(GenericCoreNLPParser):$/;"	c
CoreNLPParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPParser(GenericCoreNLPParser):$/;"	c
CoreNLPServer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPServer(object):$/;"	c
CoreNLPServer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPServer(object):$/;"	c
CoreNLPServerError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPServerError(EnvironmentError):$/;"	c
CoreNLPServerError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/corenlp.py	/^class CoreNLPServerError(EnvironmentError):$/;"	c
CoreServices	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/_posix_wait.py	/^    CoreServices = ctypes.CDLL(find_library('CoreServices'),$/;"	v
CoreServices	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/_posix_wait.py	/^    CoreServices = ctypes.CDLL(find_library('CoreServices'),$/;"	v
CorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/api.py	/^class CorpusReader(object):$/;"	c
CorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/api.py	/^class CorpusReader(object):$/;"	c
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/categorized_sents.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:CategorizedSentencesCorpusReader
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:ComparativeSentencesCorpusReader
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/opinion_lexicon.py	/^    CorpusView = IgnoreReadmeCorpusView$/;"	v	class:OpinionLexiconCorpusReader
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/plaintext.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:PlaintextCorpusReader
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/pros_cons.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:ProsConsCorpusReader
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/reviews.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:ReviewsCorpusReader
CorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/twitter.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:TwitterCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/categorized_sents.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:CategorizedSentencesCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:ComparativeSentencesCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/opinion_lexicon.py	/^    CorpusView = IgnoreReadmeCorpusView$/;"	v	class:OpinionLexiconCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/plaintext.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:PlaintextCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/pros_cons.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:ProsConsCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/reviews.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:ReviewsCorpusReader
CorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/twitter.py	/^    CorpusView = StreamBackedCorpusView$/;"	v	class:TwitterCorpusReader
CountCallbackInvoker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/utils.py	/^class CountCallbackInvoker(object):$/;"	c
CountCallbackInvoker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/utils.py	/^class CountCallbackInvoker(object):$/;"	c
CountCallbackInvoker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/utils.py	/^class CountCallbackInvoker(object):$/;"	c
CountCallbackInvoker	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/utils.py	/^class CountCallbackInvoker(object):$/;"	c
CountCallbackInvoker	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/utils.py	/^class CountCallbackInvoker(object):$/;"	c
CountCallbackInvoker	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/utils.py	/^class CountCallbackInvoker(object):$/;"	c
CountSerialized	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_dask.py	/^class CountSerialized(object):$/;"	c
CountSerialized	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_dask.py	/^class CountSerialized(object):$/;"	c
Counter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/internals.py	/^class Counter:$/;"	c
Counter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/internals.py	/^class Counter:$/;"	c
Country	TwitterStreamWithAWS/src/Streams/reddit_to_kinesis.py	/^Country = ALL_SUBREDDIT_REPRESETED_COUNTRY_SUBREDDIT$/;"	v
Country_str	TwitterStreamWithAWS/src/Streams/reddit_to_kinesis.py	/^Country_str = "+".join(Country)$/;"	v
Counts	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/translate/ibm_model.py	/^class Counts(object):$/;"	c
Counts	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/translate/ibm_model.py	/^class Counts(object):$/;"	c
CreateMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/tasks.py	/^class CreateMultipartUploadTask(Task):$/;"	c
CreateMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/tasks.py	/^class CreateMultipartUploadTask(Task):$/;"	c
CreateMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/tasks.py	/^class CreateMultipartUploadTask(Task):$/;"	c
CreateMultipartUploadTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/tasks.py	/^class CreateMultipartUploadTask(Task):$/;"	c
CreateMultipartUploadTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/tasks.py	/^class CreateMultipartUploadTask(Task):$/;"	c
CreateMultipartUploadTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/tasks.py	/^class CreateMultipartUploadTask(Task):$/;"	c
CreateProcess	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/compat_win32.py	/^            CreateProcess = win_api.CreateProcess$/;"	v	class:_winapi
CreateProcess	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/compat_win32.py	/^            CreateProcess = win_api.CreateProcess$/;"	v	class:_winapi
CredentialProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class CredentialProvider(object):$/;"	c
CredentialProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class CredentialProvider(object):$/;"	c
CredentialProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class CredentialProvider(object):$/;"	c
CredentialProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class CredentialProvider(object):$/;"	c
CredentialProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class CredentialProvider(object):$/;"	c
CredentialProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class CredentialProvider(object):$/;"	c
CredentialResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class CredentialResolver(object):$/;"	c
CredentialResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class CredentialResolver(object):$/;"	c
CredentialResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class CredentialResolver(object):$/;"	c
CredentialResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class CredentialResolver(object):$/;"	c
CredentialResolver	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class CredentialResolver(object):$/;"	c
CredentialResolver	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class CredentialResolver(object):$/;"	c
CredentialRetrievalError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class CredentialRetrievalError(BotoCoreError):$/;"	c
CredentialRetrievalError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class CredentialRetrievalError(BotoCoreError):$/;"	c
CredentialRetrievalError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class CredentialRetrievalError(BotoCoreError):$/;"	c
CredentialRetrievalError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class CredentialRetrievalError(BotoCoreError):$/;"	c
CredentialRetrievalError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class CredentialRetrievalError(BotoCoreError):$/;"	c
CredentialRetrievalError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class CredentialRetrievalError(BotoCoreError):$/;"	c
Credentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class Credentials(object):$/;"	c
Credentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class Credentials(object):$/;"	c
Credentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class Credentials(object):$/;"	c
Credentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class Credentials(object):$/;"	c
Credentials	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class Credentials(object):$/;"	c
Credentials	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class Credentials(object):$/;"	c
CrossValidationProbDist	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class CrossValidationProbDist(ProbDistI):$/;"	c
CrossValidationProbDist	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class CrossValidationProbDist(ProbDistI):$/;"	c
CrubadanCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/crubadan.py	/^class CrubadanCorpusReader(CorpusReader):$/;"	c
CrubadanCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/crubadan.py	/^class CrubadanCorpusReader(CorpusReader):$/;"	c
CubicCalculator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/throttling.py	/^class CubicCalculator(object):$/;"	c
CubicCalculator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/throttling.py	/^class CubicCalculator(object):$/;"	c
CubicCalculator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/throttling.py	/^class CubicCalculator(object):$/;"	c
CubicCalculator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/throttling.py	/^class CubicCalculator(object):$/;"	c
CubicCalculator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/throttling.py	/^class CubicCalculator(object):$/;"	c
CubicCalculator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/throttling.py	/^class CubicCalculator(object):$/;"	c
CubicParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/throttling.py	/^CubicParams = namedtuple('CubicParams', ['w_max', 'k', 'last_fail'])$/;"	v
CubicParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/throttling.py	/^CubicParams = namedtuple('CubicParams', ['w_max', 'k', 'last_fail'])$/;"	v
CubicParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/throttling.py	/^CubicParams = namedtuple('CubicParams', ['w_max', 'k', 'last_fail'])$/;"	v
CubicParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/throttling.py	/^CubicParams = namedtuple('CubicParams', ['w_max', 'k', 'last_fail'])$/;"	v
CubicParams	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/throttling.py	/^CubicParams = namedtuple('CubicParams', ['w_max', 'k', 'last_fail'])$/;"	v
CubicParams	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/throttling.py	/^CubicParams = namedtuple('CubicParams', ['w_max', 'k', 'last_fail'])$/;"	v
CustomException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_my_exceptions.py	/^class CustomException(Exception):$/;"	c
CustomException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_my_exceptions.py	/^class CustomException(Exception):$/;"	c
CustomException2	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_my_exceptions.py	/^class CustomException2(Exception):$/;"	c
CustomException2	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_my_exceptions.py	/^class CustomException2(Exception):$/;"	c
CustomFeatureValue	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/featstruct.py	/^class CustomFeatureValue(object):$/;"	c
CustomFeatureValue	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/featstruct.py	/^class CustomFeatureValue(object):$/;"	c
CustomModeledAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/action.py	/^class CustomModeledAction(object):$/;"	c
CustomModeledAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/action.py	/^class CustomModeledAction(object):$/;"	c
CustomModeledAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/action.py	/^class CustomModeledAction(object):$/;"	c
CustomModeledAction	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/action.py	/^class CustomModeledAction(object):$/;"	c
CustomModeledAction	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/action.py	/^class CustomModeledAction(object):$/;"	c
CustomModeledAction	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/action.py	/^class CustomModeledAction(object):$/;"	c
CustomizablePickler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/reduction.py	/^    class CustomizablePickler(loky_pickler_cls):$/;"	c	function:set_loky_pickler
CustomizablePickler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/pool.py	/^class CustomizablePickler(Pickler):$/;"	c
CustomizablePickler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/reduction.py	/^    class CustomizablePickler(loky_pickler_cls):$/;"	c	function:set_loky_pickler
CustomizablePickler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/pool.py	/^class CustomizablePickler(Pickler):$/;"	c
CustomizablePicklingQueue	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/pool.py	/^class CustomizablePicklingQueue(object):$/;"	c
CustomizablePicklingQueue	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/pool.py	/^class CustomizablePicklingQueue(object):$/;"	c
CutoffChecker	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/util.py	/^class CutoffChecker(object):$/;"	c
CutoffChecker	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/util.py	/^class CutoffChecker(object):$/;"	c
DASH_PRECEED_DIGIT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/nist.py	/^    DASH_PRECEED_DIGIT = re.compile("([0-9])(-)"), "\\\\1 \\\\2 "$/;"	v	class:NISTTokenizer
DASH_PRECEED_DIGIT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/nist.py	/^    DASH_PRECEED_DIGIT = re.compile("([0-9])(-)"), "\\\\1 \\\\2 "$/;"	v	class:NISTTokenizer
DATA_UPDATES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/compat.py	/^DATA_UPDATES = [$/;"	v
DATA_UPDATES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/compat.py	/^DATA_UPDATES = [$/;"	v
DEBUG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/data.py	/^    DEBUG = True  # : If true, then perform extra sanity checks.$/;"	v	class:SeekableUnicodeStreamReader
DEBUG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/data.py	/^    DEBUG = True  # : If true, then perform extra sanity checks.$/;"	v	class:SeekableUnicodeStreamReader
DECODER_ERROR_CLASSES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/response.py	/^    DECODER_ERROR_CLASSES = (IOError, zlib.error)$/;"	v	class:HTTPResponse
DECODER_ERROR_CLASSES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/response.py	/^    DECODER_ERROR_CLASSES = (IOError, zlib.error)$/;"	v	class:HTTPResponse
DECODER_ERROR_CLASSES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/response.py	/^    DECODER_ERROR_CLASSES = (IOError, zlib.error)$/;"	v	class:HTTPResponse
DECODER_ERROR_CLASSES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/response.py	/^    DECODER_ERROR_CLASSES = (IOError, zlib.error)$/;"	v	class:HTTPResponse
DECODER_ERROR_CLASSES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/response.py	/^    DECODER_ERROR_CLASSES = (IOError, zlib.error)$/;"	v	class:HTTPResponse
DECODER_ERROR_CLASSES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/response.py	/^    DECODER_ERROR_CLASSES = (IOError, zlib.error)$/;"	v	class:HTTPResponse
DEFAULTPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/parser/_parser.py	/^DEFAULTPARSER = parser()$/;"	v
DEFAULTPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/parser/_parser.py	/^DEFAULTPARSER = parser()$/;"	v
DEFAULTPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/parser/_parser.py	/^DEFAULTPARSER = parser()$/;"	v
DEFAULTPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/parser/_parser.py	/^DEFAULTPARSER = parser()$/;"	v
DEFAULTPARSER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/parser/_parser.py	/^DEFAULTPARSER = parser()$/;"	v
DEFAULTPARSER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/parser/_parser.py	/^DEFAULTPARSER = parser()$/;"	v
DEFAULTTZPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/parser/_parser.py	/^DEFAULTTZPARSER = _tzparser()$/;"	v
DEFAULTTZPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/parser/_parser.py	/^DEFAULTTZPARSER = _tzparser()$/;"	v
DEFAULTTZPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/parser/_parser.py	/^DEFAULTTZPARSER = _tzparser()$/;"	v
DEFAULTTZPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/parser/_parser.py	/^DEFAULTTZPARSER = _tzparser()$/;"	v
DEFAULTTZPARSER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/parser/_parser.py	/^DEFAULTTZPARSER = _tzparser()$/;"	v
DEFAULTTZPARSER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/parser/_parser.py	/^DEFAULTTZPARSER = _tzparser()$/;"	v
DEFAULT_ALLOWED_METHODS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    DEFAULT_ALLOWED_METHODS = frozenset($/;"	v	class:Retry
DEFAULT_ALLOWED_METHODS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    DEFAULT_ALLOWED_METHODS = frozenset($/;"	v	class:Retry
DEFAULT_ALLOWED_METHODS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    DEFAULT_ALLOWED_METHODS = frozenset($/;"	v	class:Retry
DEFAULT_ALLOWED_METHODS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    DEFAULT_ALLOWED_METHODS = frozenset($/;"	v	class:Retry
DEFAULT_ALLOWED_METHODS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    DEFAULT_ALLOWED_METHODS = frozenset($/;"	v	class:Retry
DEFAULT_ALLOWED_METHODS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    DEFAULT_ALLOWED_METHODS = frozenset($/;"	v	class:Retry
DEFAULT_BACKEND	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_BACKEND = 'loky'$/;"	v
DEFAULT_BACKEND	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_BACKEND = 'loky'$/;"	v
DEFAULT_CA_BUNDLE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/httpsession.py	/^DEFAULT_CA_BUNDLE = os.path.join(os.path.dirname(__file__), 'cacert.pem')$/;"	v
DEFAULT_CA_BUNDLE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/httpsession.py	/^DEFAULT_CA_BUNDLE = os.path.join(os.path.dirname(__file__), 'cacert.pem')$/;"	v
DEFAULT_CA_BUNDLE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/httpsession.py	/^DEFAULT_CA_BUNDLE = os.path.join(os.path.dirname(__file__), 'cacert.pem')$/;"	v
DEFAULT_CA_BUNDLE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/httpsession.py	/^DEFAULT_CA_BUNDLE = os.path.join(os.path.dirname(__file__), 'cacert.pem')$/;"	v
DEFAULT_CA_BUNDLE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/httpsession.py	/^DEFAULT_CA_BUNDLE = os.path.join(os.path.dirname(__file__), 'cacert.pem')$/;"	v
DEFAULT_CA_BUNDLE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/httpsession.py	/^DEFAULT_CA_BUNDLE = os.path.join(os.path.dirname(__file__), 'cacert.pem')$/;"	v
DEFAULT_CA_BUNDLE_PATH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/utils.py	/^DEFAULT_CA_BUNDLE_PATH = certs.where()$/;"	v
DEFAULT_CA_BUNDLE_PATH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/utils.py	/^DEFAULT_CA_BUNDLE_PATH = certs.where()$/;"	v
DEFAULT_CIPHERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ":".join($/;"	v
DEFAULT_CIPHERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ":".join($/;"	v
DEFAULT_CIPHERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ":".join($/;"	v
DEFAULT_CIPHERS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ":".join($/;"	v
DEFAULT_CIPHERS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ":".join($/;"	v
DEFAULT_CIPHERS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ":".join($/;"	v
DEFAULT_COLUMNS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_compat.py	/^    DEFAULT_COLUMNS = 79$/;"	v
DEFAULT_COLUMNS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_compat.py	/^DEFAULT_COLUMNS = 80$/;"	v
DEFAULT_COLUMNS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_compat.py	/^    DEFAULT_COLUMNS = 79$/;"	v
DEFAULT_COLUMNS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_compat.py	/^DEFAULT_COLUMNS = 80$/;"	v
DEFAULT_COLUMN_WIDTH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^    DEFAULT_COLUMN_WIDTH = 30$/;"	v	class:DownloaderGUI
DEFAULT_COLUMN_WIDTH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^    DEFAULT_COLUMN_WIDTH = 30$/;"	v	class:DownloaderGUI
DEFAULT_CONFIG_FILENAMES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    DEFAULT_CONFIG_FILENAMES = ['\/etc\/boto.cfg', '~\/.boto']$/;"	v	class:BotoProvider
DEFAULT_CONFIG_FILENAMES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    DEFAULT_CONFIG_FILENAMES = ['\/etc\/boto.cfg', '~\/.boto']$/;"	v	class:BotoProvider
DEFAULT_CONFIG_FILENAMES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    DEFAULT_CONFIG_FILENAMES = ['\/etc\/boto.cfg', '~\/.boto']$/;"	v	class:BotoProvider
DEFAULT_CONFIG_FILENAMES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    DEFAULT_CONFIG_FILENAMES = ['\/etc\/boto.cfg', '~\/.boto']$/;"	v	class:BotoProvider
DEFAULT_CONFIG_FILENAMES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    DEFAULT_CONFIG_FILENAMES = ['\/etc\/boto.cfg', '~\/.boto']$/;"	v	class:BotoProvider
DEFAULT_CONFIG_FILENAMES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    DEFAULT_CONFIG_FILENAMES = ['\/etc\/boto.cfg', '~\/.boto']$/;"	v	class:BotoProvider
DEFAULT_CONNECTION_CLASS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/transport.py	/^    DEFAULT_CONNECTION_CLASS = AIOHttpConnection$/;"	v	class:AsyncTransport
DEFAULT_CONNECTION_CLASS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/transport.py	/^    DEFAULT_CONNECTION_CLASS = Urllib3HttpConnection$/;"	v	class:Transport
DEFAULT_CONNECTION_CLASS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/transport.py	/^    DEFAULT_CONNECTION_CLASS = AIOHttpConnection$/;"	v	class:AsyncTransport
DEFAULT_CONNECTION_CLASS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/transport.py	/^    DEFAULT_CONNECTION_CLASS = Urllib3HttpConnection$/;"	v	class:Transport
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:ResponseParser
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/serialize.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:Serializer
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:ResponseParser
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/serialize.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:Serializer
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:ResponseParser
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/serialize.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:Serializer
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:ResponseParser
DEFAULT_ENCODING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/serialize.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:Serializer
DEFAULT_ENCODING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:ResponseParser
DEFAULT_ENCODING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/serialize.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:Serializer
DEFAULT_ENCODING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/formats.py	/^DEFAULT_ENCODING = 'utf-8'$/;"	v
DEFAULT_ENCODING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:ResponseParser
DEFAULT_ENCODING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/serialize.py	/^    DEFAULT_ENCODING = 'utf-8'$/;"	v	class:Serializer
DEFAULT_ENCODING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/formats.py	/^DEFAULT_ENCODING = 'utf-8'$/;"	v
DEFAULT_ENDPOINT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/client.py	/^    DEFAULT_ENDPOINT = '{service}.{region}.amazonaws.com'$/;"	v	class:ClientEndpointBridge
DEFAULT_ENDPOINT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/client.py	/^    DEFAULT_ENDPOINT = '{service}.{region}.amazonaws.com'$/;"	v	class:ClientEndpointBridge
DEFAULT_ENDPOINT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/client.py	/^    DEFAULT_ENDPOINT = '{service}.{region}.amazonaws.com'$/;"	v	class:ClientEndpointBridge
DEFAULT_ENDPOINT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/client.py	/^    DEFAULT_ENDPOINT = '{service}.{region}.amazonaws.com'$/;"	v	class:ClientEndpointBridge
DEFAULT_ENDPOINT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/client.py	/^    DEFAULT_ENDPOINT = '{service}.{region}.amazonaws.com'$/;"	v	class:ClientEndpointBridge
DEFAULT_ENDPOINT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/client.py	/^    DEFAULT_ENDPOINT = '{service}.{region}.amazonaws.com'$/;"	v	class:ClientEndpointBridge
DEFAULT_ENV	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/reduction.py	/^    DEFAULT_ENV = "pickle"$/;"	v
DEFAULT_ENV	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/reduction.py	/^    DEFAULT_ENV = "pickle"$/;"	v
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:HmacV1QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:SigV4QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:HmacV1QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:SigV4QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:HmacV1QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:SigV4QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:HmacV1QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:SigV4QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:HmacV1QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:SigV4QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:HmacV1QueryAuth
DEFAULT_EXPIRES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/auth.py	/^    DEFAULT_EXPIRES = 3600$/;"	v	class:SigV4QueryAuth
DEFAULT_EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    DEFAULT_EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:CachedCredentialFetcher
DEFAULT_EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    DEFAULT_EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:CachedCredentialFetcher
DEFAULT_EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    DEFAULT_EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:CachedCredentialFetcher
DEFAULT_EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    DEFAULT_EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:CachedCredentialFetcher
DEFAULT_EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    DEFAULT_EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:CachedCredentialFetcher
DEFAULT_EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    DEFAULT_EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:CachedCredentialFetcher
DEFAULT_FLAGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^DEFAULT_FLAGS = {VERSION0: 0, VERSION1: FULLCASE}$/;"	v
DEFAULT_FLAGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^DEFAULT_FLAGS = {VERSION0: 0, VERSION1: FULLCASE}$/;"	v
DEFAULT_ISOPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/parser/isoparser.py	/^DEFAULT_ISOPARSER = isoparser()$/;"	v
DEFAULT_ISOPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/parser/isoparser.py	/^DEFAULT_ISOPARSER = isoparser()$/;"	v
DEFAULT_ISOPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/parser/isoparser.py	/^DEFAULT_ISOPARSER = isoparser()$/;"	v
DEFAULT_ISOPARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/parser/isoparser.py	/^DEFAULT_ISOPARSER = isoparser()$/;"	v
DEFAULT_ISOPARSER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/parser/isoparser.py	/^DEFAULT_ISOPARSER = isoparser()$/;"	v
DEFAULT_ISOPARSER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/parser/isoparser.py	/^DEFAULT_ISOPARSER = isoparser()$/;"	v
DEFAULT_MAX_ATTEMPTS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retries/standard.py	/^DEFAULT_MAX_ATTEMPTS = 3$/;"	v
DEFAULT_MAX_ATTEMPTS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retries/standard.py	/^DEFAULT_MAX_ATTEMPTS = 3$/;"	v
DEFAULT_MAX_ATTEMPTS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retries/standard.py	/^DEFAULT_MAX_ATTEMPTS = 3$/;"	v
DEFAULT_MAX_ATTEMPTS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retries/standard.py	/^DEFAULT_MAX_ATTEMPTS = 3$/;"	v
DEFAULT_MAX_ATTEMPTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retries/standard.py	/^DEFAULT_MAX_ATTEMPTS = 3$/;"	v
DEFAULT_MAX_ATTEMPTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retries/standard.py	/^DEFAULT_MAX_ATTEMPTS = 3$/;"	v
DEFAULT_METADATA_SERVICE_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^DEFAULT_METADATA_SERVICE_TIMEOUT = 1$/;"	v
DEFAULT_METADATA_SERVICE_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^DEFAULT_METADATA_SERVICE_TIMEOUT = 1$/;"	v
DEFAULT_METADATA_SERVICE_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^DEFAULT_METADATA_SERVICE_TIMEOUT = 1$/;"	v
DEFAULT_METADATA_SERVICE_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^DEFAULT_METADATA_SERVICE_TIMEOUT = 1$/;"	v
DEFAULT_METADATA_SERVICE_TIMEOUT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^DEFAULT_METADATA_SERVICE_TIMEOUT = 1$/;"	v
DEFAULT_METADATA_SERVICE_TIMEOUT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^DEFAULT_METADATA_SERVICE_TIMEOUT = 1$/;"	v
DEFAULT_METHOD	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/serialize.py	/^    DEFAULT_METHOD = 'POST'$/;"	v	class:Serializer
DEFAULT_METHOD	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/serialize.py	/^    DEFAULT_METHOD = 'POST'$/;"	v	class:Serializer
DEFAULT_METHOD	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/serialize.py	/^    DEFAULT_METHOD = 'POST'$/;"	v	class:Serializer
DEFAULT_METHOD	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/serialize.py	/^    DEFAULT_METHOD = 'POST'$/;"	v	class:Serializer
DEFAULT_METHOD	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/serialize.py	/^    DEFAULT_METHOD = 'POST'$/;"	v	class:Serializer
DEFAULT_METHOD	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/serialize.py	/^    DEFAULT_METHOD = 'POST'$/;"	v	class:Serializer
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_METHOD_WHITELIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_METHOD_WHITELIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_MP_CONTEXT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_MP_CONTEXT = None$/;"	v
DEFAULT_MP_CONTEXT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_MP_CONTEXT = None$/;"	v
DEFAULT_N_JOBS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_N_JOBS = 1$/;"	v
DEFAULT_N_JOBS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_N_JOBS = 1$/;"	v
DEFAULT_POOLBLOCK	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_POOLBLOCK = False$/;"	v
DEFAULT_POOLBLOCK	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_POOLBLOCK = False$/;"	v
DEFAULT_POOLSIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_POOLSIZE = 10$/;"	v
DEFAULT_POOLSIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_POOLSIZE = 10$/;"	v
DEFAULT_POOL_TIMEOUT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_POOL_TIMEOUT = None$/;"	v
DEFAULT_POOL_TIMEOUT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_POOL_TIMEOUT = None$/;"	v
DEFAULT_PORTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/utils.py	/^DEFAULT_PORTS = {'http': 80, 'https': 443}$/;"	v
DEFAULT_PORTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/utils.py	/^DEFAULT_PORTS = {'http': 80, 'https': 443}$/;"	v
DEFAULT_PROTOCOL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^DEFAULT_PROTOCOL = pickle.HIGHEST_PROTOCOL$/;"	v
DEFAULT_PROTOCOL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^DEFAULT_PROTOCOL = pickle.HIGHEST_PROTOCOL$/;"	v
DEFAULT_PROXIES_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^DEFAULT_PROXIES_CONFIG_VARS = {$/;"	v
DEFAULT_PROXIES_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^DEFAULT_PROXIES_CONFIG_VARS = {$/;"	v
DEFAULT_PROXIES_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^DEFAULT_PROXIES_CONFIG_VARS = {$/;"	v
DEFAULT_PROXIES_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^DEFAULT_PROXIES_CONFIG_VARS = {$/;"	v
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_HEADERS_BLACKLIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    def DEFAULT_REDIRECT_HEADERS_BLACKLIST(cls, value):$/;"	m	class:_RetryMeta
DEFAULT_REDIRECT_LIMIT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/models.py	/^DEFAULT_REDIRECT_LIMIT = 30$/;"	v
DEFAULT_REDIRECT_LIMIT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/models.py	/^DEFAULT_REDIRECT_LIMIT = 30$/;"	v
DEFAULT_REMOVE_HEADERS_ON_REDIRECT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/retry.py	/^    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(["Authorization"])$/;"	v	class:Retry
DEFAULT_REMOVE_HEADERS_ON_REDIRECT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/retry.py	/^    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(["Authorization"])$/;"	v	class:Retry
DEFAULT_REMOVE_HEADERS_ON_REDIRECT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/retry.py	/^    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(["Authorization"])$/;"	v	class:Retry
DEFAULT_REMOVE_HEADERS_ON_REDIRECT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/retry.py	/^    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(["Authorization"])$/;"	v	class:Retry
DEFAULT_REMOVE_HEADERS_ON_REDIRECT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/retry.py	/^    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(["Authorization"])$/;"	v	class:Retry
DEFAULT_REMOVE_HEADERS_ON_REDIRECT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/retry.py	/^    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(["Authorization"])$/;"	v	class:Retry
DEFAULT_RETRIES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_RETRIES = 0$/;"	v
DEFAULT_RETRIES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests/adapters.py	/^DEFAULT_RETRIES = 0$/;"	v
DEFAULT_S3_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^DEFAULT_S3_CONFIG_VARS = {$/;"	v
DEFAULT_S3_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^DEFAULT_S3_CONFIG_VARS = {$/;"	v
DEFAULT_S3_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^DEFAULT_S3_CONFIG_VARS = {$/;"	v
DEFAULT_S3_CONFIG_VARS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^DEFAULT_S3_CONFIG_VARS = {$/;"	v
DEFAULT_S3_CONFIG_VARS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^DEFAULT_S3_CONFIG_VARS = {$/;"	v
DEFAULT_S3_CONFIG_VARS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^DEFAULT_S3_CONFIG_VARS = {$/;"	v
DEFAULT_SERIALIZERS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/serializer.py	/^DEFAULT_SERIALIZERS = {$/;"	v
DEFAULT_SERIALIZERS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/serializer.py	/^DEFAULT_SERIALIZERS = {$/;"	v
DEFAULT_SERVICE_DATA	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/regions.py	/^DEFAULT_SERVICE_DATA = {'endpoints': {}}$/;"	v
DEFAULT_SERVICE_DATA	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/regions.py	/^DEFAULT_SERVICE_DATA = {'endpoints': {}}$/;"	v
DEFAULT_SERVICE_DATA	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/regions.py	/^DEFAULT_SERVICE_DATA = {'endpoints': {}}$/;"	v
DEFAULT_SERVICE_DATA	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/regions.py	/^DEFAULT_SERVICE_DATA = {'endpoints': {}}$/;"	v
DEFAULT_SERVICE_DATA	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/regions.py	/^DEFAULT_SERVICE_DATA = {'endpoints': {}}$/;"	v
DEFAULT_SERVICE_DATA	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/regions.py	/^DEFAULT_SERVICE_DATA = {'endpoints': {}}$/;"	v
DEFAULT_SESSION	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/__init__.py	/^DEFAULT_SESSION = None$/;"	v
DEFAULT_SESSION	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/__init__.py	/^DEFAULT_SESSION = None$/;"	v
DEFAULT_SESSION	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/__init__.py	/^DEFAULT_SESSION = None$/;"	v
DEFAULT_SESSION	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/__init__.py	/^DEFAULT_SESSION = None$/;"	v
DEFAULT_SESSION	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/__init__.py	/^DEFAULT_SESSION = None$/;"	v
DEFAULT_SESSION	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/__init__.py	/^DEFAULT_SESSION = None$/;"	v
DEFAULT_SMOOTHING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/texttiling.py	/^DEFAULT_SMOOTHING = [0]$/;"	v
DEFAULT_SMOOTHING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/texttiling.py	/^DEFAULT_SMOOTHING = [0]$/;"	v
DEFAULT_THREAD_BACKEND	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_THREAD_BACKEND = 'threading'$/;"	v
DEFAULT_THREAD_BACKEND	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^DEFAULT_THREAD_BACKEND = 'threading'$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/endpoint.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/httpsession.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/endpoint.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/httpsession.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/endpoint.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/httpsession.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/endpoint.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/httpsession.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/endpoint.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/httpsession.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/endpoint.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/httpsession.py	/^DEFAULT_TIMEOUT = 60$/;"	v
DEFAULT_TIMEOUT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFAULT_TIMESTAMP_FORMAT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/serialize.py	/^DEFAULT_TIMESTAMP_FORMAT = 'iso8601'$/;"	v
DEFAULT_TIMESTAMP_FORMAT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/serialize.py	/^DEFAULT_TIMESTAMP_FORMAT = 'iso8601'$/;"	v
DEFAULT_TIMESTAMP_FORMAT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/serialize.py	/^DEFAULT_TIMESTAMP_FORMAT = 'iso8601'$/;"	v
DEFAULT_TIMESTAMP_FORMAT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/serialize.py	/^DEFAULT_TIMESTAMP_FORMAT = 'iso8601'$/;"	v
DEFAULT_TIMESTAMP_FORMAT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/serialize.py	/^DEFAULT_TIMESTAMP_FORMAT = 'iso8601'$/;"	v
DEFAULT_TIMESTAMP_FORMAT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/serialize.py	/^DEFAULT_TIMESTAMP_FORMAT = 'iso8601'$/;"	v
DEFAULT_TIMESTAMP_PARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^DEFAULT_TIMESTAMP_PARSER = parse_timestamp$/;"	v
DEFAULT_TIMESTAMP_PARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^DEFAULT_TIMESTAMP_PARSER = parse_timestamp$/;"	v
DEFAULT_TIMESTAMP_PARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^DEFAULT_TIMESTAMP_PARSER = parse_timestamp$/;"	v
DEFAULT_TIMESTAMP_PARSER	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^DEFAULT_TIMESTAMP_PARSER = parse_timestamp$/;"	v
DEFAULT_TIMESTAMP_PARSER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^DEFAULT_TIMESTAMP_PARSER = parse_timestamp$/;"	v
DEFAULT_TIMESTAMP_PARSER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^DEFAULT_TIMESTAMP_PARSER = parse_timestamp$/;"	v
DEFAULT_URI_TEMPLATE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/regions.py	/^DEFAULT_URI_TEMPLATE = '{service}.{region}.{dnsSuffix}'$/;"	v
DEFAULT_URI_TEMPLATE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/regions.py	/^DEFAULT_URI_TEMPLATE = '{service}.{region}.{dnsSuffix}'$/;"	v
DEFAULT_URI_TEMPLATE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/regions.py	/^DEFAULT_URI_TEMPLATE = '{service}.{region}.{dnsSuffix}'$/;"	v
DEFAULT_URI_TEMPLATE	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/regions.py	/^DEFAULT_URI_TEMPLATE = '{service}.{region}.{dnsSuffix}'$/;"	v
DEFAULT_URI_TEMPLATE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/regions.py	/^DEFAULT_URI_TEMPLATE = '{service}.{region}.{dnsSuffix}'$/;"	v
DEFAULT_URI_TEMPLATE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/regions.py	/^DEFAULT_URI_TEMPLATE = '{service}.{region}.{dnsSuffix}'$/;"	v
DEFAULT_URL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^    DEFAULT_URL = "https:\/\/raw.githubusercontent.com\/nltk\/nltk_data\/gh-pages\/index.xml"$/;"	v	class:Downloader
DEFAULT_URL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^    DEFAULT_URL = "https:\/\/raw.githubusercontent.com\/nltk\/nltk_data\/gh-pages\/index.xml"$/;"	v	class:Downloader
DEFAULT_VERSION	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^DEFAULT_VERSION = VERSION1$/;"	v
DEFAULT_VERSION	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/regex.py	/^DEFAULT_VERSION = VERSION0$/;"	v
DEFAULT_VERSION	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^DEFAULT_VERSION = VERSION1$/;"	v
DEFAULT_VERSION	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/regex.py	/^DEFAULT_VERSION = VERSION0$/;"	v
DELETE_GLOBAL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^DELETE_GLOBAL = opcode.opmap['DELETE_GLOBAL']$/;"	v
DELETE_GLOBAL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^DELETE_GLOBAL = opcode.opmap['DELETE_GLOBAL']$/;"	v
DEMOS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/twitter/twitter_demo.py	/^DEMOS = ALL[:]$/;"	v
DEMOS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/twitter/twitter_demo.py	/^DEMOS = ALL[:]$/;"	v
DEPRECATED_HELP_NOTICE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^DEPRECATED_HELP_NOTICE = " (DEPRECATED)"$/;"	v
DEPRECATED_HELP_NOTICE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^DEPRECATED_HELP_NOTICE = " (DEPRECATED)"$/;"	v
DEPRECATED_INVOKE_NOTICE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/core.py	/^DEPRECATED_INVOKE_NOTICE = "DeprecationWarning: The command %(name)s is deprecated."$/;"	v
DEPRECATED_INVOKE_NOTICE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/core.py	/^DEPRECATED_INVOKE_NOTICE = "DeprecationWarning: The command %(name)s is deprecated."$/;"	v
DERIVATIONALLY_RELATED_FORM	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^DERIVATIONALLY_RELATED_FORM = 25$/;"	v
DERIVATIONALLY_RELATED_FORM	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^DERIVATIONALLY_RELATED_FORM = 25$/;"	v
DETECTING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    DETECTING = 0$/;"	v	class:ProbingState
DETECTING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    DETECTING = 0$/;"	v	class:ProbingState
DIGIT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    DIGIT = 252$/;"	v	class:CharacterCategory
DIGIT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    DIGIT = 252$/;"	v	class:CharacterCategory
DIGITS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^DIGITS = frozenset(string.digits)$/;"	v
DIGITS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^DIGITS = frozenset(string.digits)$/;"	v
DISCRETE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/base.py	/^DISCRETE = 'ds'$/;"	v
DISCRETE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/base.py	/^DISCRETE = 'ds'$/;"	v
DONT_KNOW	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/jpcntx.py	/^    DONT_KNOW = -1$/;"	v	class:JapaneseContextAnalysis
DONT_KNOW	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/jpcntx.py	/^    DONT_KNOW = -1$/;"	v	class:JapaneseContextAnalysis
DOT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    DOT = "."$/;"	v	class:Tokens
DOT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    DOT = "."$/;"	v	class:Tokens
DOUBLE_DASHES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    DOUBLE_DASHES = (re.compile(r"--"), r" -- ")$/;"	v	class:NLTKWordTokenizer
DOUBLE_DASHES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    DOUBLE_DASHES = (re.compile(r" -- "), r"--")$/;"	v	class:TreebankWordDetokenizer
DOUBLE_DASHES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    DOUBLE_DASHES = (re.compile(r"--"), r" -- ")$/;"	v	class:TreebankWordTokenizer
DOUBLE_DASHES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    DOUBLE_DASHES = (re.compile(r"--"), r" -- ")$/;"	v	class:NLTKWordTokenizer
DOUBLE_DASHES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    DOUBLE_DASHES = (re.compile(r" -- "), r"--")$/;"	v	class:TreebankWordDetokenizer
DOUBLE_DASHES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    DOUBLE_DASHES = (re.compile(r"--"), r" -- ")$/;"	v	class:TreebankWordTokenizer
DRS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^    DRS = "DRS"$/;"	v	class:DrtTokens
DRS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DRS(DrtExpression, Expression):$/;"	c
DRS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^    DRS = "DRS"$/;"	v	class:DrtTokens
DRS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DRS(DrtExpression, Expression):$/;"	c
DRS_CONC	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^    DRS_CONC = "+"$/;"	v	class:DrtTokens
DRS_CONC	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^    DRS_CONC = "+"$/;"	v	class:DrtTokens
DSTOFFSET	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/twitter/api.py	/^        DSTOFFSET = STDOFFSET$/;"	v	class:LocalTimezoneOffsetWithUTC
DSTOFFSET	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/twitter/api.py	/^        DSTOFFSET = timedelta(seconds=-_time.altzone)$/;"	v	class:LocalTimezoneOffsetWithUTC
DSTOFFSET	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/twitter/api.py	/^        DSTOFFSET = STDOFFSET$/;"	v	class:LocalTimezoneOffsetWithUTC
DSTOFFSET	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/twitter/api.py	/^        DSTOFFSET = timedelta(seconds=-_time.altzone)$/;"	v	class:LocalTimezoneOffsetWithUTC
DUPLICATE_GROUP	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/test_regex.py	/^    DUPLICATE_GROUP = "duplicate group"$/;"	v	class:RegexTests
DUPLICATE_GROUP	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/test_regex.py	/^    DUPLICATE_GROUP = "duplicate group"$/;"	v	class:RegexTests
DYNAMODB_CONTEXT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/types.py	/^DYNAMODB_CONTEXT = Context($/;"	v
DYNAMODB_CONTEXT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/types.py	/^DYNAMODB_CONTEXT = Context($/;"	v
DYNAMODB_CONTEXT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/types.py	/^DYNAMODB_CONTEXT = Context($/;"	v
DYNAMODB_CONTEXT	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/types.py	/^DYNAMODB_CONTEXT = Context($/;"	v
DYNAMODB_CONTEXT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/types.py	/^DYNAMODB_CONTEXT = Context($/;"	v
DYNAMODB_CONTEXT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/types.py	/^DYNAMODB_CONTEXT = Context($/;"	v
D_NEG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    D_NEG = 7$/;"	v	class:Categories
D_NEG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    D_NEG = 7$/;"	v	class:Categories
DanglingIndicesClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/dangling_indices.py	/^class DanglingIndicesClient(NamespacedClient):$/;"	c
DanglingIndicesClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/dangling_indices.py	/^class DanglingIndicesClient(NamespacedClient):$/;"	c
DanglingIndicesClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/dangling_indices.py	/^class DanglingIndicesClient(NamespacedClient):$/;"	c
DanglingIndicesClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/dangling_indices.py	/^class DanglingIndicesClient(NamespacedClient):$/;"	c
DanishStemmer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/stem/snowball.py	/^class DanishStemmer(_ScandinavianStemmer):$/;"	c
DanishStemmer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/stem/snowball.py	/^class DanishStemmer(_ScandinavianStemmer):$/;"	c
DaskDistributedBackend	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/_dask.py	/^class DaskDistributedBackend(AutoBatchingMixin, ParallelBackendBase):$/;"	c
DaskDistributedBackend	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/_dask.py	/^class DaskDistributedBackend(AutoBatchingMixin, ParallelBackendBase):$/;"	c
DataNode	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/bcdoc/docstringparser.py	/^class DataNode(Node):$/;"	c
DataNode	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/bcdoc/docstringparser.py	/^class DataNode(Node):$/;"	c
DataNode	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/bcdoc/docstringparser.py	/^class DataNode(Node):$/;"	c
DataNode	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/bcdoc/docstringparser.py	/^class DataNode(Node):$/;"	c
DataNode	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/bcdoc/docstringparser.py	/^class DataNode(Node):$/;"	c
DataNode	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/bcdoc/docstringparser.py	/^class DataNode(Node):$/;"	c
DataNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class DataNotFoundError(BotoCoreError):$/;"	c
DataNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class DataNotFoundError(BotoCoreError):$/;"	c
DataNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class DataNotFoundError(BotoCoreError):$/;"	c
DataNotFoundError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class DataNotFoundError(BotoCoreError):$/;"	c
DataNotFoundError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class DataNotFoundError(BotoCoreError):$/;"	c
DataNotFoundError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class DataNotFoundError(BotoCoreError):$/;"	c
Data_FrameClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/data_frame.py	/^class Data_FrameClient(NamespacedClient):$/;"	c
Data_FrameClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/data_frame.py	/^class Data_FrameClient(NamespacedClient):$/;"	c
Data_FrameClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/data_frame.py	/^class Data_FrameClient(NamespacedClient):$/;"	c
Data_FrameClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/data_frame.py	/^class Data_FrameClient(NamespacedClient):$/;"	c
DateFormatError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests_aws4auth/exceptions.py	/^class DateFormatError(RequestsAws4AuthException): pass$/;"	c
DateFormatError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests_aws4auth/exceptions.py	/^class DateFormatError(RequestsAws4AuthException): pass$/;"	c
DateMismatchError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/requests_aws4auth/exceptions.py	/^class DateMismatchError(RequestsAws4AuthException): pass$/;"	c
DateMismatchError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/requests_aws4auth/exceptions.py	/^class DateMismatchError(RequestsAws4AuthException): pass$/;"	c
DateTime	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/types.py	/^class DateTime(ParamType):$/;"	c
DateTime	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/types.py	/^class DateTime(ParamType):$/;"	c
Debug	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^class Debug(object):$/;"	c
Debug	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^class Debug(object):$/;"	c
DebugObject	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/resolution.py	/^class DebugObject(object):$/;"	c
DebugObject	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/resolution.py	/^class DebugObject(object):$/;"	c
DecisionTreeClassifier	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/classify/decisiontree.py	/^class DecisionTreeClassifier(ClassifierI):$/;"	c
DecisionTreeClassifier	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/classifiers.py	/^class DecisionTreeClassifier(NLTKClassifier):$/;"	c
DecisionTreeClassifier	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/classify/decisiontree.py	/^class DecisionTreeClassifier(ClassifierI):$/;"	c
DecisionTreeClassifier	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/classifiers.py	/^class DecisionTreeClassifier(NLTKClassifier):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DecodeUtils	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class DecodeUtils(object):$/;"	c
DecodeUtils	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class DecodeUtils(object):$/;"	c
DecodeUtils	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class DecodeUtils(object):$/;"	c
DecodeUtils	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class DecodeUtils(object):$/;"	c
DecodeUtils	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class DecodeUtils(object):$/;"	c
DecodeUtils	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class DecodeUtils(object):$/;"	c
DefaultBackend	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_parallel.py	/^DefaultBackend = BACKENDS[DEFAULT_BACKEND]$/;"	v
DefaultBackend	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_parallel.py	/^DefaultBackend = BACKENDS[DEFAULT_BACKEND]$/;"	v
DefaultBoundary	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class DefaultBoundary(ZeroWidthBase):$/;"	c
DefaultBoundary	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class DefaultBoundary(ZeroWidthBase):$/;"	c
DefaultEndOfWord	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class DefaultEndOfWord(ZeroWidthBase):$/;"	c
DefaultEndOfWord	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class DefaultEndOfWord(ZeroWidthBase):$/;"	c
DefaultRuleSet	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/chart.py	/^DefaultRuleSet = ($/;"	v
DefaultRuleSet	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/chart.py	/^DefaultRuleSet = ($/;"	v
DefaultStartOfWord	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class DefaultStartOfWord(ZeroWidthBase):$/;"	c
DefaultStartOfWord	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class DefaultStartOfWord(ZeroWidthBase):$/;"	c
DefaultTagger	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/sequential.py	/^class DefaultTagger(SequentialBackoffTagger):$/;"	c
DefaultTagger	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/sequential.py	/^class DefaultTagger(SequentialBackoffTagger):$/;"	c
DeferQueue	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DeferQueue(object):$/;"	c
DeferQueue	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DeferQueue(object):$/;"	c
DeferQueue	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DeferQueue(object):$/;"	c
DeferQueue	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DeferQueue(object):$/;"	c
DeferQueue	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DeferQueue(object):$/;"	c
DeferQueue	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DeferQueue(object):$/;"	c
DeferredOpenFile	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/utils.py	/^class DeferredOpenFile(object):$/;"	c
DeferredOpenFile	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/utils.py	/^class DeferredOpenFile(object):$/;"	c
DeferredOpenFile	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/utils.py	/^class DeferredOpenFile(object):$/;"	c
DeferredOpenFile	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/utils.py	/^class DeferredOpenFile(object):$/;"	c
DeferredOpenFile	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/utils.py	/^class DeferredOpenFile(object):$/;"	c
DeferredOpenFile	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/utils.py	/^class DeferredOpenFile(object):$/;"	c
DeferredRefreshableCredentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class DeferredRefreshableCredentials(RefreshableCredentials):$/;"	c
DeferredRefreshableCredentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class DeferredRefreshableCredentials(RefreshableCredentials):$/;"	c
DeferredRefreshableCredentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class DeferredRefreshableCredentials(RefreshableCredentials):$/;"	c
DeferredRefreshableCredentials	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class DeferredRefreshableCredentials(RefreshableCredentials):$/;"	c
DeferredRefreshableCredentials	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class DeferredRefreshableCredentials(RefreshableCredentials):$/;"	c
DeferredRefreshableCredentials	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class DeferredRefreshableCredentials(RefreshableCredentials):$/;"	c
DefinitionWithParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/resources/model.py	/^class DefinitionWithParams(object):$/;"	c
DefinitionWithParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/resources/model.py	/^class DefinitionWithParams(object):$/;"	c
DefinitionWithParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/resources/model.py	/^class DefinitionWithParams(object):$/;"	c
DefinitionWithParams	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/resources/model.py	/^class DefinitionWithParams(object):$/;"	c
DefinitionWithParams	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/resources/model.py	/^class DefinitionWithParams(object):$/;"	c
DefinitionWithParams	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/resources/model.py	/^class DefinitionWithParams(object):$/;"	c
DeflateDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DeflateDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DeflateDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DeflateDecoder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DeflateDecoder	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DeflateDecoder	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DeleteObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/delete.py	/^class DeleteObjectTask(Task):$/;"	c
DeleteObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/delete.py	/^class DeleteObjectTask(Task):$/;"	c
DeleteObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/delete.py	/^class DeleteObjectTask(Task):$/;"	c
DeleteObjectTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/delete.py	/^class DeleteObjectTask(Task):$/;"	c
DeleteObjectTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/delete.py	/^class DeleteObjectTask(Task):$/;"	c
DeleteObjectTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/delete.py	/^class DeleteObjectTask(Task):$/;"	c
DeleteSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/delete.py	/^class DeleteSubmissionTask(SubmissionTask):$/;"	c
DeleteSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/delete.py	/^class DeleteSubmissionTask(SubmissionTask):$/;"	c
DeleteSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/delete.py	/^class DeleteSubmissionTask(SubmissionTask):$/;"	c
DeleteSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/delete.py	/^class DeleteSubmissionTask(SubmissionTask):$/;"	c
DeleteSubmissionTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/delete.py	/^class DeleteSubmissionTask(SubmissionTask):$/;"	c
DeleteSubmissionTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/delete.py	/^class DeleteSubmissionTask(SubmissionTask):$/;"	c
DelimitedFormat	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/formats.py	/^class DelimitedFormat(BaseFormat):$/;"	c
DelimitedFormat	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/formats.py	/^class DelimitedFormat(BaseFormat):$/;"	c
DemoScorer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/nonprojectivedependencyparser.py	/^class DemoScorer(DependencyScorerI):$/;"	c
DemoScorer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/nonprojectivedependencyparser.py	/^class DemoScorer(DependencyScorerI):$/;"	c
Dendrogram	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/cluster/util.py	/^class Dendrogram(object):$/;"	c
Dendrogram	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/cluster/util.py	/^class Dendrogram(object):$/;"	c
DenormalizedStructureBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/model.py	/^class DenormalizedStructureBuilder(object):$/;"	c
DenormalizedStructureBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/model.py	/^class DenormalizedStructureBuilder(object):$/;"	c
DenormalizedStructureBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/model.py	/^class DenormalizedStructureBuilder(object):$/;"	c
DenormalizedStructureBuilder	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/model.py	/^class DenormalizedStructureBuilder(object):$/;"	c
DenormalizedStructureBuilder	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/model.py	/^class DenormalizedStructureBuilder(object):$/;"	c
DenormalizedStructureBuilder	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/model.py	/^class DenormalizedStructureBuilder(object):$/;"	c
DependencyCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/dependency.py	/^class DependencyCorpusReader(SyntaxCorpusReader):$/;"	c
DependencyCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/dependency.py	/^class DependencyCorpusReader(SyntaxCorpusReader):$/;"	c
DependencyCorpusView	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/dependency.py	/^class DependencyCorpusView(StreamBackedCorpusView):$/;"	c
DependencyCorpusView	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/dependency.py	/^class DependencyCorpusView(StreamBackedCorpusView):$/;"	c
DependencyEvaluator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/evaluate.py	/^class DependencyEvaluator(object):$/;"	c
DependencyEvaluator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/evaluate.py	/^class DependencyEvaluator(object):$/;"	c
DependencyGrammar	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/grammar.py	/^class DependencyGrammar(object):$/;"	c
DependencyGrammar	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/grammar.py	/^class DependencyGrammar(object):$/;"	c
DependencyGraph	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/dependencygraph.py	/^class DependencyGraph(object):$/;"	c
DependencyGraph	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/dependencygraph.py	/^class DependencyGraph(object):$/;"	c
DependencyGraphError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/dependencygraph.py	/^class DependencyGraphError(Exception):$/;"	c
DependencyGraphError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/dependencygraph.py	/^class DependencyGraphError(Exception):$/;"	c
DependencyProduction	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/grammar.py	/^class DependencyProduction(Production):$/;"	c
DependencyProduction	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/grammar.py	/^class DependencyProduction(Production):$/;"	c
DependencyScorerI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/nonprojectivedependencyparser.py	/^class DependencyScorerI(object):$/;"	c
DependencyScorerI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/nonprojectivedependencyparser.py	/^class DependencyScorerI(object):$/;"	c
DependencySpan	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/projectivedependencyparser.py	/^class DependencySpan(object):$/;"	c
DependencySpan	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/projectivedependencyparser.py	/^class DependencySpan(object):$/;"	c
DependencyWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
DependencyWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
DependencyWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
DependencyWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
DependencyWarning	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
DependencyWarning	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
Deprecated	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/internals.py	/^class Deprecated(object):$/;"	c
Deprecated	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/internals.py	/^class Deprecated(object):$/;"	c
DeprecatedServiceDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/handlers.py	/^class DeprecatedServiceDocumenter(object):$/;"	c
DeprecatedServiceDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/handlers.py	/^class DeprecatedServiceDocumenter(object):$/;"	c
DeprecatedServiceDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/handlers.py	/^class DeprecatedServiceDocumenter(object):$/;"	c
DeprecatedServiceDocumenter	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/handlers.py	/^class DeprecatedServiceDocumenter(object):$/;"	c
DeprecatedServiceDocumenter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/handlers.py	/^class DeprecatedServiceDocumenter(object):$/;"	c
DeprecatedServiceDocumenter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/handlers.py	/^class DeprecatedServiceDocumenter(object):$/;"	c
DeprecatedTzFormatWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/tz/__init__.py	/^class DeprecatedTzFormatWarning(Warning):$/;"	c
DeprecatedTzFormatWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/tz/__init__.py	/^class DeprecatedTzFormatWarning(Warning):$/;"	c
DeprecatedTzFormatWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/tz/__init__.py	/^class DeprecatedTzFormatWarning(Warning):$/;"	c
DeprecatedTzFormatWarning	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/tz/__init__.py	/^class DeprecatedTzFormatWarning(Warning):$/;"	c
DeprecatedTzFormatWarning	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/tz/__init__.py	/^class DeprecatedTzFormatWarning(Warning):$/;"	c
DeprecatedTzFormatWarning	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/tz/__init__.py	/^class DeprecatedTzFormatWarning(Warning):$/;"	c
DeprecationClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/deprecation.py	/^class DeprecationClient(NamespacedClient):$/;"	c
DeprecationClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/deprecation.py	/^class DeprecationClient(NamespacedClient):$/;"	c
DeprecationClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/deprecation.py	/^class DeprecationClient(NamespacedClient):$/;"	c
DeprecationClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/deprecation.py	/^class DeprecationClient(NamespacedClient):$/;"	c
DeprecationError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/exceptions.py	/^class DeprecationError(TextBlobError):$/;"	c
DeprecationError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/exceptions.py	/^class DeprecationError(TextBlobError):$/;"	c
Deserializer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/serializer.py	/^class Deserializer(object):$/;"	c
Deserializer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/serializer.py	/^class Deserializer(object):$/;"	c
DictReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/unicodecsv/__init__.py	/^class DictReader(csv.DictReader):$/;"	c
DictReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/unicodecsv/__init__.py	/^class DictReader(csv.DictReader):$/;"	c
DictWriter	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/unicodecsv/__init__.py	/^class DictWriter(csv.DictWriter):$/;"	c
DictWriter	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/unicodecsv/__init__.py	/^class DictWriter(csv.DictWriter):$/;"	c
DictionaryConditionalProbDist	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class DictionaryConditionalProbDist(ConditionalProbDistI):$/;"	c
DictionaryConditionalProbDist	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class DictionaryConditionalProbDist(ConditionalProbDistI):$/;"	c
DictionaryProbDist	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class DictionaryProbDist(ProbDistI):$/;"	c
DictionaryProbDist	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class DictionaryProbDist(ProbDistI):$/;"	c
DirectedBinaryCombinator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/combinator.py	/^class DirectedBinaryCombinator(metaclass=ABCMeta):$/;"	c
DirectedBinaryCombinator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/combinator.py	/^class DirectedBinaryCombinator(metaclass=ABCMeta):$/;"	c
Direction	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/ccg/api.py	/^class Direction(object):$/;"	c
Direction	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/ccg/api.py	/^class Direction(object):$/;"	c
DisableOnWriteError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/utils.py	/^class DisableOnWriteError(ObjectWrapper):$/;"	c
DisableOnWriteError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/utils.py	/^class DisableOnWriteError(ObjectWrapper):$/;"	c
Disagreement	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Disagreement(self, label_freqs):$/;"	m	class:AnnotationTask
Disagreement	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Disagreement(self, label_freqs):$/;"	m	class:AnnotationTask
DiscordIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/contrib/discord.py	/^class DiscordIO(MonoWorker):$/;"	c
DiscordIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/contrib/discord.py	/^class DiscordIO(MonoWorker):$/;"	c
DiscourseTester	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/discourse.py	/^class DiscourseTester(object):$/;"	c
DiscourseTester	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/discourse.py	/^class DiscourseTester(object):$/;"	c
Do_Kw	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Do_Kw(self, max_distance=1.0):$/;"	m	class:AnnotationTask
Do_Kw	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Do_Kw(self, max_distance=1.0):$/;"	m	class:AnnotationTask
Do_Kw_pairwise	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Do_Kw_pairwise(self, cA, cB, max_distance=1.0):$/;"	m	class:AnnotationTask
Do_Kw_pairwise	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/metrics/agreement.py	/^    def Do_Kw_pairwise(self, cA, cB, max_distance=1.0):$/;"	m	class:AnnotationTask
DocStringParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/bcdoc/docstringparser.py	/^class DocStringParser(six.moves.html_parser.HTMLParser):$/;"	c
DocStringParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/bcdoc/docstringparser.py	/^class DocStringParser(six.moves.html_parser.HTMLParser):$/;"	c
DocStringParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/bcdoc/docstringparser.py	/^class DocStringParser(six.moves.html_parser.HTMLParser):$/;"	c
DocStringParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/bcdoc/docstringparser.py	/^class DocStringParser(six.moves.html_parser.HTMLParser):$/;"	c
DocStringParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/bcdoc/docstringparser.py	/^class DocStringParser(six.moves.html_parser.HTMLParser):$/;"	c
DocStringParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/bcdoc/docstringparser.py	/^class DocStringParser(six.moves.html_parser.HTMLParser):$/;"	c
DocumentModifiedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/utils.py	/^class DocumentModifiedShape(object):$/;"	c
DocumentModifiedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/utils.py	/^class DocumentModifiedShape(object):$/;"	c
DocumentModifiedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/utils.py	/^class DocumentModifiedShape(object):$/;"	c
DocumentModifiedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/utils.py	/^class DocumentModifiedShape(object):$/;"	c
DocumentModifiedShape	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/utils.py	/^class DocumentModifiedShape(object):$/;"	c
DocumentModifiedShape	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/utils.py	/^class DocumentModifiedShape(object):$/;"	c
DocumentStructure	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/bcdoc/restdoc.py	/^class DocumentStructure(ReSTDocument):$/;"	c
DocumentStructure	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/bcdoc/restdoc.py	/^class DocumentStructure(ReSTDocument):$/;"	c
DocumentStructure	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/bcdoc/restdoc.py	/^class DocumentStructure(ReSTDocument):$/;"	c
DocumentStructure	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/bcdoc/restdoc.py	/^class DocumentStructure(ReSTDocument):$/;"	c
DocumentStructure	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/bcdoc/restdoc.py	/^class DocumentStructure(ReSTDocument):$/;"	c
DocumentStructure	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/bcdoc/restdoc.py	/^class DocumentStructure(ReSTDocument):$/;"	c
DocumentedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/utils.py	/^class DocumentedShape (_DocumentedShape):$/;"	c
DocumentedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/utils.py	/^class DocumentedShape (_DocumentedShape):$/;"	c
DocumentedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/utils.py	/^class DocumentedShape (_DocumentedShape):$/;"	c
DocumentedShape	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/utils.py	/^class DocumentedShape (_DocumentedShape):$/;"	c
DocumentedShape	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/utils.py	/^class DocumentedShape (_DocumentedShape):$/;"	c
DocumentedShape	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/utils.py	/^class DocumentedShape (_DocumentedShape):$/;"	c
DoneAndNotDoneFutures	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    DoneAndNotDoneFutures = collections.namedtuple($/;"	v
DoneAndNotDoneFutures	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    DoneAndNotDoneFutures = collections.namedtuple($/;"	v
DownloadChunkIterator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadChunkIterator(object):$/;"	c
DownloadChunkIterator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadChunkIterator(object):$/;"	c
DownloadChunkIterator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadChunkIterator(object):$/;"	c
DownloadChunkIterator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadChunkIterator(object):$/;"	c
DownloadChunkIterator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadChunkIterator(object):$/;"	c
DownloadChunkIterator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadChunkIterator(object):$/;"	c
DownloadFileRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/processpool.py	/^DownloadFileRequest = collections.namedtuple($/;"	v
DownloadFileRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/processpool.py	/^DownloadFileRequest = collections.namedtuple($/;"	v
DownloadFileRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/processpool.py	/^DownloadFileRequest = collections.namedtuple($/;"	v
DownloadFileRequest	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/processpool.py	/^DownloadFileRequest = collections.namedtuple($/;"	v
DownloadFileRequest	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/processpool.py	/^DownloadFileRequest = collections.namedtuple($/;"	v
DownloadFileRequest	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/processpool.py	/^DownloadFileRequest = collections.namedtuple($/;"	v
DownloadFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadFilenameOutputManager(DownloadOutputManager):$/;"	c
DownloadFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadFilenameOutputManager(DownloadOutputManager):$/;"	c
DownloadFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadFilenameOutputManager(DownloadOutputManager):$/;"	c
DownloadFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadFilenameOutputManager(DownloadOutputManager):$/;"	c
DownloadFilenameOutputManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadFilenameOutputManager(DownloadOutputManager):$/;"	c
DownloadFilenameOutputManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadFilenameOutputManager(DownloadOutputManager):$/;"	c
DownloadNonSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadNonSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadNonSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadNonSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadNonSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadNonSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadNonSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadNonSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadNonSeekableOutputManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadNonSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadNonSeekableOutputManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadNonSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadOutputManager(object):$/;"	c
DownloadOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadOutputManager(object):$/;"	c
DownloadOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadOutputManager(object):$/;"	c
DownloadOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadOutputManager(object):$/;"	c
DownloadOutputManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadOutputManager(object):$/;"	c
DownloadOutputManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadOutputManager(object):$/;"	c
DownloadSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadSeekableOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadSeekableOutputManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadSeekableOutputManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadSeekableOutputManager(DownloadOutputManager):$/;"	c
DownloadSpecialFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadSpecialFilenameOutputManager(DownloadNonSeekableOutputManager):$/;"	c
DownloadSpecialFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadSpecialFilenameOutputManager(DownloadNonSeekableOutputManager):$/;"	c
DownloadSpecialFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadSpecialFilenameOutputManager(DownloadNonSeekableOutputManager):$/;"	c
DownloadSpecialFilenameOutputManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadSpecialFilenameOutputManager(DownloadNonSeekableOutputManager):$/;"	c
DownloadSpecialFilenameOutputManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadSpecialFilenameOutputManager(DownloadNonSeekableOutputManager):$/;"	c
DownloadSpecialFilenameOutputManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadSpecialFilenameOutputManager(DownloadNonSeekableOutputManager):$/;"	c
DownloadSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/download.py	/^class DownloadSubmissionTask(SubmissionTask):$/;"	c
DownloadSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/download.py	/^class DownloadSubmissionTask(SubmissionTask):$/;"	c
DownloadSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/download.py	/^class DownloadSubmissionTask(SubmissionTask):$/;"	c
DownloadSubmissionTask	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/download.py	/^class DownloadSubmissionTask(SubmissionTask):$/;"	c
DownloadSubmissionTask	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadSubmissionTask(SubmissionTask):$/;"	c
DownloadSubmissionTask	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/download.py	/^class DownloadSubmissionTask(SubmissionTask):$/;"	c
Downloader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^class Downloader(object):$/;"	c
Downloader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^class Downloader(object):$/;"	c
DownloaderGUI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^class DownloaderGUI(object):$/;"	c
DownloaderGUI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^class DownloaderGUI(object):$/;"	c
DownloaderMessage	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^class DownloaderMessage(object):$/;"	c
DownloaderMessage	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^class DownloaderMessage(object):$/;"	c
DownloaderShell	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^class DownloaderShell(object):$/;"	c
DownloaderShell	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^class DownloaderShell(object):$/;"	c
DrsDrawer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrsDrawer(object):$/;"	c
DrsDrawer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrsDrawer(object):$/;"	c
DrsWidget	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt_glue_demo.py	/^class DrsWidget(object):$/;"	c
DrsWidget	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt_glue_demo.py	/^class DrsWidget(object):$/;"	c
DrtAbstractVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtAbstractVariableExpression(DrtExpression, AbstractVariableExpression):$/;"	c
DrtAbstractVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtAbstractVariableExpression(DrtExpression, AbstractVariableExpression):$/;"	c
DrtApplicationExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtApplicationExpression(DrtExpression, ApplicationExpression):$/;"	c
DrtApplicationExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtApplicationExpression(DrtExpression, ApplicationExpression):$/;"	c
DrtBinaryExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtBinaryExpression(DrtExpression, BinaryExpression):$/;"	c
DrtBinaryExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtBinaryExpression(DrtExpression, BinaryExpression):$/;"	c
DrtBooleanExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtBooleanExpression(DrtBinaryExpression, BooleanExpression):$/;"	c
DrtBooleanExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtBooleanExpression(DrtBinaryExpression, BooleanExpression):$/;"	c
DrtConcatenation	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtConcatenation(DrtBooleanExpression):$/;"	c
DrtConcatenation	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtConcatenation(DrtBooleanExpression):$/;"	c
DrtConstantExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtConstantExpression(DrtAbstractVariableExpression, ConstantExpression):$/;"	c
DrtConstantExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtConstantExpression(DrtAbstractVariableExpression, ConstantExpression):$/;"	c
DrtEqualityExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtEqualityExpression(DrtBinaryExpression, EqualityExpression):$/;"	c
DrtEqualityExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtEqualityExpression(DrtBinaryExpression, EqualityExpression):$/;"	c
DrtEventVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^):$/;"	c
DrtEventVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^):$/;"	c
DrtExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtExpression(object):$/;"	c
DrtExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtExpression(object):$/;"	c
DrtFunctionVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^):$/;"	c
DrtFunctionVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^):$/;"	c
DrtGlue	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/glue.py	/^class DrtGlue(Glue):$/;"	c
DrtGlue	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/glue.py	/^class DrtGlue(Glue):$/;"	c
DrtGlueDemo	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt_glue_demo.py	/^class DrtGlueDemo(object):$/;"	c
DrtGlueDemo	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt_glue_demo.py	/^class DrtGlueDemo(object):$/;"	c
DrtGlueDict	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/glue.py	/^class DrtGlueDict(GlueDict):$/;"	c
DrtGlueDict	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/glue.py	/^class DrtGlueDict(GlueDict):$/;"	c
DrtGlueFormula	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/glue.py	/^class DrtGlueFormula(GlueFormula):$/;"	c
DrtGlueFormula	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/glue.py	/^class DrtGlueFormula(GlueFormula):$/;"	c
DrtGlueReadingCommand	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/discourse.py	/^class DrtGlueReadingCommand(ReadingCommand):$/;"	c
DrtGlueReadingCommand	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/discourse.py	/^class DrtGlueReadingCommand(ReadingCommand):$/;"	c
DrtIndividualVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^):$/;"	c
DrtIndividualVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^):$/;"	c
DrtLambdaExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtLambdaExpression(DrtExpression, LambdaExpression):$/;"	c
DrtLambdaExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtLambdaExpression(DrtExpression, LambdaExpression):$/;"	c
DrtNegatedExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtNegatedExpression(DrtExpression, NegatedExpression):$/;"	c
DrtNegatedExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtNegatedExpression(DrtExpression, NegatedExpression):$/;"	c
DrtOrExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtOrExpression(DrtBooleanExpression, OrExpression):$/;"	c
DrtOrExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtOrExpression(DrtBooleanExpression, OrExpression):$/;"	c
DrtParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtParser(LogicParser):$/;"	c
DrtParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtParser(LogicParser):$/;"	c
DrtProposition	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtProposition(DrtExpression, Expression):$/;"	c
DrtProposition	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtProposition(DrtExpression, Expression):$/;"	c
DrtTokens	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtTokens(Tokens):$/;"	c
DrtTokens	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^class DrtTokens(Tokens):$/;"	c
DrtVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/drt.py	/^def DrtVariableExpression(variable):$/;"	f
DrtVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/drt.py	/^def DrtVariableExpression(variable):$/;"	f
DummyConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DummyConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DummyConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DummyConnection	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DummyConnection	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DummyConnection	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DummyConnectionPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class DummyConnectionPool(ConnectionPool):$/;"	c
DummyConnectionPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class DummyConnectionPool(ConnectionPool):$/;"	c
DummyStoreBackend	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/test/test_memory.py	/^class DummyStoreBackend(StoreBackendBase):$/;"	c
DummyStoreBackend	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/test/test_memory.py	/^class DummyStoreBackend(StoreBackendBase):$/;"	c
DummyTqdmFile	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/tqdm/contrib/__init__.py	/^class DummyTqdmFile(ObjectWrapper):$/;"	c
DummyTqdmFile	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/tqdm/contrib/__init__.py	/^class DummyTqdmFile(ObjectWrapper):$/;"	c
DupFd	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/_posix_reduction.py	/^def DupFd(fd):$/;"	f
DupFd	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/popen_loky_posix.py	/^        DupFd = _DupFd$/;"	v	class:Popen
DupFd	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/_posix_reduction.py	/^def DupFd(fd):$/;"	f
DupFd	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/popen_loky_posix.py	/^        DupFd = _DupFd$/;"	v	class:Popen
DupHandle	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/_win_reduction.py	/^    class DupHandle(object):$/;"	c
DupHandle	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/_win_reduction.py	/^    class DupHandle(object):$/;"	c
DuplicateHeader	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class DuplicateHeader(ParserError):$/;"	c
DuplicateHeader	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class DuplicateHeader(ParserError):$/;"	c
DuplicateHeader	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class DuplicateHeader(ParserError):$/;"	c
DuplicateHeader	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class DuplicateHeader(ParserError):$/;"	c
DuplicateHeader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class DuplicateHeader(ParserError):$/;"	c
DuplicateHeader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class DuplicateHeader(ParserError):$/;"	c
DutchStemmer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/stem/snowball.py	/^class DutchStemmer(_StandardStemmer):$/;"	c
DutchStemmer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/stem/snowball.py	/^class DutchStemmer(_StandardStemmer):$/;"	c
DynamoDBHighLevelResource	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/transform.py	/^class DynamoDBHighLevelResource(object):$/;"	c
DynamoDBHighLevelResource	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/transform.py	/^class DynamoDBHighLevelResource(object):$/;"	c
DynamoDBHighLevelResource	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/transform.py	/^class DynamoDBHighLevelResource(object):$/;"	c
DynamoDBHighLevelResource	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/transform.py	/^class DynamoDBHighLevelResource(object):$/;"	c
DynamoDBHighLevelResource	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/transform.py	/^class DynamoDBHighLevelResource(object):$/;"	c
DynamoDBHighLevelResource	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/transform.py	/^class DynamoDBHighLevelResource(object):$/;"	c
DynamoDBNeedsConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/exceptions.py	/^class DynamoDBNeedsConditionError(Boto3Error):$/;"	c
DynamoDBNeedsConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/exceptions.py	/^class DynamoDBNeedsConditionError(Boto3Error):$/;"	c
DynamoDBNeedsConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/exceptions.py	/^class DynamoDBNeedsConditionError(Boto3Error):$/;"	c
DynamoDBNeedsConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/exceptions.py	/^class DynamoDBNeedsConditionError(Boto3Error):$/;"	c
DynamoDBNeedsConditionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/exceptions.py	/^class DynamoDBNeedsConditionError(Boto3Error):$/;"	c
DynamoDBNeedsConditionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/exceptions.py	/^class DynamoDBNeedsConditionError(Boto3Error):$/;"	c
DynamoDBNeedsKeyConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/exceptions.py	/^class DynamoDBNeedsKeyConditionError(Boto3Error):$/;"	c
DynamoDBNeedsKeyConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/exceptions.py	/^class DynamoDBNeedsKeyConditionError(Boto3Error):$/;"	c
DynamoDBNeedsKeyConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/exceptions.py	/^class DynamoDBNeedsKeyConditionError(Boto3Error):$/;"	c
DynamoDBNeedsKeyConditionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/exceptions.py	/^class DynamoDBNeedsKeyConditionError(Boto3Error):$/;"	c
DynamoDBNeedsKeyConditionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/exceptions.py	/^class DynamoDBNeedsKeyConditionError(Boto3Error):$/;"	c
DynamoDBNeedsKeyConditionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/exceptions.py	/^class DynamoDBNeedsKeyConditionError(Boto3Error):$/;"	c
DynamoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/exceptions.py	/^class DynamoDBOperationNotSupportedError(Boto3Error):$/;"	c
DynamoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/exceptions.py	/^class DynamoDBOperationNotSupportedError(Boto3Error):$/;"	c
DynamoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/exceptions.py	/^class DynamoDBOperationNotSupportedError(Boto3Error):$/;"	c
DynamoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/exceptions.py	/^class DynamoDBOperationNotSupportedError(Boto3Error):$/;"	c
DynamoDBOperationNotSupportedError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/exceptions.py	/^class DynamoDBOperationNotSupportedError(Boto3Error):$/;"	c
DynamoDBOperationNotSupportedError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/exceptions.py	/^class DynamoDBOperationNotSupportedError(Boto3Error):$/;"	c
DynanmoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/exceptions.py	/^DynanmoDBOperationNotSupportedError = DynamoDBOperationNotSupportedError$/;"	v
DynanmoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/exceptions.py	/^DynanmoDBOperationNotSupportedError = DynamoDBOperationNotSupportedError$/;"	v
DynanmoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/exceptions.py	/^DynanmoDBOperationNotSupportedError = DynamoDBOperationNotSupportedError$/;"	v
DynanmoDBOperationNotSupportedError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/exceptions.py	/^DynanmoDBOperationNotSupportedError = DynamoDBOperationNotSupportedError$/;"	v
DynanmoDBOperationNotSupportedError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/exceptions.py	/^DynanmoDBOperationNotSupportedError = DynamoDBOperationNotSupportedError$/;"	v
DynanmoDBOperationNotSupportedError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/exceptions.py	/^DynanmoDBOperationNotSupportedError = DynamoDBOperationNotSupportedError$/;"	v
EARLEY_FEATURE_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^EARLEY_FEATURE_STRATEGY = [$/;"	v
EARLEY_FEATURE_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^EARLEY_FEATURE_STRATEGY = [$/;"	v
EARLEY_STRATEGY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^EARLEY_STRATEGY = [$/;"	v
EARLEY_STRATEGY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^EARLEY_STRATEGY = [$/;"	v
EASTER_JULIAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/easter.py	/^EASTER_JULIAN = 1$/;"	v
EASTER_JULIAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/easter.py	/^EASTER_JULIAN = 1$/;"	v
EASTER_JULIAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/easter.py	/^EASTER_JULIAN = 1$/;"	v
EASTER_JULIAN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/easter.py	/^EASTER_JULIAN = 1$/;"	v
EASTER_JULIAN	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/easter.py	/^EASTER_JULIAN = 1$/;"	v
EASTER_JULIAN	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/easter.py	/^EASTER_JULIAN = 1$/;"	v
EASTER_ORTHODOX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/easter.py	/^EASTER_ORTHODOX = 2$/;"	v
EASTER_ORTHODOX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/easter.py	/^EASTER_ORTHODOX = 2$/;"	v
EASTER_ORTHODOX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/easter.py	/^EASTER_ORTHODOX = 2$/;"	v
EASTER_ORTHODOX	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/easter.py	/^EASTER_ORTHODOX = 2$/;"	v
EASTER_ORTHODOX	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/easter.py	/^EASTER_ORTHODOX = 2$/;"	v
EASTER_ORTHODOX	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/easter.py	/^EASTER_ORTHODOX = 2$/;"	v
EASTER_WESTERN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/easter.py	/^EASTER_WESTERN = 3$/;"	v
EASTER_WESTERN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/easter.py	/^EASTER_WESTERN = 3$/;"	v
EASTER_WESTERN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/easter.py	/^EASTER_WESTERN = 3$/;"	v
EASTER_WESTERN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/easter.py	/^EASTER_WESTERN = 3$/;"	v
EASTER_WESTERN	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/easter.py	/^EASTER_WESTERN = 3$/;"	v
EASTER_WESTERN	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/easter.py	/^EASTER_WESTERN = 3$/;"	v
EC2QueryParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class EC2QueryParser(QueryParser):$/;"	c
EC2QueryParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class EC2QueryParser(QueryParser):$/;"	c
EC2QueryParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class EC2QueryParser(QueryParser):$/;"	c
EC2QueryParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class EC2QueryParser(QueryParser):$/;"	c
EC2QueryParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class EC2QueryParser(QueryParser):$/;"	c
EC2QueryParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class EC2QueryParser(QueryParser):$/;"	c
EC2Serializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/serialize.py	/^class EC2Serializer(QuerySerializer):$/;"	c
EC2Serializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/serialize.py	/^class EC2Serializer(QuerySerializer):$/;"	c
EC2Serializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/serialize.py	/^class EC2Serializer(QuerySerializer):$/;"	c
EC2Serializer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/serialize.py	/^class EC2Serializer(QuerySerializer):$/;"	c
EC2Serializer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/serialize.py	/^class EC2Serializer(QuerySerializer):$/;"	c
EC2Serializer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/serialize.py	/^class EC2Serializer(QuerySerializer):$/;"	c
ELEProbDist	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/probability.py	/^class ELEProbDist(LidstoneProbDist):$/;"	c
ELEProbDist	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/probability.py	/^class ELEProbDist(LidstoneProbDist):$/;"	c
EMClusterer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/cluster/em.py	/^class EMClusterer(VectorSpaceClusterer):$/;"	c
EMClusterer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/cluster/em.py	/^class EMClusterer(VectorSpaceClusterer):$/;"	c
EMOTICONS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^EMOTICONS = { # (facial expression, sentiment)-keys$/;"	v
EMOTICONS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^EMOTICONS = { # (facial expression, sentiment)-keys$/;"	v
EMOTICON_RE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/casual.py	/^EMOTICON_RE = regex.compile(EMOTICONS, regex.VERBOSE | regex.I | regex.UNICODE)$/;"	v
EMOTICON_RE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/casual.py	/^EMOTICON_RE = regex.compile(EMOTICONS, regex.VERBOSE | regex.I | regex.UNICODE)$/;"	v
EMPTY_BRACKETS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^EMPTY_BRACKETS = re.compile(r"\\s*\\(\\s*\\(")$/;"	v
EMPTY_BRACKETS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/bracket_parse.py	/^EMPTY_BRACKETS = re.compile(r"\\s*\\(\\s*\\(")$/;"	v
EMPTY_SHA256_HASH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/auth.py	/^EMPTY_SHA256_HASH = ($/;"	v
EMPTY_SHA256_HASH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/auth.py	/^EMPTY_SHA256_HASH = ($/;"	v
EMPTY_SHA256_HASH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/auth.py	/^EMPTY_SHA256_HASH = ($/;"	v
EMPTY_SHA256_HASH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/auth.py	/^EMPTY_SHA256_HASH = ($/;"	v
EMPTY_SHA256_HASH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/auth.py	/^EMPTY_SHA256_HASH = ($/;"	v
EMPTY_SHA256_HASH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/auth.py	/^EMPTY_SHA256_HASH = ($/;"	v
ENCODINGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/udhr.py	/^    ENCODINGS = [$/;"	v	class:UdhrCorpusReader
ENCODINGS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/test/unit/test_seekable_unicode_stream_reader.py	/^ENCODINGS = ['ascii', 'latin1', 'greek', 'hebrew', 'utf-16', 'utf-8']$/;"	v
ENCODINGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/udhr.py	/^    ENCODINGS = [$/;"	v	class:UdhrCorpusReader
ENCODINGS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/test/unit/test_seekable_unicode_stream_reader.py	/^ENCODINGS = ['ascii', 'latin1', 'greek', 'hebrew', 'utf-16', 'utf-8']$/;"	v
END	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tag/perceptron.py	/^    END = ["-END-", "-END2-"]$/;"	v	class:PerceptronTagger
END	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tag/perceptron.py	/^    END = ["-END-", "-END2-"]$/;"	v	class:PerceptronTagger
ENDING_QUOTES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    ENDING_QUOTES = [$/;"	v	class:NLTKWordTokenizer
ENDING_QUOTES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    ENDING_QUOTES = [$/;"	v	class:TreebankWordDetokenizer
ENDING_QUOTES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    ENDING_QUOTES = [$/;"	v	class:TreebankWordTokenizer
ENDING_QUOTES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/destructive.py	/^    ENDING_QUOTES = [$/;"	v	class:NLTKWordTokenizer
ENDING_QUOTES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    ENDING_QUOTES = [$/;"	v	class:TreebankWordDetokenizer
ENDING_QUOTES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/treebank.py	/^    ENDING_QUOTES = [$/;"	v	class:TreebankWordTokenizer
ENOUGH_DATA_THRESHOLD	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/chardistribution.py	/^    ENOUGH_DATA_THRESHOLD = 1024$/;"	v	class:CharDistributionAnalysis
ENOUGH_DATA_THRESHOLD	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/chardistribution.py	/^    ENOUGH_DATA_THRESHOLD = 1024$/;"	v	class:CharDistributionAnalysis
ENOUGH_REL_THRESHOLD	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/jpcntx.py	/^    ENOUGH_REL_THRESHOLD = 100$/;"	v	class:JapaneseContextAnalysis
ENOUGH_REL_THRESHOLD	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/jpcntx.py	/^    ENOUGH_REL_THRESHOLD = 100$/;"	v	class:JapaneseContextAnalysis
ENTAILMENT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ENTAILMENT = 17$/;"	v
ENTAILMENT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/wordnet_app.py	/^ENTAILMENT = 17$/;"	v
ENTITIES_FEATS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^ENTITIES_FEATS = re.compile(r"(\\d)_((?:[\\.\\w\\s\/-](?!\\d_))+)")$/;"	v
ENTITIES_FEATS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/comparative_sents.py	/^ENTITIES_FEATS = re.compile(r"(\\d)_((?:[\\.\\w\\s\/-](?!\\d_))+)")$/;"	v
ENTITY_TYPE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^ENTITY_TYPE = EntityType()$/;"	v
ENTITY_TYPE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^ENTITY_TYPE = EntityType()$/;"	v
ENT_RE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/casual.py	/^ENT_RE = regex.compile(r"&(#?(x?))([^&;\\s]+);")$/;"	v
ENT_RE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/casual.py	/^ENT_RE = regex.compile(r"&(#?(x?))([^&;\\s]+);")$/;"	v
ENV_LOKY_PICKLER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/reduction.py	/^ENV_LOKY_PICKLER = os.environ.get("LOKY_PICKLER", DEFAULT_ENV)$/;"	v
ENV_LOKY_PICKLER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/reduction.py	/^ENV_LOKY_PICKLER = os.environ.get("LOKY_PICKLER", DEFAULT_ENV)$/;"	v
ENV_VAR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ENV_VAR = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI'$/;"	v	class:ContainerProvider
ENV_VAR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ENV_VAR = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI'$/;"	v	class:ContainerProvider
ENV_VAR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ENV_VAR = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI'$/;"	v	class:ContainerProvider
ENV_VAR	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ENV_VAR = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI'$/;"	v	class:ContainerProvider
ENV_VAR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ENV_VAR = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI'$/;"	v	class:ContainerProvider
ENV_VAR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ENV_VAR = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI'$/;"	v	class:ContainerProvider
ENV_VAR_AUTH_TOKEN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ENV_VAR_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN'$/;"	v	class:ContainerProvider
ENV_VAR_AUTH_TOKEN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ENV_VAR_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN'$/;"	v	class:ContainerProvider
ENV_VAR_AUTH_TOKEN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ENV_VAR_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN'$/;"	v	class:ContainerProvider
ENV_VAR_AUTH_TOKEN	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ENV_VAR_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN'$/;"	v	class:ContainerProvider
ENV_VAR_AUTH_TOKEN	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ENV_VAR_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN'$/;"	v	class:ContainerProvider
ENV_VAR_AUTH_TOKEN	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ENV_VAR_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN'$/;"	v	class:ContainerProvider
ENV_VAR_FULL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    ENV_VAR_FULL = 'AWS_CONTAINER_CREDENTIALS_FULL_URI'$/;"	v	class:ContainerProvider
ENV_VAR_FULL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    ENV_VAR_FULL = 'AWS_CONTAINER_CREDENTIALS_FULL_URI'$/;"	v	class:ContainerProvider
ENV_VAR_FULL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    ENV_VAR_FULL = 'AWS_CONTAINER_CREDENTIALS_FULL_URI'$/;"	v	class:ContainerProvider
ENV_VAR_FULL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    ENV_VAR_FULL = 'AWS_CONTAINER_CREDENTIALS_FULL_URI'$/;"	v	class:ContainerProvider
ENV_VAR_FULL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    ENV_VAR_FULL = 'AWS_CONTAINER_CREDENTIALS_FULL_URI'$/;"	v	class:ContainerProvider
ENV_VAR_FULL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    ENV_VAR_FULL = 'AWS_CONTAINER_CREDENTIALS_FULL_URI'$/;"	v	class:ContainerProvider
EN_EM_DASHES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    EN_EM_DASHES = re.compile(u"([–—])"), r" \\1 "$/;"	v	class:ToktokTokenizer
EN_EM_DASHES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/tokenize/toktok.py	/^    EN_EM_DASHES = re.compile(u"([–—])"), r" \\1 "$/;"	v	class:ToktokTokenizer
EOF	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_winconsole.py	/^EOF = b"\\x1a"$/;"	v
EOF	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_winconsole.py	/^EOF = b"\\x1a"$/;"	v
EOS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^EOS = "END-OF-SENTENCE"$/;"	v
EOS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^EOS = "END-OF-SENTENCE"$/;"	v
EPOCH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/tz/tz.py	/^EPOCH = datetime.datetime.utcfromtimestamp(0)$/;"	v
EPOCH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/tz/tz.py	/^EPOCH = datetime.datetime.utcfromtimestamp(0)$/;"	v
EPOCH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/tz/tz.py	/^EPOCH = datetime.datetime.utcfromtimestamp(0)$/;"	v
EPOCH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/tz/tz.py	/^EPOCH = datetime.datetime.utcfromtimestamp(0)$/;"	v
EPOCH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/tz/tz.py	/^EPOCH = datetime.datetime.utcfromtimestamp(0)$/;"	v
EPOCH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/tz/tz.py	/^EPOCH = datetime.datetime.utcfromtimestamp(0)$/;"	v
EPOCHORDINAL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/dateutil/tz/tz.py	/^EPOCHORDINAL = EPOCH.toordinal()$/;"	v
EPOCHORDINAL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/dateutil/tz/tz.py	/^EPOCHORDINAL = EPOCH.toordinal()$/;"	v
EPOCHORDINAL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/dateutil/tz/tz.py	/^EPOCHORDINAL = EPOCH.toordinal()$/;"	v
EPOCHORDINAL	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/dateutil/tz/tz.py	/^EPOCHORDINAL = EPOCH.toordinal()$/;"	v
EPOCHORDINAL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/dateutil/tz/tz.py	/^EPOCHORDINAL = EPOCH.toordinal()$/;"	v
EPOCHORDINAL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/dateutil/tz/tz.py	/^EPOCHORDINAL = EPOCH.toordinal()$/;"	v
EPSILON	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/grammar.py	/^    EPSILON = 0.01$/;"	v	class:PCFG
EPSILON	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/grammar.py	/^    EPSILON = 0.01$/;"	v	class:PCFG
EQ	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    EQ = 18$/;"	v	class:Categories
EQ	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    EQ = 18$/;"	v	class:Categories
ERROR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    ERROR = 1$/;"	v	class:MachineState
ERROR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    ERROR = 1$/;"	v	class:MachineState
ERROR_LOADING_CORPUS_EVENT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/collocations_app.py	/^ERROR_LOADING_CORPUS_EVENT = "<<ELC_EVENT>>"$/;"	v
ERROR_LOADING_CORPUS_EVENT	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/concordance_app.py	/^ERROR_LOADING_CORPUS_EVENT = "<<ELC_EVENT>>"$/;"	v
ERROR_LOADING_CORPUS_EVENT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/collocations_app.py	/^ERROR_LOADING_CORPUS_EVENT = "<<ELC_EVENT>>"$/;"	v
ERROR_LOADING_CORPUS_EVENT	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/concordance_app.py	/^ERROR_LOADING_CORPUS_EVENT = "<<ELC_EVENT>>"$/;"	v
ERROR_NOT_ENOUGH_MEMORY	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_winconsole.py	/^ERROR_NOT_ENOUGH_MEMORY = 8$/;"	v
ERROR_NOT_ENOUGH_MEMORY	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_winconsole.py	/^ERROR_NOT_ENOUGH_MEMORY = 8$/;"	v
ERROR_OPERATION_ABORTED	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_winconsole.py	/^ERROR_OPERATION_ABORTED = 995$/;"	v
ERROR_OPERATION_ABORTED	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_winconsole.py	/^ERROR_OPERATION_ABORTED = 995$/;"	v
ERROR_SUCCESS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_winconsole.py	/^ERROR_SUCCESS = 0$/;"	v
ERROR_SUCCESS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_winconsole.py	/^ERROR_SUCCESS = 0$/;"	v
ESC_ASCII	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/enums.py	/^    ESC_ASCII = 1$/;"	v	class:InputState
ESC_ASCII	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/enums.py	/^    ESC_ASCII = 1$/;"	v	class:InputState
ESC_DETECTOR	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/universaldetector.py	/^    ESC_DETECTOR = re.compile(b'(\\033|~{)')$/;"	v	class:UniversalDetector
ESC_DETECTOR	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/universaldetector.py	/^    ESC_DETECTOR = re.compile(b'(\\033|~{)')$/;"	v	class:UniversalDetector
ESClientResponse	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^class ESClientResponse(aiohttp.ClientResponse):$/;"	c
ESClientResponse	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/http_aiohttp.py	/^class ESClientResponse(aiohttp.ClientResponse):$/;"	c
EUCJPContextAnalysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/jpcntx.py	/^class EUCJPContextAnalysis(JapaneseContextAnalysis):$/;"	c
EUCJPContextAnalysis	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/jpcntx.py	/^class EUCJPContextAnalysis(JapaneseContextAnalysis):$/;"	c
EUCJPDistributionAnalysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/chardistribution.py	/^class EUCJPDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCJPDistributionAnalysis	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/chardistribution.py	/^class EUCJPDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCJPProber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/eucjpprober.py	/^class EUCJPProber(MultiByteCharSetProber):$/;"	c
EUCJPProber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/eucjpprober.py	/^class EUCJPProber(MultiByteCharSetProber):$/;"	c
EUCJP_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_CHAR_LEN_TABLE = (2, 2, 2, 3, 1, 0)$/;"	v
EUCJP_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_CHAR_LEN_TABLE = (2, 2, 2, 3, 1, 0)$/;"	v
EUCJP_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_CLS = ($/;"	v
EUCJP_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_CLS = ($/;"	v
EUCJP_SM_MODEL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_SM_MODEL = {'class_table': EUCJP_CLS,$/;"	v
EUCJP_SM_MODEL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_SM_MODEL = {'class_table': EUCJP_CLS,$/;"	v
EUCJP_ST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_ST = ($/;"	v
EUCJP_ST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCJP_ST = ($/;"	v
EUCKRDistributionAnalysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/chardistribution.py	/^class EUCKRDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCKRDistributionAnalysis	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/chardistribution.py	/^class EUCKRDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCKRProber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euckrprober.py	/^class EUCKRProber(MultiByteCharSetProber):$/;"	c
EUCKRProber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euckrprober.py	/^class EUCKRProber(MultiByteCharSetProber):$/;"	c
EUCKR_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_CHAR_LEN_TABLE = (0, 1, 2, 0)$/;"	v
EUCKR_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_CHAR_LEN_TABLE = (0, 1, 2, 0)$/;"	v
EUCKR_CHAR_TO_FREQ_ORDER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euckrfreq.py	/^EUCKR_CHAR_TO_FREQ_ORDER = ($/;"	v
EUCKR_CHAR_TO_FREQ_ORDER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euckrfreq.py	/^EUCKR_CHAR_TO_FREQ_ORDER = ($/;"	v
EUCKR_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_CLS  = ($/;"	v
EUCKR_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_CLS  = ($/;"	v
EUCKR_SM_MODEL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_SM_MODEL = {'class_table': EUCKR_CLS,$/;"	v
EUCKR_SM_MODEL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_SM_MODEL = {'class_table': EUCKR_CLS,$/;"	v
EUCKR_ST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_ST = ($/;"	v
EUCKR_ST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCKR_ST = ($/;"	v
EUCKR_TABLE_SIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euckrfreq.py	/^EUCKR_TABLE_SIZE = 2352$/;"	v
EUCKR_TABLE_SIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euckrfreq.py	/^EUCKR_TABLE_SIZE = 2352$/;"	v
EUCKR_TYPICAL_DISTRIBUTION_RATIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euckrfreq.py	/^EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0$/;"	v
EUCKR_TYPICAL_DISTRIBUTION_RATIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euckrfreq.py	/^EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0$/;"	v
EUCTWDistributionAnalysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/chardistribution.py	/^class EUCTWDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCTWDistributionAnalysis	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/chardistribution.py	/^class EUCTWDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCTWProber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euctwprober.py	/^class EUCTWProber(MultiByteCharSetProber):$/;"	c
EUCTWProber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euctwprober.py	/^class EUCTWProber(MultiByteCharSetProber):$/;"	c
EUCTW_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_CHAR_LEN_TABLE = (0, 0, 1, 2, 2, 2, 3)$/;"	v
EUCTW_CHAR_LEN_TABLE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_CHAR_LEN_TABLE = (0, 0, 1, 2, 2, 2, 3)$/;"	v
EUCTW_CHAR_TO_FREQ_ORDER	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euctwfreq.py	/^EUCTW_CHAR_TO_FREQ_ORDER = ($/;"	v
EUCTW_CHAR_TO_FREQ_ORDER	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euctwfreq.py	/^EUCTW_CHAR_TO_FREQ_ORDER = ($/;"	v
EUCTW_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_CLS = ($/;"	v
EUCTW_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_CLS = ($/;"	v
EUCTW_SM_MODEL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_SM_MODEL = {'class_table': EUCTW_CLS,$/;"	v
EUCTW_SM_MODEL	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_SM_MODEL = {'class_table': EUCTW_CLS,$/;"	v
EUCTW_ST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_ST = ($/;"	v
EUCTW_ST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/mbcssm.py	/^EUCTW_ST = ($/;"	v
EUCTW_TABLE_SIZE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euctwfreq.py	/^EUCTW_TABLE_SIZE = 5376$/;"	v
EUCTW_TABLE_SIZE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euctwfreq.py	/^EUCTW_TABLE_SIZE = 5376$/;"	v
EUCTW_TYPICAL_DISTRIBUTION_RATIO	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/euctwfreq.py	/^EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
EUCTW_TYPICAL_DISTRIBUTION_RATIO	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/euctwfreq.py	/^EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
EVENT_ALIASES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/utils.py	/^EVENT_ALIASES = {$/;"	v
EVENT_ALIASES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/utils.py	/^EVENT_ALIASES = {$/;"	v
EVENT_ALIASES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/utils.py	/^EVENT_ALIASES = {$/;"	v
EVENT_ALIASES	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/utils.py	/^EVENT_ALIASES = {$/;"	v
EVENT_ALIASES	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/utils.py	/^EVENT_ALIASES = {$/;"	v
EVENT_ALIASES	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/utils.py	/^EVENT_ALIASES = {$/;"	v
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/attr.py	/^    EVENT_NAME = 'resource-shape'$/;"	v	class:ResourceShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/example.py	/^    EVENT_NAME = 'request-example'$/;"	v	class:RequestExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/example.py	/^    EVENT_NAME = 'response-example'$/;"	v	class:ResponseExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/params.py	/^    EVENT_NAME = 'request-params'$/;"	v	class:RequestParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/params.py	/^    EVENT_NAME = 'response-params'$/;"	v	class:ResponseParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/docs/shape.py	/^    EVENT_NAME = ''$/;"	v	class:ShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/attr.py	/^    EVENT_NAME = 'resource-shape'$/;"	v	class:ResourceShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/example.py	/^    EVENT_NAME = 'request-example'$/;"	v	class:RequestExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/example.py	/^    EVENT_NAME = 'response-example'$/;"	v	class:ResponseExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/params.py	/^    EVENT_NAME = 'request-params'$/;"	v	class:RequestParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/params.py	/^    EVENT_NAME = 'response-params'$/;"	v	class:ResponseParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/docs/shape.py	/^    EVENT_NAME = ''$/;"	v	class:ShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/attr.py	/^    EVENT_NAME = 'resource-shape'$/;"	v	class:ResourceShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/example.py	/^    EVENT_NAME = 'request-example'$/;"	v	class:RequestExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/example.py	/^    EVENT_NAME = 'response-example'$/;"	v	class:ResponseExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/params.py	/^    EVENT_NAME = 'request-params'$/;"	v	class:RequestParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/params.py	/^    EVENT_NAME = 'response-params'$/;"	v	class:ResponseParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/docs/shape.py	/^    EVENT_NAME = ''$/;"	v	class:ShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/attr.py	/^    EVENT_NAME = 'resource-shape'$/;"	v	class:ResourceShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/example.py	/^    EVENT_NAME = 'request-example'$/;"	v	class:RequestExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/example.py	/^    EVENT_NAME = 'response-example'$/;"	v	class:ResponseExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/params.py	/^    EVENT_NAME = 'request-params'$/;"	v	class:RequestParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/params.py	/^    EVENT_NAME = 'response-params'$/;"	v	class:ResponseParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/docs/shape.py	/^    EVENT_NAME = ''$/;"	v	class:ShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/attr.py	/^    EVENT_NAME = 'resource-shape'$/;"	v	class:ResourceShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/example.py	/^    EVENT_NAME = 'request-example'$/;"	v	class:RequestExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/example.py	/^    EVENT_NAME = 'response-example'$/;"	v	class:ResponseExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/params.py	/^    EVENT_NAME = 'request-params'$/;"	v	class:RequestParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/params.py	/^    EVENT_NAME = 'response-params'$/;"	v	class:ResponseParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/docs/shape.py	/^    EVENT_NAME = ''$/;"	v	class:ShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/attr.py	/^    EVENT_NAME = 'resource-shape'$/;"	v	class:ResourceShapeDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/example.py	/^    EVENT_NAME = 'request-example'$/;"	v	class:RequestExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/example.py	/^    EVENT_NAME = 'response-example'$/;"	v	class:ResponseExampleDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/params.py	/^    EVENT_NAME = 'request-params'$/;"	v	class:RequestParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/params.py	/^    EVENT_NAME = 'response-params'$/;"	v	class:ResponseParamsDocumenter
EVENT_NAME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/docs/shape.py	/^    EVENT_NAME = ''$/;"	v	class:ShapeDocumenter
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:JSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:RestJSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamXMLParser$/;"	v	class:RestXMLParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = None$/;"	v	class:ResponseParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:JSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:RestJSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamXMLParser$/;"	v	class:RestXMLParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = None$/;"	v	class:ResponseParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:JSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:RestJSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamXMLParser$/;"	v	class:RestXMLParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = None$/;"	v	class:ResponseParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:JSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:RestJSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamXMLParser$/;"	v	class:RestXMLParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = None$/;"	v	class:ResponseParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:JSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:RestJSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamXMLParser$/;"	v	class:RestXMLParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = None$/;"	v	class:ResponseParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:JSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamJSONParser$/;"	v	class:RestJSONParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = EventStreamXMLParser$/;"	v	class:RestXMLParser
EVENT_STREAM_PARSER_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^    EVENT_STREAM_PARSER_CLS = None$/;"	v	class:ResponseParser
EVENT_TYPE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^EVENT_TYPE = EventType()$/;"	v
EVENT_TYPE	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^EVENT_TYPE = EventType()$/;"	v
EXAMPLE_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/docs/service.py	/^    EXAMPLE_PATH = os.path.join(os.path.dirname(boto3.__file__), 'examples')$/;"	v	class:ServiceDocumenter
EXAMPLE_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/docs/service.py	/^    EXAMPLE_PATH = os.path.join(os.path.dirname(boto3.__file__), 'examples')$/;"	v	class:ServiceDocumenter
EXAMPLE_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/docs/service.py	/^    EXAMPLE_PATH = os.path.join(os.path.dirname(boto3.__file__), 'examples')$/;"	v	class:ServiceDocumenter
EXAMPLE_PATH	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/docs/service.py	/^    EXAMPLE_PATH = os.path.join(os.path.dirname(boto3.__file__), 'examples')$/;"	v	class:ServiceDocumenter
EXAMPLE_PATH	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/docs/service.py	/^    EXAMPLE_PATH = os.path.join(os.path.dirname(boto3.__file__), 'examples')$/;"	v	class:ServiceDocumenter
EXAMPLE_PATH	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/docs/service.py	/^    EXAMPLE_PATH = os.path.join(os.path.dirname(boto3.__file__), 'examples')$/;"	v	class:ServiceDocumenter
EXCEPTION_MAP	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retryhandler.py	/^EXCEPTION_MAP = {$/;"	v
EXCEPTION_MAP	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retryhandler.py	/^EXCEPTION_MAP = {$/;"	v
EXCEPTION_MAP	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retryhandler.py	/^EXCEPTION_MAP = {$/;"	v
EXCEPTION_MAP	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retryhandler.py	/^EXCEPTION_MAP = {$/;"	v
EXCEPTION_MAP	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retryhandler.py	/^EXCEPTION_MAP = {$/;"	v
EXCEPTION_MAP	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retryhandler.py	/^EXCEPTION_MAP = {$/;"	v
EXECUTOR_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/futures.py	/^    EXECUTOR_CLS = futures.ThreadPoolExecutor$/;"	v	class:BoundedExecutor
EXECUTOR_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/futures.py	/^    EXECUTOR_CLS = futures.ThreadPoolExecutor$/;"	v	class:BoundedExecutor
EXECUTOR_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/futures.py	/^    EXECUTOR_CLS = futures.ThreadPoolExecutor$/;"	v	class:BoundedExecutor
EXECUTOR_CLS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/futures.py	/^    EXECUTOR_CLS = futures.ThreadPoolExecutor$/;"	v	class:BoundedExecutor
EXECUTOR_CLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/futures.py	/^    EXECUTOR_CLS = futures.ThreadPoolExecutor$/;"	v	class:BoundedExecutor
EXECUTOR_CLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/futures.py	/^    EXECUTOR_CLS = futures.ThreadPoolExecutor$/;"	v	class:BoundedExecutor
EXISTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/inference/tableau.py	/^    EXISTS = 19$/;"	v	class:Categories
EXISTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/hole.py	/^    EXISTS = "EXISTS"$/;"	v	class:Constants
EXISTS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    EXISTS = "exists"$/;"	v	class:Tokens
EXISTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/inference/tableau.py	/^    EXISTS = 19$/;"	v	class:Categories
EXISTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/hole.py	/^    EXISTS = "EXISTS"$/;"	v	class:Constants
EXISTS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    EXISTS = "exists"$/;"	v	class:Tokens
EXISTS_LIST	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^    EXISTS_LIST = ["some", "exists", "exist"]$/;"	v	class:Tokens
EXISTS_LIST	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^    EXISTS_LIST = ["some", "exists", "exist"]$/;"	v	class:Tokens
EXPIRY_TIME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    EXPIRY_TIME = 'AWS_CREDENTIAL_EXPIRATION'$/;"	v	class:EnvProvider
EXPIRY_TIME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    EXPIRY_TIME = 'AWS_CREDENTIAL_EXPIRATION'$/;"	v	class:EnvProvider
EXPIRY_TIME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    EXPIRY_TIME = 'AWS_CREDENTIAL_EXPIRATION'$/;"	v	class:EnvProvider
EXPIRY_TIME	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    EXPIRY_TIME = 'AWS_CREDENTIAL_EXPIRATION'$/;"	v	class:EnvProvider
EXPIRY_TIME	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    EXPIRY_TIME = 'AWS_CREDENTIAL_EXPIRATION'$/;"	v	class:EnvProvider
EXPIRY_TIME	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    EXPIRY_TIME = 'AWS_CREDENTIAL_EXPIRATION'$/;"	v	class:EnvProvider
EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^    EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:AssumeRoleProvider
EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^    EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:AssumeRoleProvider
EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^    EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:AssumeRoleProvider
EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^    EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:AssumeRoleProvider
EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^    EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:AssumeRoleProvider
EXPIRY_WINDOW_SECONDS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^    EXPIRY_WINDOW_SECONDS = 60 * 15$/;"	v	class:AssumeRoleProvider
EXTENDED_ARG	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^EXTENDED_ARG = dis.EXTENDED_ARG$/;"	v
EXTENDED_ARG	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/cloudpickle/cloudpickle.py	/^EXTENDED_ARG = dis.EXTENDED_ARG$/;"	v
EXTERNAL_BACKENDS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/parallel.py	/^EXTERNAL_BACKENDS = {$/;"	v
EXTERNAL_BACKENDS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/parallel.py	/^EXTERNAL_BACKENDS = {$/;"	v
EXTRA_ARGS_TO_HEAD_ARGS_MAPPING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/copies.py	/^    EXTRA_ARGS_TO_HEAD_ARGS_MAPPING = {$/;"	v	class:CopySubmissionTask
EXTRA_ARGS_TO_HEAD_ARGS_MAPPING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/copies.py	/^    EXTRA_ARGS_TO_HEAD_ARGS_MAPPING = {$/;"	v	class:CopySubmissionTask
EXTRA_ARGS_TO_HEAD_ARGS_MAPPING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/copies.py	/^    EXTRA_ARGS_TO_HEAD_ARGS_MAPPING = {$/;"	v	class:CopySubmissionTask
EXTRA_ARGS_TO_HEAD_ARGS_MAPPING	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/copies.py	/^    EXTRA_ARGS_TO_HEAD_ARGS_MAPPING = {$/;"	v	class:CopySubmissionTask
EXTRA_ARGS_TO_HEAD_ARGS_MAPPING	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/copies.py	/^    EXTRA_ARGS_TO_HEAD_ARGS_MAPPING = {$/;"	v	class:CopySubmissionTask
EXTRA_ARGS_TO_HEAD_ARGS_MAPPING	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/copies.py	/^    EXTRA_ARGS_TO_HEAD_ARGS_MAPPING = {$/;"	v	class:CopySubmissionTask
EXTRA_QUEUED_CALLS	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/process_executor.py	/^EXTRA_QUEUED_CALLS = 1$/;"	v
EXTRA_QUEUED_CALLS	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/process_executor.py	/^EXTRA_QUEUED_CALLS = 1$/;"	v
EarleyChartParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/earleychart.py	/^class EarleyChartParser(IncrementalChartParser):$/;"	c
EarleyChartParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/earleychart.py	/^class EarleyChartParser(IncrementalChartParser):$/;"	c
EchoingStdin	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/testing.py	/^class EchoingStdin(object):$/;"	c
EchoingStdin	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/testing.py	/^class EchoingStdin(object):$/;"	c
EdgeI	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class EdgeI(object):$/;"	c
EdgeI	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class EdgeI(object):$/;"	c
EdgeList	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class EdgeList(ColorizedList):$/;"	c
EdgeList	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class EdgeList(ColorizedList):$/;"	c
EdgeRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class EdgeRule(object):$/;"	c
EdgeRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/app/chartparser_app.py	/^class EdgeRule(object):$/;"	c
Editor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/_termui_impl.py	/^class Editor(object):$/;"	c
Editor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/_termui_impl.py	/^class Editor(object):$/;"	c
Elasticsearch	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/__init__.py	/^class Elasticsearch(object):$/;"	c
Elasticsearch	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/__init__.py	/^class Elasticsearch(object):$/;"	c
ElasticsearchDeprecationWarning	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ElasticsearchDeprecationWarning(Warning):$/;"	c
ElasticsearchDeprecationWarning	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ElasticsearchDeprecationWarning(Warning):$/;"	c
ElasticsearchException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ElasticsearchException(Exception):$/;"	c
ElasticsearchException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/exceptions.py	/^class ElasticsearchException(Exception):$/;"	c
ElasticsearchTestCase	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/helpers/test.py	/^class ElasticsearchTestCase(TestCase):$/;"	c
ElasticsearchTestCase	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/helpers/test.py	/^class ElasticsearchTestCase(TestCase):$/;"	c
ElementWrapper	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/internals.py	/^class ElementWrapper(object):$/;"	c
ElementWrapper	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/internals.py	/^class ElementWrapper(object):$/;"	c
EmptyConnectionPool	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class EmptyConnectionPool(ConnectionPool):$/;"	c
EmptyConnectionPool	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/connection_pool.py	/^class EmptyConnectionPool(ConnectionPool):$/;"	c
EmptyExpressionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/jmespath/exceptions.py	/^class EmptyExpressionError(JMESPathError):$/;"	c
EmptyExpressionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/jmespath/exceptions.py	/^class EmptyExpressionError(JMESPathError):$/;"	c
EmptyExpressionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/jmespath/exceptions.py	/^class EmptyExpressionError(JMESPathError):$/;"	c
EmptyExpressionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/jmespath/exceptions.py	/^class EmptyExpressionError(JMESPathError):$/;"	c
EmptyExpressionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/jmespath/exceptions.py	/^class EmptyExpressionError(JMESPathError):$/;"	c
EmptyExpressionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/jmespath/exceptions.py	/^class EmptyExpressionError(JMESPathError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/vendored/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPoolError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmptyPredictRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/parse/chart.py	/^class EmptyPredictRule(AbstractChartRule):$/;"	c
EmptyPredictRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/parse/chart.py	/^class EmptyPredictRule(AbstractChartRule):$/;"	c
EndOfLine	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfLine(ZeroWidthBase):$/;"	c
EndOfLine	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfLine(ZeroWidthBase):$/;"	c
EndOfLineU	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfLineU(EndOfLine):$/;"	c
EndOfLineU	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfLineU(EndOfLine):$/;"	c
EndOfString	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfString(ZeroWidthBase):$/;"	c
EndOfString	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfString(ZeroWidthBase):$/;"	c
EndOfStringLine	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfStringLine(ZeroWidthBase):$/;"	c
EndOfStringLine	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfStringLine(ZeroWidthBase):$/;"	c
EndOfStringLineU	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfStringLineU(EndOfStringLine):$/;"	c
EndOfStringLineU	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfStringLineU(EndOfStringLine):$/;"	c
EndOfWord	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfWord(ZeroWidthBase):$/;"	c
EndOfWord	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/regex/_regex_core.py	/^class EndOfWord(ZeroWidthBase):$/;"	c
Endpoint	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/endpoint.py	/^class Endpoint(object):$/;"	c
Endpoint	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/endpoint.py	/^class Endpoint(object):$/;"	c
Endpoint	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/endpoint.py	/^class Endpoint(object):$/;"	c
Endpoint	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/endpoint.py	/^class Endpoint(object):$/;"	c
Endpoint	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/endpoint.py	/^class Endpoint(object):$/;"	c
Endpoint	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/endpoint.py	/^class Endpoint(object):$/;"	c
EndpointConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class EndpointConnectionError(ConnectionError):$/;"	c
EndpointConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class EndpointConnectionError(ConnectionError):$/;"	c
EndpointConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class EndpointConnectionError(ConnectionError):$/;"	c
EndpointConnectionError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class EndpointConnectionError(ConnectionError):$/;"	c
EndpointConnectionError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class EndpointConnectionError(ConnectionError):$/;"	c
EndpointConnectionError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class EndpointConnectionError(ConnectionError):$/;"	c
EndpointCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/endpoint.py	/^class EndpointCreator(object):$/;"	c
EndpointCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/endpoint.py	/^class EndpointCreator(object):$/;"	c
EndpointCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/endpoint.py	/^class EndpointCreator(object):$/;"	c
EndpointCreator	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/endpoint.py	/^class EndpointCreator(object):$/;"	c
EndpointCreator	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/endpoint.py	/^class EndpointCreator(object):$/;"	c
EndpointCreator	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/endpoint.py	/^class EndpointCreator(object):$/;"	c
EndpointDiscoveryException	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/discovery.py	/^class EndpointDiscoveryException(BotoCoreError):$/;"	c
EndpointDiscoveryException	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/discovery.py	/^class EndpointDiscoveryException(BotoCoreError):$/;"	c
EndpointDiscoveryException	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/discovery.py	/^class EndpointDiscoveryException(BotoCoreError):$/;"	c
EndpointDiscoveryException	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/discovery.py	/^class EndpointDiscoveryException(BotoCoreError):$/;"	c
EndpointDiscoveryException	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryException(BotoCoreError):$/;"	c
EndpointDiscoveryException	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryException(BotoCoreError):$/;"	c
EndpointDiscoveryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/discovery.py	/^class EndpointDiscoveryHandler(object):$/;"	c
EndpointDiscoveryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/discovery.py	/^class EndpointDiscoveryHandler(object):$/;"	c
EndpointDiscoveryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/discovery.py	/^class EndpointDiscoveryHandler(object):$/;"	c
EndpointDiscoveryHandler	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/discovery.py	/^class EndpointDiscoveryHandler(object):$/;"	c
EndpointDiscoveryHandler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryHandler(object):$/;"	c
EndpointDiscoveryHandler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryHandler(object):$/;"	c
EndpointDiscoveryManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/discovery.py	/^class EndpointDiscoveryManager(object):$/;"	c
EndpointDiscoveryManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/discovery.py	/^class EndpointDiscoveryManager(object):$/;"	c
EndpointDiscoveryManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/discovery.py	/^class EndpointDiscoveryManager(object):$/;"	c
EndpointDiscoveryManager	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/discovery.py	/^class EndpointDiscoveryManager(object):$/;"	c
EndpointDiscoveryManager	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryManager(object):$/;"	c
EndpointDiscoveryManager	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryManager(object):$/;"	c
EndpointDiscoveryModel	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/discovery.py	/^class EndpointDiscoveryModel(object):$/;"	c
EndpointDiscoveryModel	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/discovery.py	/^class EndpointDiscoveryModel(object):$/;"	c
EndpointDiscoveryModel	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/discovery.py	/^class EndpointDiscoveryModel(object):$/;"	c
EndpointDiscoveryModel	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/discovery.py	/^class EndpointDiscoveryModel(object):$/;"	c
EndpointDiscoveryModel	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryModel(object):$/;"	c
EndpointDiscoveryModel	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryModel(object):$/;"	c
EndpointDiscoveryRefreshFailed	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/discovery.py	/^class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRefreshFailed	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/discovery.py	/^class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRefreshFailed	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/discovery.py	/^class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRefreshFailed	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/discovery.py	/^class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRefreshFailed	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRefreshFailed	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRequired	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/discovery.py	/^class EndpointDiscoveryRequired(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRequired	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/discovery.py	/^class EndpointDiscoveryRequired(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRequired	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/discovery.py	/^class EndpointDiscoveryRequired(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRequired	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/discovery.py	/^class EndpointDiscoveryRequired(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRequired	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryRequired(EndpointDiscoveryException):$/;"	c
EndpointDiscoveryRequired	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/discovery.py	/^class EndpointDiscoveryRequired(EndpointDiscoveryException):$/;"	c
EndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/regions.py	/^class EndpointResolver(BaseEndpointResolver):$/;"	c
EndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/regions.py	/^class EndpointResolver(BaseEndpointResolver):$/;"	c
EndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/regions.py	/^class EndpointResolver(BaseEndpointResolver):$/;"	c
EndpointResolver	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/regions.py	/^class EndpointResolver(BaseEndpointResolver):$/;"	c
EndpointResolver	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/regions.py	/^class EndpointResolver(BaseEndpointResolver):$/;"	c
EndpointResolver	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/regions.py	/^class EndpointResolver(BaseEndpointResolver):$/;"	c
EnglishStemmer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/stem/snowball.py	/^class EnglishStemmer(_StandardStemmer):$/;"	c
EnglishStemmer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/stem/snowball.py	/^class EnglishStemmer(_StandardStemmer):$/;"	c
EnrichClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/enrich.py	/^class EnrichClient(NamespacedClient):$/;"	c
EnrichClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/enrich.py	/^class EnrichClient(NamespacedClient):$/;"	c
EnrichClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/enrich.py	/^class EnrichClient(NamespacedClient):$/;"	c
EnrichClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/enrich.py	/^class EnrichClient(NamespacedClient):$/;"	c
Entities	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/textblob/_text.py	/^class Entities(lazydict, Rules):$/;"	c
Entities	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/textblob/_text.py	/^class Entities(lazydict, Rules):$/;"	c
EntityType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class EntityType(BasicType):$/;"	c
EntityType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class EntityType(BasicType):$/;"	c
EntryDialog	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/draw/util.py	/^class EntryDialog(object):$/;"	c
EntryDialog	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/draw/util.py	/^class EntryDialog(object):$/;"	c
EnvProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/credentials.py	/^class EnvProvider(CredentialProvider):$/;"	c
EnvProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/credentials.py	/^class EnvProvider(CredentialProvider):$/;"	c
EnvProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/credentials.py	/^class EnvProvider(CredentialProvider):$/;"	c
EnvProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/credentials.py	/^class EnvProvider(CredentialProvider):$/;"	c
EnvProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/credentials.py	/^class EnvProvider(CredentialProvider):$/;"	c
EnvProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/credentials.py	/^class EnvProvider(CredentialProvider):$/;"	c
EnvironmentProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/configprovider.py	/^class EnvironmentProvider(BaseProvider):$/;"	c
EnvironmentProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/configprovider.py	/^class EnvironmentProvider(BaseProvider):$/;"	c
EnvironmentProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/configprovider.py	/^class EnvironmentProvider(BaseProvider):$/;"	c
EnvironmentProvider	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/configprovider.py	/^class EnvironmentProvider(BaseProvider):$/;"	c
EnvironmentProvider	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/configprovider.py	/^class EnvironmentProvider(BaseProvider):$/;"	c
EnvironmentProvider	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/configprovider.py	/^class EnvironmentProvider(BaseProvider):$/;"	c
EqlClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/_async/client/eql.py	/^class EqlClient(NamespacedClient):$/;"	c
EqlClient	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/elasticsearch/client/eql.py	/^class EqlClient(NamespacedClient):$/;"	c
EqlClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/_async/client/eql.py	/^class EqlClient(NamespacedClient):$/;"	c
EqlClient	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/elasticsearch/client/eql.py	/^class EqlClient(NamespacedClient):$/;"	c
EqualityExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class EqualityExpression(BinaryExpression):$/;"	c
EqualityExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class EqualityExpression(BinaryExpression):$/;"	c
Equals	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/boto3/dynamodb/conditions.py	/^class Equals(ComparisonCondition):$/;"	c
Equals	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/boto3/dynamodb/conditions.py	/^class Equals(ComparisonCondition):$/;"	c
Equals	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/boto3/dynamodb/conditions.py	/^class Equals(ComparisonCondition):$/;"	c
Equals	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/boto3/dynamodb/conditions.py	/^class Equals(ComparisonCondition):$/;"	c
Equals	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Equals(ComparisonCondition):$/;"	c
Equals	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/boto3/dynamodb/conditions.py	/^class Equals(ComparisonCondition):$/;"	c
Error	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    class Error(Exception):$/;"	c
Error	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/evaluate.py	/^class Error(Exception):$/;"	c
Error	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    class Error(Exception):$/;"	c
Error	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/evaluate.py	/^class Error(Exception):$/;"	c
ErrorMessage	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/downloader.py	/^class ErrorMessage(DownloaderMessage):$/;"	c
ErrorMessage	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/downloader.py	/^class ErrorMessage(DownloaderMessage):$/;"	c
EscCharSetProber	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/chardet/escprober.py	/^class EscCharSetProber(CharSetProber):$/;"	c
EscCharSetProber	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/chardet/escprober.py	/^class EscCharSetProber(CharSetProber):$/;"	c
EuroparlCorpusReader	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/corpus/reader/plaintext.py	/^class EuroparlCorpusReader(PlaintextCorpusReader):$/;"	c
EuroparlCorpusReader	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/corpus/reader/plaintext.py	/^class EuroparlCorpusReader(PlaintextCorpusReader):$/;"	c
Event	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^        def Event(self):$/;"	f	function:LokyContext.SimpleQueue
Event	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/backend/synchronize.py	/^class Event(object):$/;"	c
Event	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/context.py	/^        def Event(self):$/;"	f	function:LokyContext.SimpleQueue
Event	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/backend/synchronize.py	/^class Event(object):$/;"	c
EventAliaser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/hooks.py	/^class EventAliaser(BaseEventHooks):$/;"	c
EventAliaser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/hooks.py	/^class EventAliaser(BaseEventHooks):$/;"	c
EventAliaser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/hooks.py	/^class EventAliaser(BaseEventHooks):$/;"	c
EventAliaser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/hooks.py	/^class EventAliaser(BaseEventHooks):$/;"	c
EventAliaser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/hooks.py	/^class EventAliaser(BaseEventHooks):$/;"	c
EventAliaser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/hooks.py	/^class EventAliaser(BaseEventHooks):$/;"	c
EventStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class EventStream(object):$/;"	c
EventStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class EventStream(object):$/;"	c
EventStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class EventStream(object):$/;"	c
EventStream	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class EventStream(object):$/;"	c
EventStream	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStream(object):$/;"	c
EventStream	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStream(object):$/;"	c
EventStreamBuffer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class EventStreamBuffer(object):$/;"	c
EventStreamBuffer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class EventStreamBuffer(object):$/;"	c
EventStreamBuffer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class EventStreamBuffer(object):$/;"	c
EventStreamBuffer	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class EventStreamBuffer(object):$/;"	c
EventStreamBuffer	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStreamBuffer(object):$/;"	c
EventStreamBuffer	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStreamBuffer(object):$/;"	c
EventStreamError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/exceptions.py	/^class EventStreamError(ClientError):$/;"	c
EventStreamError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/exceptions.py	/^class EventStreamError(ClientError):$/;"	c
EventStreamError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/exceptions.py	/^class EventStreamError(ClientError):$/;"	c
EventStreamError	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/exceptions.py	/^class EventStreamError(ClientError):$/;"	c
EventStreamError	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/exceptions.py	/^class EventStreamError(ClientError):$/;"	c
EventStreamError	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/exceptions.py	/^class EventStreamError(ClientError):$/;"	c
EventStreamHeaderParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class EventStreamHeaderParser(object):$/;"	c
EventStreamHeaderParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class EventStreamHeaderParser(object):$/;"	c
EventStreamHeaderParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class EventStreamHeaderParser(object):$/;"	c
EventStreamHeaderParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class EventStreamHeaderParser(object):$/;"	c
EventStreamHeaderParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStreamHeaderParser(object):$/;"	c
EventStreamHeaderParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStreamHeaderParser(object):$/;"	c
EventStreamJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):$/;"	c
EventStreamJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):$/;"	c
EventStreamJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):$/;"	c
EventStreamJSONParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):$/;"	c
EventStreamJSONParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):$/;"	c
EventStreamJSONParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):$/;"	c
EventStreamMessage	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/eventstream.py	/^class EventStreamMessage(object):$/;"	c
EventStreamMessage	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/eventstream.py	/^class EventStreamMessage(object):$/;"	c
EventStreamMessage	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/eventstream.py	/^class EventStreamMessage(object):$/;"	c
EventStreamMessage	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/eventstream.py	/^class EventStreamMessage(object):$/;"	c
EventStreamMessage	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStreamMessage(object):$/;"	c
EventStreamMessage	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/eventstream.py	/^class EventStreamMessage(object):$/;"	c
EventStreamXMLParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/parsers.py	/^class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):$/;"	c
EventStreamXMLParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/parsers.py	/^class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):$/;"	c
EventStreamXMLParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/parsers.py	/^class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):$/;"	c
EventStreamXMLParser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/parsers.py	/^class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):$/;"	c
EventStreamXMLParser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/parsers.py	/^class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):$/;"	c
EventStreamXMLParser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/parsers.py	/^class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):$/;"	c
EventType	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class EventType(BasicType):$/;"	c
EventType	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class EventType(BasicType):$/;"	c
EventVariableExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class EventVariableExpression(IndividualVariableExpression):$/;"	c
EventVariableExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class EventVariableExpression(IndividualVariableExpression):$/;"	c
ExceptionRaiser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/botocore/retryhandler.py	/^class ExceptionRaiser(BaseChecker):$/;"	c
ExceptionRaiser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/botocore/retryhandler.py	/^class ExceptionRaiser(BaseChecker):$/;"	c
ExceptionRaiser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/botocore/retryhandler.py	/^class ExceptionRaiser(BaseChecker):$/;"	c
ExceptionRaiser	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/botocore/retryhandler.py	/^class ExceptionRaiser(BaseChecker):$/;"	c
ExceptionRaiser	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/botocore/retryhandler.py	/^class ExceptionRaiser(BaseChecker):$/;"	c
ExceptionRaiser	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/botocore/retryhandler.py	/^class ExceptionRaiser(BaseChecker):$/;"	c
Executor	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    class Executor(object):$/;"	c
Executor	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/joblib/externals/loky/_base.py	/^    class Executor(object):$/;"	c
ExecutorFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/dynamodb/s3transfer/futures.py	/^class ExecutorFuture(object):$/;"	c
ExecutorFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getbottomn/s3transfer/futures.py	/^class ExecutorFuture(object):$/;"	c
ExecutorFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/getsamplepercent/s3transfer/futures.py	/^class ExecutorFuture(object):$/;"	c
ExecutorFuture	TwitterStreamWithAWS/src/LambdaAPIDynamodb/gettopn/s3transfer/futures.py	/^class ExecutorFuture(object):$/;"	c
ExecutorFuture	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/s3transfer/futures.py	/^class ExecutorFuture(object):$/;"	c
ExecutorFuture	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/s3transfer/futures.py	/^class ExecutorFuture(object):$/;"	c
ExistsExpression	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/sem/logic.py	/^class ExistsExpression(QuantifiedExpression):$/;"	c
ExistsExpression	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/sem/logic.py	/^class ExistsExpression(QuantifiedExpression):$/;"	c
Exit	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/click/exceptions.py	/^class Exit(RuntimeError):$/;"	c
Exit	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/click/exceptions.py	/^class Exit(RuntimeError):$/;"	c
ExpandLeftRule	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ExpandLeftRule(RegexpChunkRule):$/;"	c
ExpandLeftRule	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/nltk/chunk/regexp.py	/^class ExpandLeftRule(RegexpChunkRule):$/;"	c
NEGATIVE	'	/^    NEGATIVE = "Negative"$/;"	v	class:Sentiments
NEGATIVE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^    NEGATIVE = "Negative"$/;"	v	class:Sentiments
NEUTRAL	'	/^    NEUTRAL = "Neutral"$/;"	v	class:Sentiments
NEUTRAL	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^    NEUTRAL = "Neutral"$/;"	v	class:Sentiments
POSITIVE	'	/^    POSITIVE = "Positive"$/;"	v	class:Sentiments
POSITIVE	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^    POSITIVE = "Positive"$/;"	v	class:Sentiments
Sentiments	'	/^class Sentiments:$/;"	c
Sentiments	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^class Sentiments:$/;"	c
ShardIterator	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^        ShardIterator=record_response["NextShardIterator"]$/;"	v
_sentiment_analysis	'	/^def _sentiment_analysis(tweet):$/;"	f
_sentiment_analysis	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^def _sentiment_analysis(tweet):$/;"	f
_sentiment_analysis_by_emoticons	'	/^def _sentiment_analysis_by_emoticons(tweet):$/;"	f
_sentiment_analysis_by_emoticons	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^def _sentiment_analysis_by_emoticons(tweet):$/;"	f
_sentiment_analysis_by_text	'	/^def _sentiment_analysis_by_text(tweet):$/;"	f
_sentiment_analysis_by_text	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^def _sentiment_analysis_by_text(tweet):$/;"	f
_sentiment_analysis_polarity	'	/^def _sentiment_analysis_polarity(tweet):$/;"	f
_sentiment_analysis_polarity	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^def _sentiment_analysis_polarity(tweet):$/;"	f
aws_access_key_id	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^    aws_access_key_id=os.environ.get("AWS_ACCESS_KEY_ID"),$/;"	v
aws_secret_access_key	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^    aws_secret_access_key=os.environ.get("AWS_SECRET_ACCESS_KEY"),$/;"	v
bytes_data	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^        bytes_data = record_response["Records"][0]["Data"]$/;"	v
convert_to_dynamodb_format	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^def convert_to_dynamodb_format(tw, platform):$/;"	f
convert_to_dynamodb_format	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^def convert_to_dynamodb_format(tw, platform):$/;"	f
convert_to_dynamodb_format	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^def convert_to_dynamodb_format(tw, platform):$/;"	f
dynamodb_client	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^dynamodb_client = boto3.resource("dynamodb")$/;"	v
dynamodb_client	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^dynamodb_client = boto3.resource("dynamodb")$/;"	v
dynamodb_client	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^dynamodb_client = boto3.resource("dynamodb")$/;"	v
emoticons	'	/^emoticons = {$/;"	v
emoticons	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^emoticons = {$/;"	v
get_kinesis_stream_data	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_api.py	/^def get_kinesis_stream_data(si):$/;"	f
get_reddit_data	'	/^def get_reddit_data(doc):$/;"	f
get_reddit_data	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^def get_reddit_data(doc):$/;"	f
get_tweet	'	/^def get_tweet(doc):$/;"	f
get_tweet_mapping	'	/^def get_tweet_mapping(es_version_number_str):$/;"	f
get_tweet_mapping	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^def get_tweet_mapping(es_version_number_str):$/;"	f
handler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^def handler(event, context):$/;"	f
handler	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^def handler(event, context):$/;"	f
headers	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^headers = {"content-type": "application\/json"}$/;"	v
headers	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^headers = {"content-type": "application\/json"}$/;"	v
headers	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^headers = {"Content-Type": "application\/json"}$/;"	v
id_field	'	/^id_field = "id_str"$/;"	v
id_field	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^id_field = "id_str" # twitter$/;"	v
kinesis_client	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^kinesis_client = boto3.client($/;"	v
kinesis_client	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^kinesis_client = boto3.client("kinesis")$/;"	v
kinesis_client	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^kinesis_client = boto3.client("kinesis")$/;"	v
kinesis_client	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^kinesis_client = boto3.client("kinesis")$/;"	v
lambda_handler	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^def lambda_handler(event, context):$/;"	f
my_shard_iterator	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^my_shard_iterator = shard_iterator["ShardIterator"]$/;"	v
record_response	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_api.py	/^    record_response = get_kinesis_stream_data(record_response["NextShardIterator"])$/;"	v
record_response	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_api.py	/^record_response = get_kinesis_stream_data(shard_iterator)$/;"	v
record_response	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^    record_response = kinesis_client.get_records($/;"	v
record_response	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^record_response = kinesis_client.get_records(ShardIterator=my_shard_iterator)$/;"	v
reddit_id_field	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^reddit_id_field = "id" # twitter$/;"	v
region_name	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^    region_name="us-east-2",  # enter the region$/;"	v
response	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^response = kinesis_client.describe_stream(StreamName=stream_name)$/;"	v
return_all_data_from_kinesis_record	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^def return_all_data_from_kinesis_record() -> int:$/;"	f
s3	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^s3 = boto3.client("s3")$/;"	v
s3	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^s3 = boto3.client("s3")$/;"	v
s3	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^s3 = boto3.client("s3")$/;"	v
shard_id	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_api.py	/^shard_id = json.loads($/;"	v
shard_id	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^shard_id = response["StreamDescription"]["Shards"][0]["ShardId"]$/;"	v
shard_iterator	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_api.py	/^shard_iterator = json.loads($/;"	v
shard_iterator	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^shard_iterator = kinesis_client.get_shard_iterator($/;"	v
stream_name	TwitterStreamWithAWS/src/Consumers/faucovidstream_consume_via_kinesis.py	/^stream_name = "faucovidstreamsentiment_reddit"$/;"	v
table	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger/lambda_function.py	/^table = dynamodb_client.Table("faucovidstream_reddit_with_sentiment")$/;"	v
table	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/lambda_function.py	/^table = dynamodb_client.Table("faucovidstream_reddit_with_sentiment")$/;"	v
table	TwitterStreamWithAWS/src/TwitterDataLambdaS3Trigger/lambda_function.py	/^table = dynamodb_client.Table("faucovidstream_twitter_with_sentiment")$/;"	v
tweet_mapping	'	/^tweet_mapping = {$/;"	v
tweet_mapping	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^tweet_mapping = {$/;"	v
tweet_mapping_v5	'	/^tweet_mapping_v5 = {$/;"	v
tweet_mapping_v5	TwitterStreamWithAWS/src/RedditDataLambdaS3Trigger1/tweet_utils.py	/^tweet_mapping_v5 = {$/;"	v
